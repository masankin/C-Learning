// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Institute.proto

#ifndef PROTOBUF_Institute_2eproto__INCLUDED
#define PROTOBUF_Institute_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace fgame {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Institute_2eproto();
void protobuf_AssignDesc_Institute_2eproto();
void protobuf_ShutdownFile_Institute_2eproto();

class CSProp;
class CSInstituteData;
class CSInstituteInfoReq;
class CSInstituteInfoResp;
class CSInstituteBuyReq;
class CSInstituteBuyResp;

// ===================================================================

class CSProp : public ::google::protobuf::MessageLite {
 public:
  CSProp();
  virtual ~CSProp();

  CSProp(const CSProp& from);

  inline CSProp& operator=(const CSProp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CSProp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSProp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSProp* other);

  // implements Message ----------------------------------------------

  CSProp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSProp& from);
  void MergeFrom(const CSProp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 Count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fgame.CSProp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 count_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Institute_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Institute_2eproto();
  #endif
  friend void protobuf_AssignDesc_Institute_2eproto();
  friend void protobuf_ShutdownFile_Institute_2eproto();

  void InitAsDefaultInstance();
  static CSProp* default_instance_;
};
// -------------------------------------------------------------------

class CSInstituteData : public ::google::protobuf::MessageLite {
 public:
  CSInstituteData();
  virtual ~CSInstituteData();

  CSInstituteData(const CSInstituteData& from);

  inline CSInstituteData& operator=(const CSInstituteData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CSInstituteData& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSInstituteData* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSInstituteData* other);

  // implements Message ----------------------------------------------

  CSInstituteData* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSInstituteData& from);
  void MergeFrom(const CSInstituteData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mType = 1;
  inline bool has_mtype() const;
  inline void clear_mtype();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 mtype() const;
  inline void set_mtype(::google::protobuf::uint32 value);

  // required uint32 Countdown = 2;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 2;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);

  // required uint32 SurpCount = 3;
  inline bool has_surpcount() const;
  inline void clear_surpcount();
  static const int kSurpCountFieldNumber = 3;
  inline ::google::protobuf::uint32 surpcount() const;
  inline void set_surpcount(::google::protobuf::uint32 value);

  // required uint32 Cost = 4;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 4;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fgame.CSInstituteData)
 private:
  inline void set_has_mtype();
  inline void clear_has_mtype();
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_surpcount();
  inline void clear_has_surpcount();
  inline void set_has_cost();
  inline void clear_has_cost();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mtype_;
  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::uint32 surpcount_;
  ::google::protobuf::uint32 cost_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Institute_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Institute_2eproto();
  #endif
  friend void protobuf_AssignDesc_Institute_2eproto();
  friend void protobuf_ShutdownFile_Institute_2eproto();

  void InitAsDefaultInstance();
  static CSInstituteData* default_instance_;
};
// -------------------------------------------------------------------

class CSInstituteInfoReq : public ::google::protobuf::MessageLite {
 public:
  CSInstituteInfoReq();
  virtual ~CSInstituteInfoReq();

  CSInstituteInfoReq(const CSInstituteInfoReq& from);

  inline CSInstituteInfoReq& operator=(const CSInstituteInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CSInstituteInfoReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSInstituteInfoReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSInstituteInfoReq* other);

  // implements Message ----------------------------------------------

  CSInstituteInfoReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSInstituteInfoReq& from);
  void MergeFrom(const CSInstituteInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:fgame.CSInstituteInfoReq)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Institute_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Institute_2eproto();
  #endif
  friend void protobuf_AssignDesc_Institute_2eproto();
  friend void protobuf_ShutdownFile_Institute_2eproto();

  void InitAsDefaultInstance();
  static CSInstituteInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInstituteInfoResp : public ::google::protobuf::MessageLite {
 public:
  CSInstituteInfoResp();
  virtual ~CSInstituteInfoResp();

  CSInstituteInfoResp(const CSInstituteInfoResp& from);

  inline CSInstituteInfoResp& operator=(const CSInstituteInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CSInstituteInfoResp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSInstituteInfoResp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSInstituteInfoResp* other);

  // implements Message ----------------------------------------------

  CSInstituteInfoResp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSInstituteInfoResp& from);
  void MergeFrom(const CSInstituteInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fgame.CSInstituteData info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::fgame::CSInstituteData& info(int index) const;
  inline ::fgame::CSInstituteData* mutable_info(int index);
  inline ::fgame::CSInstituteData* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::fgame::CSInstituteData >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::fgame::CSInstituteData >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:fgame.CSInstituteInfoResp)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::fgame::CSInstituteData > info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Institute_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Institute_2eproto();
  #endif
  friend void protobuf_AssignDesc_Institute_2eproto();
  friend void protobuf_ShutdownFile_Institute_2eproto();

  void InitAsDefaultInstance();
  static CSInstituteInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class CSInstituteBuyReq : public ::google::protobuf::MessageLite {
 public:
  CSInstituteBuyReq();
  virtual ~CSInstituteBuyReq();

  CSInstituteBuyReq(const CSInstituteBuyReq& from);

  inline CSInstituteBuyReq& operator=(const CSInstituteBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CSInstituteBuyReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSInstituteBuyReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSInstituteBuyReq* other);

  // implements Message ----------------------------------------------

  CSInstituteBuyReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSInstituteBuyReq& from);
  void MergeFrom(const CSInstituteBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mType = 1;
  inline bool has_mtype() const;
  inline void clear_mtype();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 mtype() const;
  inline void set_mtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fgame.CSInstituteBuyReq)
 private:
  inline void set_has_mtype();
  inline void clear_has_mtype();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mtype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Institute_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Institute_2eproto();
  #endif
  friend void protobuf_AssignDesc_Institute_2eproto();
  friend void protobuf_ShutdownFile_Institute_2eproto();

  void InitAsDefaultInstance();
  static CSInstituteBuyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInstituteBuyResp : public ::google::protobuf::MessageLite {
 public:
  CSInstituteBuyResp();
  virtual ~CSInstituteBuyResp();

  CSInstituteBuyResp(const CSInstituteBuyResp& from);

  inline CSInstituteBuyResp& operator=(const CSInstituteBuyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CSInstituteBuyResp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSInstituteBuyResp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSInstituteBuyResp* other);

  // implements Message ----------------------------------------------

  CSInstituteBuyResp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSInstituteBuyResp& from);
  void MergeFrom(const CSInstituteBuyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Countdown = 2;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 2;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);

  // required uint32 SurpCount = 3;
  inline bool has_surpcount() const;
  inline void clear_surpcount();
  static const int kSurpCountFieldNumber = 3;
  inline ::google::protobuf::uint32 surpcount() const;
  inline void set_surpcount(::google::protobuf::uint32 value);

  // repeated .fgame.CSProp ItemList = 1;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 1;
  inline const ::fgame::CSProp& itemlist(int index) const;
  inline ::fgame::CSProp* mutable_itemlist(int index);
  inline ::fgame::CSProp* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::fgame::CSProp >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::fgame::CSProp >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:fgame.CSInstituteBuyResp)
 private:
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_surpcount();
  inline void clear_has_surpcount();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::uint32 surpcount_;
  ::google::protobuf::RepeatedPtrField< ::fgame::CSProp > itemlist_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Institute_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Institute_2eproto();
  #endif
  friend void protobuf_AssignDesc_Institute_2eproto();
  friend void protobuf_ShutdownFile_Institute_2eproto();

  void InitAsDefaultInstance();
  static CSInstituteBuyResp* default_instance_;
};
// ===================================================================


// ===================================================================

// CSProp

// required uint32 Id = 1;
inline bool CSProp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSProp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSProp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSProp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSProp::id() const {
  // @@protoc_insertion_point(field_get:fgame.CSProp.Id)
  return id_;
}
inline void CSProp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSProp.Id)
}

// required uint32 Type = 2;
inline bool CSProp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSProp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSProp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSProp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSProp::type() const {
  // @@protoc_insertion_point(field_get:fgame.CSProp.Type)
  return type_;
}
inline void CSProp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSProp.Type)
}

// required uint32 Count = 3;
inline bool CSProp::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSProp::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSProp::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSProp::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CSProp::count() const {
  // @@protoc_insertion_point(field_get:fgame.CSProp.Count)
  return count_;
}
inline void CSProp::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSProp.Count)
}

// -------------------------------------------------------------------

// CSInstituteData

// required uint32 mType = 1;
inline bool CSInstituteData::has_mtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstituteData::set_has_mtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstituteData::clear_has_mtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstituteData::clear_mtype() {
  mtype_ = 0u;
  clear_has_mtype();
}
inline ::google::protobuf::uint32 CSInstituteData::mtype() const {
  // @@protoc_insertion_point(field_get:fgame.CSInstituteData.mType)
  return mtype_;
}
inline void CSInstituteData::set_mtype(::google::protobuf::uint32 value) {
  set_has_mtype();
  mtype_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSInstituteData.mType)
}

// required uint32 Countdown = 2;
inline bool CSInstituteData::has_countdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstituteData::set_has_countdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstituteData::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstituteData::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 CSInstituteData::countdown() const {
  // @@protoc_insertion_point(field_get:fgame.CSInstituteData.Countdown)
  return countdown_;
}
inline void CSInstituteData::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSInstituteData.Countdown)
}

// required uint32 SurpCount = 3;
inline bool CSInstituteData::has_surpcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSInstituteData::set_has_surpcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSInstituteData::clear_has_surpcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSInstituteData::clear_surpcount() {
  surpcount_ = 0u;
  clear_has_surpcount();
}
inline ::google::protobuf::uint32 CSInstituteData::surpcount() const {
  // @@protoc_insertion_point(field_get:fgame.CSInstituteData.SurpCount)
  return surpcount_;
}
inline void CSInstituteData::set_surpcount(::google::protobuf::uint32 value) {
  set_has_surpcount();
  surpcount_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSInstituteData.SurpCount)
}

// required uint32 Cost = 4;
inline bool CSInstituteData::has_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSInstituteData::set_has_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSInstituteData::clear_has_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSInstituteData::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 CSInstituteData::cost() const {
  // @@protoc_insertion_point(field_get:fgame.CSInstituteData.Cost)
  return cost_;
}
inline void CSInstituteData::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSInstituteData.Cost)
}

// -------------------------------------------------------------------

// CSInstituteInfoReq

// -------------------------------------------------------------------

// CSInstituteInfoResp

// repeated .fgame.CSInstituteData info = 1;
inline int CSInstituteInfoResp::info_size() const {
  return info_.size();
}
inline void CSInstituteInfoResp::clear_info() {
  info_.Clear();
}
inline const ::fgame::CSInstituteData& CSInstituteInfoResp::info(int index) const {
  // @@protoc_insertion_point(field_get:fgame.CSInstituteInfoResp.info)
  return info_.Get(index);
}
inline ::fgame::CSInstituteData* CSInstituteInfoResp::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:fgame.CSInstituteInfoResp.info)
  return info_.Mutable(index);
}
inline ::fgame::CSInstituteData* CSInstituteInfoResp::add_info() {
  // @@protoc_insertion_point(field_add:fgame.CSInstituteInfoResp.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fgame::CSInstituteData >&
CSInstituteInfoResp::info() const {
  // @@protoc_insertion_point(field_list:fgame.CSInstituteInfoResp.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::fgame::CSInstituteData >*
CSInstituteInfoResp::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:fgame.CSInstituteInfoResp.info)
  return &info_;
}

// -------------------------------------------------------------------

// CSInstituteBuyReq

// required uint32 mType = 1;
inline bool CSInstituteBuyReq::has_mtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstituteBuyReq::set_has_mtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstituteBuyReq::clear_has_mtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstituteBuyReq::clear_mtype() {
  mtype_ = 0u;
  clear_has_mtype();
}
inline ::google::protobuf::uint32 CSInstituteBuyReq::mtype() const {
  // @@protoc_insertion_point(field_get:fgame.CSInstituteBuyReq.mType)
  return mtype_;
}
inline void CSInstituteBuyReq::set_mtype(::google::protobuf::uint32 value) {
  set_has_mtype();
  mtype_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSInstituteBuyReq.mType)
}

// -------------------------------------------------------------------

// CSInstituteBuyResp

// required uint32 Countdown = 2;
inline bool CSInstituteBuyResp::has_countdown() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstituteBuyResp::set_has_countdown() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstituteBuyResp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstituteBuyResp::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 CSInstituteBuyResp::countdown() const {
  // @@protoc_insertion_point(field_get:fgame.CSInstituteBuyResp.Countdown)
  return countdown_;
}
inline void CSInstituteBuyResp::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSInstituteBuyResp.Countdown)
}

// required uint32 SurpCount = 3;
inline bool CSInstituteBuyResp::has_surpcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstituteBuyResp::set_has_surpcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstituteBuyResp::clear_has_surpcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstituteBuyResp::clear_surpcount() {
  surpcount_ = 0u;
  clear_has_surpcount();
}
inline ::google::protobuf::uint32 CSInstituteBuyResp::surpcount() const {
  // @@protoc_insertion_point(field_get:fgame.CSInstituteBuyResp.SurpCount)
  return surpcount_;
}
inline void CSInstituteBuyResp::set_surpcount(::google::protobuf::uint32 value) {
  set_has_surpcount();
  surpcount_ = value;
  // @@protoc_insertion_point(field_set:fgame.CSInstituteBuyResp.SurpCount)
}

// repeated .fgame.CSProp ItemList = 1;
inline int CSInstituteBuyResp::itemlist_size() const {
  return itemlist_.size();
}
inline void CSInstituteBuyResp::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::fgame::CSProp& CSInstituteBuyResp::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:fgame.CSInstituteBuyResp.ItemList)
  return itemlist_.Get(index);
}
inline ::fgame::CSProp* CSInstituteBuyResp::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:fgame.CSInstituteBuyResp.ItemList)
  return itemlist_.Mutable(index);
}
inline ::fgame::CSProp* CSInstituteBuyResp::add_itemlist() {
  // @@protoc_insertion_point(field_add:fgame.CSInstituteBuyResp.ItemList)
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fgame::CSProp >&
CSInstituteBuyResp::itemlist() const {
  // @@protoc_insertion_point(field_list:fgame.CSInstituteBuyResp.ItemList)
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::fgame::CSProp >*
CSInstituteBuyResp::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:fgame.CSInstituteBuyResp.ItemList)
  return &itemlist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace fgame

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Institute_2eproto__INCLUDED
