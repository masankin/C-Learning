#include "lua_mgame_auto.hpp"
#include "lua_headers.h"
#include "tolua_fix.h"
#include "LuaBasicConversions.h"



int lua_mgame_SoundManager_playMusicEffect(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_playMusicEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eMusicType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "SoundManager:playMusicEffect");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_playMusicEffect'", nullptr);
            return 0;
        }
        unsigned int ret = cobj->playMusicEffect(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    if (argc == 2) 
    {
        eMusicType arg0;
        bool arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "SoundManager:playMusicEffect");

        ok &= luaval_to_boolean(tolua_S, 3,&arg1, "SoundManager:playMusicEffect");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_playMusicEffect'", nullptr);
            return 0;
        }
        unsigned int ret = cobj->playMusicEffect(arg0, arg1);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:playMusicEffect",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_playMusicEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_getEffectsVolume(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_getEffectsVolume'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_getEffectsVolume'", nullptr);
            return 0;
        }
        double ret = cobj->getEffectsVolume();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:getEffectsVolume",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_getEffectsVolume'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_stopMusicEffect(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_stopMusicEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned int arg0;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "SoundManager:stopMusicEffect");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_stopMusicEffect'", nullptr);
            return 0;
        }
        cobj->stopMusicEffect(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:stopMusicEffect",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_stopMusicEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_setBackgroundMusicVolume(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_setBackgroundMusicVolume'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "SoundManager:setBackgroundMusicVolume");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_setBackgroundMusicVolume'", nullptr);
            return 0;
        }
        cobj->setBackgroundMusicVolume(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:setBackgroundMusicVolume",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_setBackgroundMusicVolume'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_getIsPlayMusicBg(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_getIsPlayMusicBg'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_getIsPlayMusicBg'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsPlayMusicBg();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:getIsPlayMusicBg",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_getIsPlayMusicBg'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_getBackgroundMusicVolume(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_getBackgroundMusicVolume'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_getBackgroundMusicVolume'", nullptr);
            return 0;
        }
        double ret = cobj->getBackgroundMusicVolume();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:getBackgroundMusicVolume",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_getBackgroundMusicVolume'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_setCanPlayMusic(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_setCanPlayMusic'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "SoundManager:setCanPlayMusic");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_setCanPlayMusic'", nullptr);
            return 0;
        }
        cobj->setCanPlayMusic(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:setCanPlayMusic",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_setCanPlayMusic'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_setIsPlayMusicEffect(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_setIsPlayMusicEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "SoundManager:setIsPlayMusicEffect");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_setIsPlayMusicEffect'", nullptr);
            return 0;
        }
        cobj->setIsPlayMusicEffect(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:setIsPlayMusicEffect",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_setIsPlayMusicEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_playMusicBg(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_playMusicBg'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "SoundManager:playMusicBg");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_playMusicBg'", nullptr);
            return 0;
        }
        cobj->playMusicBg(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "SoundManager:playMusicBg");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "SoundManager:playMusicBg");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_playMusicBg'", nullptr);
            return 0;
        }
        cobj->playMusicBg(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:playMusicBg",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_playMusicBg'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_pauseAllEffects(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_pauseAllEffects'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_pauseAllEffects'", nullptr);
            return 0;
        }
        cobj->pauseAllEffects();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:pauseAllEffects",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_pauseAllEffects'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_stopBattleEffect(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_stopBattleEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_stopBattleEffect'", nullptr);
            return 0;
        }
        cobj->stopBattleEffect();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:stopBattleEffect",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_stopBattleEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_setIsPlayMusicBg(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_setIsPlayMusicBg'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "SoundManager:setIsPlayMusicBg");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_setIsPlayMusicBg'", nullptr);
            return 0;
        }
        cobj->setIsPlayMusicBg(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:setIsPlayMusicBg",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_setIsPlayMusicBg'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_stopMusicBg(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_stopMusicBg'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_stopMusicBg'", nullptr);
            return 0;
        }
        cobj->stopMusicBg();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:stopMusicBg",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_stopMusicBg'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_update(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "SoundManager:update");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_update'", nullptr);
            return 0;
        }
        cobj->update(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:update",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_beganBattleEffect(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_beganBattleEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_beganBattleEffect'", nullptr);
            return 0;
        }
        cobj->beganBattleEffect();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:beganBattleEffect",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_beganBattleEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_resumeMusicEffect(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_resumeMusicEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned int arg0;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "SoundManager:resumeMusicEffect");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_resumeMusicEffect'", nullptr);
            return 0;
        }
        cobj->resumeMusicEffect(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:resumeMusicEffect",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_resumeMusicEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_pauseMusicEffect(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_pauseMusicEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned int arg0;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "SoundManager:pauseMusicEffect");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_pauseMusicEffect'", nullptr);
            return 0;
        }
        cobj->pauseMusicEffect(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:pauseMusicEffect",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_pauseMusicEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_playLastMusicBg(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_playLastMusicBg'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_playLastMusicBg'", nullptr);
            return 0;
        }
        cobj->playLastMusicBg();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:playLastMusicBg",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_playLastMusicBg'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_getIsPlayMusicEffect(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_getIsPlayMusicEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_getIsPlayMusicEffect'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsPlayMusicEffect();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:getIsPlayMusicEffect",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_getIsPlayMusicEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_stopAllMusicEffects(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_stopAllMusicEffects'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_stopAllMusicEffects'", nullptr);
            return 0;
        }
        cobj->stopAllMusicEffects();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:stopAllMusicEffects",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_stopAllMusicEffects'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_setEffectsVolume(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_setEffectsVolume'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "SoundManager:setEffectsVolume");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_setEffectsVolume'", nullptr);
            return 0;
        }
        cobj->setEffectsVolume(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:setEffectsVolume",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_setEffectsVolume'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_setEffectToLastState(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_setEffectToLastState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_setEffectToLastState'", nullptr);
            return 0;
        }
        cobj->setEffectToLastState();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:setEffectToLastState",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_setEffectToLastState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_resumeAllEffects(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_resumeAllEffects'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_resumeAllEffects'", nullptr);
            return 0;
        }
        cobj->resumeAllEffects();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:resumeAllEffects",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_resumeAllEffects'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_delayPlayEffect(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_delayPlayEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        eMusicType arg0;
        double arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "SoundManager:delayPlayEffect");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "SoundManager:delayPlayEffect");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_delayPlayEffect'", nullptr);
            return 0;
        }
        cobj->delayPlayEffect(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:delayPlayEffect",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_delayPlayEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_getCanPlayMusic(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SoundManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SoundManager_getCanPlayMusic'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_getCanPlayMusic'", nullptr);
            return 0;
        }
        bool ret = cobj->getCanPlayMusic();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:getCanPlayMusic",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_getCanPlayMusic'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SoundManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    SoundManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SoundManager_constructor'", nullptr);
            return 0;
        }
        cobj = new SoundManager();
        tolua_pushusertype(tolua_S,(void*)cobj,"SoundManager");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SoundManager:SoundManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SoundManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_SoundManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (SoundManager)");
    return 0;
}

int lua_register_mgame_SoundManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"SoundManager");
    tolua_cclass(tolua_S,"SoundManager","SoundManager","",nullptr);

    tolua_beginmodule(tolua_S,"SoundManager");
        tolua_function(tolua_S,"new",lua_mgame_SoundManager_constructor);
        tolua_function(tolua_S,"playMusicEffect",lua_mgame_SoundManager_playMusicEffect);
        tolua_function(tolua_S,"getEffectsVolume",lua_mgame_SoundManager_getEffectsVolume);
        tolua_function(tolua_S,"stopMusicEffect",lua_mgame_SoundManager_stopMusicEffect);
        tolua_function(tolua_S,"setBackgroundMusicVolume",lua_mgame_SoundManager_setBackgroundMusicVolume);
        tolua_function(tolua_S,"getIsPlayMusicBg",lua_mgame_SoundManager_getIsPlayMusicBg);
        tolua_function(tolua_S,"getBackgroundMusicVolume",lua_mgame_SoundManager_getBackgroundMusicVolume);
        tolua_function(tolua_S,"setCanPlayMusic",lua_mgame_SoundManager_setCanPlayMusic);
        tolua_function(tolua_S,"setIsPlayMusicEffect",lua_mgame_SoundManager_setIsPlayMusicEffect);
        tolua_function(tolua_S,"playMusicBg",lua_mgame_SoundManager_playMusicBg);
        tolua_function(tolua_S,"pauseAllEffects",lua_mgame_SoundManager_pauseAllEffects);
        tolua_function(tolua_S,"stopBattleEffect",lua_mgame_SoundManager_stopBattleEffect);
        tolua_function(tolua_S,"setIsPlayMusicBg",lua_mgame_SoundManager_setIsPlayMusicBg);
        tolua_function(tolua_S,"stopMusicBg",lua_mgame_SoundManager_stopMusicBg);
        tolua_function(tolua_S,"update",lua_mgame_SoundManager_update);
        tolua_function(tolua_S,"beganBattleEffect",lua_mgame_SoundManager_beganBattleEffect);
        tolua_function(tolua_S,"resumeMusicEffect",lua_mgame_SoundManager_resumeMusicEffect);
        tolua_function(tolua_S,"pauseMusicEffect",lua_mgame_SoundManager_pauseMusicEffect);
        tolua_function(tolua_S,"playLastMusicBg",lua_mgame_SoundManager_playLastMusicBg);
        tolua_function(tolua_S,"getIsPlayMusicEffect",lua_mgame_SoundManager_getIsPlayMusicEffect);
        tolua_function(tolua_S,"stopAllMusicEffects",lua_mgame_SoundManager_stopAllMusicEffects);
        tolua_function(tolua_S,"setEffectsVolume",lua_mgame_SoundManager_setEffectsVolume);
        tolua_function(tolua_S,"setEffectToLastState",lua_mgame_SoundManager_setEffectToLastState);
        tolua_function(tolua_S,"resumeAllEffects",lua_mgame_SoundManager_resumeAllEffects);
        tolua_function(tolua_S,"delayPlayEffect",lua_mgame_SoundManager_delayPlayEffect);
        tolua_function(tolua_S,"getCanPlayMusic",lua_mgame_SoundManager_getCanPlayMusic);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(SoundManager).name();
    g_luaType[typeName] = "SoundManager";
    g_typeCast["SoundManager"] = "SoundManager";
    return 1;
}

int lua_mgame_GameMessage_getMessageType(lua_State* tolua_S)
{
    int argc = 0;
    GameMessage* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GameMessage",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GameMessage*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GameMessage_getMessageType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GameMessage_getMessageType'", nullptr);
            return 0;
        }
        int ret = cobj->getMessageType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GameMessage:getMessageType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GameMessage_getMessageType'.",&tolua_err);
#endif

    return 0;
}
static int lua_mgame_GameMessage_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (GameMessage)");
    return 0;
}

int lua_register_mgame_GameMessage(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"GameMessage");
    tolua_cclass(tolua_S,"GameMessage","GameMessage","",nullptr);

    tolua_beginmodule(tolua_S,"GameMessage");
        tolua_function(tolua_S,"getMessageType",lua_mgame_GameMessage_getMessageType);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(GameMessage).name();
    g_luaType[typeName] = "GameMessage";
    g_typeCast["GameMessage"] = "GameMessage";
    return 1;
}

int lua_mgame_MessageHandler_onReceiveMassage(lua_State* tolua_S)
{
    int argc = 0;
    MessageHandler* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageHandler",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageHandler*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageHandler_onReceiveMassage'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        GameMessage* arg0;

        ok &= luaval_to_object<GameMessage>(tolua_S, 2, "GameMessage",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageHandler_onReceiveMassage'", nullptr);
            return 0;
        }
        cobj->onReceiveMassage(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageHandler:onReceiveMassage",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageHandler_onReceiveMassage'.",&tolua_err);
#endif

    return 0;
}
static int lua_mgame_MessageHandler_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (MessageHandler)");
    return 0;
}

int lua_register_mgame_MessageHandler(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"MessageHandler");
    tolua_cclass(tolua_S,"MessageHandler","MessageHandler","",nullptr);

    tolua_beginmodule(tolua_S,"MessageHandler");
        tolua_function(tolua_S,"onReceiveMassage",lua_mgame_MessageHandler_onReceiveMassage);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(MessageHandler).name();
    g_luaType[typeName] = "MessageHandler";
    g_typeCast["MessageHandler"] = "MessageHandler";
    return 1;
}

int lua_mgame_GameMessageFactory_create(lua_State* tolua_S)
{
    int argc = 0;
    GameMessageFactory* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GameMessageFactory",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GameMessageFactory*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GameMessageFactory_create'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GameMessageFactory:create");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GameMessageFactory_create'", nullptr);
            return 0;
        }
        GameMessage* ret = cobj->create(arg0);
        object_to_luaval<GameMessage>(tolua_S, "GameMessage",(GameMessage*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GameMessageFactory:create",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GameMessageFactory_create'.",&tolua_err);
#endif

    return 0;
}
static int lua_mgame_GameMessageFactory_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (GameMessageFactory)");
    return 0;
}

int lua_register_mgame_GameMessageFactory(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"GameMessageFactory");
    tolua_cclass(tolua_S,"GameMessageFactory","GameMessageFactory","",nullptr);

    tolua_beginmodule(tolua_S,"GameMessageFactory");
        tolua_function(tolua_S,"create",lua_mgame_GameMessageFactory_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(GameMessageFactory).name();
    g_luaType[typeName] = "GameMessageFactory";
    g_typeCast["GameMessageFactory"] = "GameMessageFactory";
    return 1;
}

int lua_mgame_MessageAchieveTip_setIsShow(lua_State* tolua_S)
{
    int argc = 0;
    MessageAchieveTip* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageAchieveTip",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageAchieveTip*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageAchieveTip_setIsShow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "MessageAchieveTip:setIsShow");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageAchieveTip_setIsShow'", nullptr);
            return 0;
        }
        cobj->setIsShow(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageAchieveTip:setIsShow",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageAchieveTip_setIsShow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageAchieveTip_getBtnType(lua_State* tolua_S)
{
    int argc = 0;
    MessageAchieveTip* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageAchieveTip",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageAchieveTip*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageAchieveTip_getBtnType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageAchieveTip_getBtnType'", nullptr);
            return 0;
        }
        int ret = cobj->getBtnType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageAchieveTip:getBtnType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageAchieveTip_getBtnType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageAchieveTip_setBtnType(lua_State* tolua_S)
{
    int argc = 0;
    MessageAchieveTip* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageAchieveTip",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageAchieveTip*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageAchieveTip_setBtnType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "MessageAchieveTip:setBtnType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageAchieveTip_setBtnType'", nullptr);
            return 0;
        }
        cobj->setBtnType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageAchieveTip:setBtnType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageAchieveTip_setBtnType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageAchieveTip_getIsShow(lua_State* tolua_S)
{
    int argc = 0;
    MessageAchieveTip* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageAchieveTip",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageAchieveTip*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageAchieveTip_getIsShow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageAchieveTip_getIsShow'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsShow();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageAchieveTip:getIsShow",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageAchieveTip_getIsShow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageAchieveTip_getMessageType(lua_State* tolua_S)
{
    int argc = 0;
    MessageAchieveTip* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageAchieveTip",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageAchieveTip*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageAchieveTip_getMessageType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageAchieveTip_getMessageType'", nullptr);
            return 0;
        }
        int ret = cobj->getMessageType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageAchieveTip:getMessageType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageAchieveTip_getMessageType'.",&tolua_err);
#endif

    return 0;
}
static int lua_mgame_MessageAchieveTip_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (MessageAchieveTip)");
    return 0;
}

int lua_register_mgame_MessageAchieveTip(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"MessageAchieveTip");
    tolua_cclass(tolua_S,"MessageAchieveTip","MessageAchieveTip","GameMessage",nullptr);

    tolua_beginmodule(tolua_S,"MessageAchieveTip");
        tolua_function(tolua_S,"setIsShow",lua_mgame_MessageAchieveTip_setIsShow);
        tolua_function(tolua_S,"getBtnType",lua_mgame_MessageAchieveTip_getBtnType);
        tolua_function(tolua_S,"setBtnType",lua_mgame_MessageAchieveTip_setBtnType);
        tolua_function(tolua_S,"getIsShow",lua_mgame_MessageAchieveTip_getIsShow);
        tolua_function(tolua_S,"getMessageType",lua_mgame_MessageAchieveTip_getMessageType);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(MessageAchieveTip).name();
    g_luaType[typeName] = "MessageAchieveTip";
    g_typeCast["MessageAchieveTip"] = "MessageAchieveTip";
    return 1;
}

int lua_mgame_PageBase_setUIRoot(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageBase",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageBase*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageBase_setUIRoot'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Node* arg0;

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 2, "cc.Node",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_setUIRoot'", nullptr);
            return 0;
        }
        cobj->setUIRoot(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:setUIRoot",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_setUIRoot'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageBase_onKeyReleased(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageBase",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageBase*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageBase_onKeyReleased'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        cocos2d::EventKeyboard::KeyCode arg0;
        cocos2d::Event* arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageBase:onKeyReleased");

        ok &= luaval_to_object<cocos2d::Event>(tolua_S, 3, "cc.Event",&arg1);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_onKeyReleased'", nullptr);
            return 0;
        }
        cobj->onKeyReleased(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:onKeyReleased",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_onKeyReleased'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageBase_onShow(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageBase",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageBase*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageBase_onShow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_onShow'", nullptr);
            return 0;
        }
        cobj->onShow();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:onShow",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_onShow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageBase_onClose(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageBase",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageBase*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageBase_onClose'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_onClose'", nullptr);
            return 0;
        }
        cobj->onClose();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:onClose",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_onClose'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageBase_init(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageBase",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageBase*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageBase_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_init'", nullptr);
            return 0;
        }
        bool ret = cobj->init();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageBase_onExitTransitionDidStart(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageBase",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageBase*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageBase_onExitTransitionDidStart'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_onExitTransitionDidStart'", nullptr);
            return 0;
        }
        cobj->onExitTransitionDidStart();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:onExitTransitionDidStart",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_onExitTransitionDidStart'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageBase_onLocateClickCallback(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageBase",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageBase*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageBase_onLocateClickCallback'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Node* arg0;

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 2, "cc.Node",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_onLocateClickCallback'", nullptr);
            return 0;
        }
        cobj->onLocateClickCallback(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:onLocateClickCallback",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_onLocateClickCallback'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageBase_onEnterTransitionDidFinish(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageBase",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageBase*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageBase_onEnterTransitionDidFinish'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_onEnterTransitionDidFinish'", nullptr);
            return 0;
        }
        cobj->onEnterTransitionDidFinish();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:onEnterTransitionDidFinish",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_onEnterTransitionDidFinish'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageBase_getUIRoot(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageBase",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageBase*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageBase_getUIRoot'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_getUIRoot'", nullptr);
            return 0;
        }
        cocos2d::Node* ret = cobj->getUIRoot();
        object_to_luaval<cocos2d::Node>(tolua_S, "cc.Node",(cocos2d::Node*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:getUIRoot",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_getUIRoot'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageBase_constructor(lua_State* tolua_S)
{
    int argc = 0;
    PageBase* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageBase_constructor'", nullptr);
            return 0;
        }
        cobj = new PageBase();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"PageBase");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageBase:PageBase",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageBase_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_PageBase_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (PageBase)");
    return 0;
}

int lua_register_mgame_PageBase(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"PageBase");
    tolua_cclass(tolua_S,"PageBase","PageBase","cc.Layer",nullptr);

    tolua_beginmodule(tolua_S,"PageBase");
        tolua_function(tolua_S,"new",lua_mgame_PageBase_constructor);
        tolua_function(tolua_S,"setUIRoot",lua_mgame_PageBase_setUIRoot);
        tolua_function(tolua_S,"onKeyReleased",lua_mgame_PageBase_onKeyReleased);
        tolua_function(tolua_S,"onShow",lua_mgame_PageBase_onShow);
        tolua_function(tolua_S,"onClose",lua_mgame_PageBase_onClose);
        tolua_function(tolua_S,"init",lua_mgame_PageBase_init);
        tolua_function(tolua_S,"onExitTransitionDidStart",lua_mgame_PageBase_onExitTransitionDidStart);
        tolua_function(tolua_S,"onLocateClickCallback",lua_mgame_PageBase_onLocateClickCallback);
        tolua_function(tolua_S,"onEnterTransitionDidFinish",lua_mgame_PageBase_onEnterTransitionDidFinish);
        tolua_function(tolua_S,"getUIRoot",lua_mgame_PageBase_getUIRoot);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(PageBase).name();
    g_luaType[typeName] = "PageBase";
    g_typeCast["PageBase"] = "PageBase";
    return 1;
}

int lua_mgame_NetPack_getEncryptBuf(lua_State* tolua_S)
{
    int argc = 0;
    NetPack* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetPack",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetPack*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetPack_getEncryptBuf'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetPack_getEncryptBuf'", nullptr);
            return 0;
        }
        unsigned char* ret = cobj->getEncryptBuf();
        #pragma warning NO CONVERSION FROM NATIVE FOR unsigned char*;
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetPack:getEncryptBuf",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetPack_getEncryptBuf'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetPack_Clear(lua_State* tolua_S)
{
    int argc = 0;
    NetPack* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetPack",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetPack*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetPack_Clear'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetPack_Clear'", nullptr);
            return 0;
        }
        cobj->Clear();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetPack:Clear",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetPack_Clear'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetPack_getDecryptBuf(lua_State* tolua_S)
{
    int argc = 0;
    NetPack* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetPack",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetPack*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetPack_getDecryptBuf'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetPack_getDecryptBuf'", nullptr);
            return 0;
        }
        unsigned char* ret = cobj->getDecryptBuf();
        #pragma warning NO CONVERSION FROM NATIVE FOR unsigned char*;
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetPack:getDecryptBuf",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetPack_getDecryptBuf'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetPack_csByteSize(lua_State* tolua_S)
{
    int argc = 0;
    NetPack* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetPack",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetPack*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetPack_csByteSize'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetPack_csByteSize'", nullptr);
            return 0;
        }
        int ret = cobj->csByteSize();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetPack:csByteSize",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetPack_csByteSize'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetPack_ParseFromArray(lua_State* tolua_S)
{
    int argc = 0;
    NetPack* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetPack",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetPack*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetPack_ParseFromArray'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        const char* arg0;
        unsigned int arg1;

        std::string arg0_tmp; ok &= luaval_to_std_string(tolua_S, 2, &arg0_tmp, "NetPack:ParseFromArray"); arg0 = arg0_tmp.c_str();

        ok &= luaval_to_uint32(tolua_S, 3,&arg1, "NetPack:ParseFromArray");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetPack_ParseFromArray'", nullptr);
            return 0;
        }
        bool ret = cobj->ParseFromArray(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetPack:ParseFromArray",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetPack_ParseFromArray'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetPack_getMsgHead(lua_State* tolua_S)
{
    int argc = 0;
    NetPack* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetPack",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetPack*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetPack_getMsgHead'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetPack_getMsgHead'", nullptr);
            return 0;
        }
        MsgHead* ret = cobj->getMsgHead();
        object_to_luaval<MsgHead>(tolua_S, "MsgHead",(MsgHead*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetPack:getMsgHead",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetPack_getMsgHead'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetPack_scByteSize(lua_State* tolua_S)
{
    int argc = 0;
    NetPack* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetPack",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetPack*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetPack_scByteSize'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetPack_scByteSize'", nullptr);
            return 0;
        }
        int ret = cobj->scByteSize();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetPack:scByteSize",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetPack_scByteSize'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetPack_constructor(lua_State* tolua_S)
{
    int argc = 0;
    NetPack* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetPack_constructor'", nullptr);
            return 0;
        }
        cobj = new NetPack();
        tolua_pushusertype(tolua_S,(void*)cobj,"NetPack");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetPack:NetPack",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetPack_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_NetPack_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (NetPack)");
    return 0;
}

int lua_register_mgame_NetPack(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"NetPack");
    tolua_cclass(tolua_S,"NetPack","NetPack","",nullptr);

    tolua_beginmodule(tolua_S,"NetPack");
        tolua_function(tolua_S,"new",lua_mgame_NetPack_constructor);
        tolua_function(tolua_S,"getEncryptBuf",lua_mgame_NetPack_getEncryptBuf);
        tolua_function(tolua_S,"Clear",lua_mgame_NetPack_Clear);
        tolua_function(tolua_S,"getDecryptBuf",lua_mgame_NetPack_getDecryptBuf);
        tolua_function(tolua_S,"csByteSize",lua_mgame_NetPack_csByteSize);
        tolua_function(tolua_S,"ParseFromArray",lua_mgame_NetPack_ParseFromArray);
        tolua_function(tolua_S,"getMsgHead",lua_mgame_NetPack_getMsgHead);
        tolua_function(tolua_S,"scByteSize",lua_mgame_NetPack_scByteSize);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(NetPack).name();
    g_luaType[typeName] = "NetPack";
    g_typeCast["NetPack"] = "NetPack";
    return 1;
}

int lua_mgame_LoginProxy_currSignalNum(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_currSignalNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_currSignalNum'", nullptr);
            return 0;
        }
        cobj->currSignalNum();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:currSignalNum",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_currSignalNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setReloginShowing(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setReloginShowing'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "LoginProxy:setReloginShowing");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setReloginShowing'", nullptr);
            return 0;
        }
        cobj->setReloginShowing(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setReloginShowing",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setReloginShowing'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setGameServerName(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setGameServerName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "LoginProxy:setGameServerName");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setGameServerName'", nullptr);
            return 0;
        }
        cobj->setGameServerName(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setGameServerName",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setGameServerName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setLoginSuccess(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setLoginSuccess'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "LoginProxy:setLoginSuccess");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setLoginSuccess'", nullptr);
            return 0;
        }
        cobj->setLoginSuccess(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setLoginSuccess",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setLoginSuccess'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setRetry(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setRetry'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "LoginProxy:setRetry");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setRetry'", nullptr);
            return 0;
        }
        cobj->setRetry(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setRetry",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setRetry'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_updateRetryEnterServer(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_updateRetryEnterServer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "LoginProxy:updateRetryEnterServer");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_updateRetryEnterServer'", nullptr);
            return 0;
        }
        cobj->updateRetryEnterServer(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:updateRetryEnterServer",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_updateRetryEnterServer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getIsAccepted(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getIsAccepted'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getIsAccepted'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsAccepted();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getIsAccepted",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getIsAccepted'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getLoginSuccess(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getLoginSuccess'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getLoginSuccess'", nullptr);
            return 0;
        }
        bool ret = cobj->getLoginSuccess();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getLoginSuccess",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getLoginSuccess'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setSendStart(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setSendStart'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned long long arg0;

        #pragma warning NO CONVERSION TO NATIVE FOR unsigned long long
		ok = false;
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setSendStart'", nullptr);
            return 0;
        }
        cobj->setSendStart(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setSendStart",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setSendStart'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setConnTimes(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setConnTimes'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "LoginProxy:setConnTimes");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setConnTimes'", nullptr);
            return 0;
        }
        cobj->setConnTimes(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setConnTimes",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setConnTimes'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setGameServer(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setGameServer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "LoginProxy:setGameServer");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setGameServer'", nullptr);
            return 0;
        }
        cobj->setGameServer(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setGameServer",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setGameServer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getCurrSignalMs(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getCurrSignalMs'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getCurrSignalMs'", nullptr);
            return 0;
        }
        int ret = cobj->getCurrSignalMs();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getCurrSignalMs",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getCurrSignalMs'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendRegisterRqst(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendRegisterRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendRegisterRqst'", nullptr);
            return 0;
        }
        cobj->sendRegisterRqst();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendRegisterRqst",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendRegisterRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getReloginShowing(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getReloginShowing'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getReloginShowing'", nullptr);
            return 0;
        }
        bool ret = cobj->getReloginShowing();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getReloginShowing",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getReloginShowing'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setCurrSignalMs(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setCurrSignalMs'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "LoginProxy:setCurrSignalMs");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setCurrSignalMs'", nullptr);
            return 0;
        }
        cobj->setCurrSignalMs(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setCurrSignalMs",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setCurrSignalMs'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendEnterServerRqst(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendEnterServerRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendEnterServerRqst'", nullptr);
            return 0;
        }
        cobj->sendEnterServerRqst();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendEnterServerRqst",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendEnterServerRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendHeartBeat(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendHeartBeat'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendHeartBeat'", nullptr);
            return 0;
        }
        cobj->sendHeartBeat();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendHeartBeat",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendHeartBeat'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_onRetryEnterServer(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_onRetryEnterServer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_onRetryEnterServer'", nullptr);
            return 0;
        }
        cobj->onRetryEnterServer();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:onRetryEnterServer",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_onRetryEnterServer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendPKeyRest(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendPKeyRest'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendPKeyRest'", nullptr);
            return 0;
        }
        cobj->sendPKeyRest();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendPKeyRest",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendPKeyRest'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getCurrSignal(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getCurrSignal'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getCurrSignal'", nullptr);
            return 0;
        }
        int ret = cobj->getCurrSignal();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getCurrSignal",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getCurrSignal'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_isLogin(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_isLogin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_isLogin'", nullptr);
            return 0;
        }
        cobj->isLogin();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:isLogin",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_isLogin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_loginSuccess(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_loginSuccess'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_loginSuccess'", nullptr);
            return 0;
        }
        cobj->loginSuccess();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:loginSuccess",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_loginSuccess'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getGameServer(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getGameServer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getGameServer'", nullptr);
            return 0;
        }
        std::string ret = cobj->getGameServer();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getGameServer",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getGameServer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setRetryLoginServer(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setRetryLoginServer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "LoginProxy:setRetryLoginServer");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setRetryLoginServer'", nullptr);
            return 0;
        }
        cobj->setRetryLoginServer(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setRetryLoginServer",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setRetryLoginServer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getIsUpdateResource(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getIsUpdateResource'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getIsUpdateResource'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsUpdateResource();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getIsUpdateResource",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getIsUpdateResource'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getGameServerName(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getGameServerName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getGameServerName'", nullptr);
            return 0;
        }
        std::string ret = cobj->getGameServerName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getGameServerName",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getGameServerName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_requestLoginKey(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_requestLoginKey'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_requestLoginKey'", nullptr);
            return 0;
        }
        cobj->requestLoginKey();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:requestLoginKey",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_requestLoginKey'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_onCallBack(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_onCallBack'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Ref* arg0;

        ok &= luaval_to_object<cocos2d::Ref>(tolua_S, 2, "cc.Ref",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_onCallBack'", nullptr);
            return 0;
        }
        cobj->onCallBack(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:onCallBack",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_onCallBack'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getRetry(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getRetry'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getRetry'", nullptr);
            return 0;
        }
        int ret = cobj->getRetry();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getRetry",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getRetry'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setServerTime(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setServerTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned long long arg0;

        #pragma warning NO CONVERSION TO NATIVE FOR unsigned long long
		ok = false;
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setServerTime'", nullptr);
            return 0;
        }
        cobj->setServerTime(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setServerTime",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setServerTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_doResLoadOver(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_doResLoadOver'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_doResLoadOver'", nullptr);
            return 0;
        }
        cobj->doResLoadOver();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:doResLoadOver",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_doResLoadOver'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendLogOut(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendLogOut'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendLogOut'", nullptr);
            return 0;
        }
        cobj->sendLogOut();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendLogOut",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendLogOut'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendOtherRqst(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendOtherRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendOtherRqst'", nullptr);
            return 0;
        }
        cobj->sendOtherRqst();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendOtherRqst",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendOtherRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendClientKey(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendClientKey'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendClientKey'", nullptr);
            return 0;
        }
        cobj->sendClientKey();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendClientKey",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendClientKey'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getSendStart(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getSendStart'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getSendStart'", nullptr);
            return 0;
        }
        unsigned long long ret = cobj->getSendStart();
        #pragma warning NO CONVERSION FROM NATIVE FOR unsigned long long;
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getSendStart",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getSendStart'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setIsAccepted(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setIsAccepted'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "LoginProxy:setIsAccepted");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setIsAccepted'", nullptr);
            return 0;
        }
        cobj->setIsAccepted(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setIsAccepted",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setIsAccepted'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getServerTime(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getServerTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getServerTime'", nullptr);
            return 0;
        }
        unsigned long long ret = cobj->getServerTime();
        #pragma warning NO CONVERSION FROM NATIVE FOR unsigned long long;
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getServerTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getServerTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getConnTimes(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getConnTimes'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getConnTimes'", nullptr);
            return 0;
        }
        int ret = cobj->getConnTimes();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getConnTimes",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getConnTimes'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_setIsUpdateResource(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_setIsUpdateResource'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "LoginProxy:setIsUpdateResource");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_setIsUpdateResource'", nullptr);
            return 0;
        }
        cobj->setIsUpdateResource(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:setIsUpdateResource",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_setIsUpdateResource'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendOther2Rqst(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendOther2Rqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendOther2Rqst'", nullptr);
            return 0;
        }
        cobj->sendOther2Rqst();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendOther2Rqst",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendOther2Rqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_checkLogin(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_checkLogin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_checkLogin'", nullptr);
            return 0;
        }
        bool ret = cobj->checkLogin();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "LoginProxy:checkLogin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_checkLogin'", nullptr);
            return 0;
        }
        bool ret = cobj->checkLogin(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:checkLogin",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_checkLogin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendGetServerRqst(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendGetServerRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendGetServerRqst'", nullptr);
            return 0;
        }
        cobj->sendGetServerRqst();
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "LoginProxy:sendGetServerRqst");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendGetServerRqst'", nullptr);
            return 0;
        }
        cobj->sendGetServerRqst(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendGetServerRqst",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendGetServerRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_sendDirectEnterRqst(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_sendDirectEnterRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_sendDirectEnterRqst'", nullptr);
            return 0;
        }
        cobj->sendDirectEnterRqst();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:sendDirectEnterRqst",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_sendDirectEnterRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_InitNetConnection(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_InitNetConnection'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "LoginProxy:InitNetConnection");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_InitNetConnection'", nullptr);
            return 0;
        }
        cobj->InitNetConnection(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:InitNetConnection",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_InitNetConnection'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_getRetryLoginServer(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_getRetryLoginServer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_getRetryLoginServer'", nullptr);
            return 0;
        }
        int ret = cobj->getRetryLoginServer();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:getRetryLoginServer",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_getRetryLoginServer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_analysisLoginDNS(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_analysisLoginDNS'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_analysisLoginDNS'", nullptr);
            return 0;
        }
        cobj->analysisLoginDNS();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:analysisLoginDNS",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_analysisLoginDNS'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_updateHearBeat(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"LoginProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (LoginProxy*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_LoginProxy_updateHearBeat'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "LoginProxy:updateHearBeat");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_updateHearBeat'", nullptr);
            return 0;
        }
        cobj->updateHearBeat(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:updateHearBeat",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_updateHearBeat'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_LoginProxy_constructor(lua_State* tolua_S)
{
    int argc = 0;
    LoginProxy* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LoginProxy_constructor'", nullptr);
            return 0;
        }
        cobj = new LoginProxy();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"LoginProxy");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "LoginProxy:LoginProxy",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LoginProxy_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_LoginProxy_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (LoginProxy)");
    return 0;
}

int lua_register_mgame_LoginProxy(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"LoginProxy");
    tolua_cclass(tolua_S,"LoginProxy","LoginProxy","cc.Ref",nullptr);

    tolua_beginmodule(tolua_S,"LoginProxy");
        tolua_function(tolua_S,"new",lua_mgame_LoginProxy_constructor);
        tolua_function(tolua_S,"currSignalNum",lua_mgame_LoginProxy_currSignalNum);
        tolua_function(tolua_S,"setReloginShowing",lua_mgame_LoginProxy_setReloginShowing);
        tolua_function(tolua_S,"setGameServerName",lua_mgame_LoginProxy_setGameServerName);
        tolua_function(tolua_S,"setLoginSuccess",lua_mgame_LoginProxy_setLoginSuccess);
        tolua_function(tolua_S,"setRetry",lua_mgame_LoginProxy_setRetry);
        tolua_function(tolua_S,"updateRetryEnterServer",lua_mgame_LoginProxy_updateRetryEnterServer);
        tolua_function(tolua_S,"getIsAccepted",lua_mgame_LoginProxy_getIsAccepted);
        tolua_function(tolua_S,"getLoginSuccess",lua_mgame_LoginProxy_getLoginSuccess);
        tolua_function(tolua_S,"setSendStart",lua_mgame_LoginProxy_setSendStart);
        tolua_function(tolua_S,"setConnTimes",lua_mgame_LoginProxy_setConnTimes);
        tolua_function(tolua_S,"setGameServer",lua_mgame_LoginProxy_setGameServer);
        tolua_function(tolua_S,"getCurrSignalMs",lua_mgame_LoginProxy_getCurrSignalMs);
        tolua_function(tolua_S,"sendRegisterRqst",lua_mgame_LoginProxy_sendRegisterRqst);
        tolua_function(tolua_S,"getReloginShowing",lua_mgame_LoginProxy_getReloginShowing);
        tolua_function(tolua_S,"setCurrSignalMs",lua_mgame_LoginProxy_setCurrSignalMs);
        tolua_function(tolua_S,"sendEnterServerRqst",lua_mgame_LoginProxy_sendEnterServerRqst);
        tolua_function(tolua_S,"sendHeartBeat",lua_mgame_LoginProxy_sendHeartBeat);
        tolua_function(tolua_S,"onRetryEnterServer",lua_mgame_LoginProxy_onRetryEnterServer);
        tolua_function(tolua_S,"sendPKeyRest",lua_mgame_LoginProxy_sendPKeyRest);
        tolua_function(tolua_S,"getCurrSignal",lua_mgame_LoginProxy_getCurrSignal);
        tolua_function(tolua_S,"isLogin",lua_mgame_LoginProxy_isLogin);
        tolua_function(tolua_S,"loginSuccess",lua_mgame_LoginProxy_loginSuccess);
        tolua_function(tolua_S,"getGameServer",lua_mgame_LoginProxy_getGameServer);
        tolua_function(tolua_S,"setRetryLoginServer",lua_mgame_LoginProxy_setRetryLoginServer);
        tolua_function(tolua_S,"getIsUpdateResource",lua_mgame_LoginProxy_getIsUpdateResource);
        tolua_function(tolua_S,"getGameServerName",lua_mgame_LoginProxy_getGameServerName);
        tolua_function(tolua_S,"requestLoginKey",lua_mgame_LoginProxy_requestLoginKey);
        tolua_function(tolua_S,"onCallBack",lua_mgame_LoginProxy_onCallBack);
        tolua_function(tolua_S,"getRetry",lua_mgame_LoginProxy_getRetry);
        tolua_function(tolua_S,"setServerTime",lua_mgame_LoginProxy_setServerTime);
        tolua_function(tolua_S,"doResLoadOver",lua_mgame_LoginProxy_doResLoadOver);
        tolua_function(tolua_S,"sendLogOut",lua_mgame_LoginProxy_sendLogOut);
        tolua_function(tolua_S,"sendOtherRqst",lua_mgame_LoginProxy_sendOtherRqst);
        tolua_function(tolua_S,"sendClientKey",lua_mgame_LoginProxy_sendClientKey);
        tolua_function(tolua_S,"getSendStart",lua_mgame_LoginProxy_getSendStart);
        tolua_function(tolua_S,"setIsAccepted",lua_mgame_LoginProxy_setIsAccepted);
        tolua_function(tolua_S,"getServerTime",lua_mgame_LoginProxy_getServerTime);
        tolua_function(tolua_S,"getConnTimes",lua_mgame_LoginProxy_getConnTimes);
        tolua_function(tolua_S,"setIsUpdateResource",lua_mgame_LoginProxy_setIsUpdateResource);
        tolua_function(tolua_S,"sendOther2Rqst",lua_mgame_LoginProxy_sendOther2Rqst);
        tolua_function(tolua_S,"checkLogin",lua_mgame_LoginProxy_checkLogin);
        tolua_function(tolua_S,"sendGetServerRqst",lua_mgame_LoginProxy_sendGetServerRqst);
        tolua_function(tolua_S,"sendDirectEnterRqst",lua_mgame_LoginProxy_sendDirectEnterRqst);
        tolua_function(tolua_S,"InitNetConnection",lua_mgame_LoginProxy_InitNetConnection);
        tolua_function(tolua_S,"getRetryLoginServer",lua_mgame_LoginProxy_getRetryLoginServer);
        tolua_function(tolua_S,"analysisLoginDNS",lua_mgame_LoginProxy_analysisLoginDNS);
        tolua_function(tolua_S,"updateHearBeat",lua_mgame_LoginProxy_updateHearBeat);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(LoginProxy).name();
    g_luaType[typeName] = "LoginProxy";
    g_typeCast["LoginProxy"] = "LoginProxy";
    return 1;
}

int lua_mgame_CVTimeUtils_IsSameDay(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CVTimeUtils",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 2)
    {
        long arg0;
        long arg1;
        ok &= luaval_to_long(tolua_S, 2, &arg0, "CVTimeUtils:IsSameDay");
        ok &= luaval_to_long(tolua_S, 3, &arg1, "CVTimeUtils:IsSameDay");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CVTimeUtils_IsSameDay'", nullptr);
            return 0;
        }
        bool ret = CVTimeUtils::IsSameDay(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CVTimeUtils:IsSameDay",argc, 2);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CVTimeUtils_IsSameDay'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CVTimeUtils_IsSameWeek(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CVTimeUtils",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 2)
    {
        long arg0;
        long arg1;
        ok &= luaval_to_long(tolua_S, 2, &arg0, "CVTimeUtils:IsSameWeek");
        ok &= luaval_to_long(tolua_S, 3, &arg1, "CVTimeUtils:IsSameWeek");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CVTimeUtils_IsSameWeek'", nullptr);
            return 0;
        }
        bool ret = CVTimeUtils::IsSameWeek(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CVTimeUtils:IsSameWeek",argc, 2);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CVTimeUtils_IsSameWeek'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CVTimeUtils_GetDayZero(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CVTimeUtils",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        long arg0;
        ok &= luaval_to_long(tolua_S, 2, &arg0, "CVTimeUtils:GetDayZero");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CVTimeUtils_GetDayZero'", nullptr);
            return 0;
        }
        int ret = CVTimeUtils::GetDayZero(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CVTimeUtils:GetDayZero",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CVTimeUtils_GetDayZero'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CVTimeUtils_GetNextDayZero(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CVTimeUtils",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        long arg0;
        ok &= luaval_to_long(tolua_S, 2, &arg0, "CVTimeUtils:GetNextDayZero");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CVTimeUtils_GetNextDayZero'", nullptr);
            return 0;
        }
        int ret = CVTimeUtils::GetNextDayZero(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CVTimeUtils:GetNextDayZero",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CVTimeUtils_GetNextDayZero'.",&tolua_err);
#endif
    return 0;
}
static int lua_mgame_CVTimeUtils_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (CVTimeUtils)");
    return 0;
}

int lua_register_mgame_CVTimeUtils(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"CVTimeUtils");
    tolua_cclass(tolua_S,"CVTimeUtils","CVTimeUtils","",nullptr);

    tolua_beginmodule(tolua_S,"CVTimeUtils");
        tolua_function(tolua_S,"IsSameDay", lua_mgame_CVTimeUtils_IsSameDay);
        tolua_function(tolua_S,"IsSameWeek", lua_mgame_CVTimeUtils_IsSameWeek);
        tolua_function(tolua_S,"GetDayZero", lua_mgame_CVTimeUtils_GetDayZero);
        tolua_function(tolua_S,"GetNextDayZero", lua_mgame_CVTimeUtils_GetNextDayZero);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(CVTimeUtils).name();
    g_luaType[typeName] = "CVTimeUtils";
    g_typeCast["CVTimeUtils"] = "CVTimeUtils";
    return 1;
}

int lua_mgame_UserObj_setChatBuyTip(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setChatBuyTip'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned int arg0;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "UserObj:setChatBuyTip");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setChatBuyTip'", nullptr);
            return 0;
        }
        cobj->setChatBuyTip(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setChatBuyTip",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setChatBuyTip'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_updatePlayerExp(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_updatePlayerExp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:updatePlayerExp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_updatePlayerExp'", nullptr);
            return 0;
        }
        cobj->updatePlayerExp(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:updatePlayerExp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_updatePlayerExp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_showGiftInfoById(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_showGiftInfoById'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:showGiftInfoById");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_showGiftInfoById'", nullptr);
            return 0;
        }
        cobj->showGiftInfoById(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:showGiftInfoById",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_showGiftInfoById'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_checkIsHaveNoticeData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_checkIsHaveNoticeData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:checkIsHaveNoticeData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_checkIsHaveNoticeData'", nullptr);
            return 0;
        }
        bool ret = cobj->checkIsHaveNoticeData(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:checkIsHaveNoticeData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_checkIsHaveNoticeData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_sendAddGuideGlyphStuff(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_sendAddGuideGlyphStuff'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_sendAddGuideGlyphStuff'", nullptr);
            return 0;
        }
        cobj->sendAddGuideGlyphStuff();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:sendAddGuideGlyphStuff",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_sendAddGuideGlyphStuff'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getHeadIconUrl(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getHeadIconUrl'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getHeadIconUrl'", nullptr);
            return 0;
        }
        std::string ret = cobj->getHeadIconUrl();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getHeadIconUrl",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getHeadIconUrl'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_addBadge(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_addBadge'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:addBadge");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_addBadge'", nullptr);
            return 0;
        }
        cobj->addBadge(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:addBadge",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_addBadge'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_resetDailyMissionData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_resetDailyMissionData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_resetDailyMissionData'", nullptr);
            return 0;
        }
        cobj->resetDailyMissionData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:resetDailyMissionData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_resetDailyMissionData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getOccupyModeFlag(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getOccupyModeFlag'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getOccupyModeFlag'", nullptr);
            return 0;
        }
        int ret = cobj->getOccupyModeFlag();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getOccupyModeFlag",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getOccupyModeFlag'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setIsAfterAwardOpenAgain(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setIsAfterAwardOpenAgain'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setIsAfterAwardOpenAgain");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setIsAfterAwardOpenAgain'", nullptr);
            return 0;
        }
        cobj->setIsAfterAwardOpenAgain(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setIsAfterAwardOpenAgain",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setIsAfterAwardOpenAgain'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_updateLostPointData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_updateLostPointData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        bool arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:updateLostPointData");

        ok &= luaval_to_boolean(tolua_S, 3,&arg1, "UserObj:updateLostPointData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_updateLostPointData'", nullptr);
            return 0;
        }
        cobj->updateLostPointData(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 3) 
    {
        int arg0;
        bool arg1;
        bool arg2;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:updateLostPointData");

        ok &= luaval_to_boolean(tolua_S, 3,&arg1, "UserObj:updateLostPointData");

        ok &= luaval_to_boolean(tolua_S, 4,&arg2, "UserObj:updateLostPointData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_updateLostPointData'", nullptr);
            return 0;
        }
        cobj->updateLostPointData(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:updateLostPointData",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_updateLostPointData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setShowGiftId(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setShowGiftId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setShowGiftId");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setShowGiftId'", nullptr);
            return 0;
        }
        cobj->setShowGiftId(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setShowGiftId",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setShowGiftId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setHeadIconUrl(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setHeadIconUrl'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:setHeadIconUrl");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setHeadIconUrl'", nullptr);
            return 0;
        }
        cobj->setHeadIconUrl(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setHeadIconUrl",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setHeadIconUrl'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getBibleTabItemId(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getBibleTabItemId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getBibleTabItemId'", nullptr);
            return 0;
        }
        int ret = cobj->getBibleTabItemId();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getBibleTabItemId",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getBibleTabItemId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_updateActInformData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_updateActInformData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_updateActInformData'", nullptr);
            return 0;
        }
        cobj->updateActInformData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:updateActInformData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_updateActInformData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getMaxOpenGateID(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getMaxOpenGateID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getMaxOpenGateID'", nullptr);
            return 0;
        }
        int ret = cobj->getMaxOpenGateID();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getMaxOpenGateID",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getMaxOpenGateID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getLastServerTime(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getLastServerTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getLastServerTime'", nullptr);
            return 0;
        }
        long long ret = cobj->getLastServerTime();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getLastServerTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getLastServerTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getNextCheckPt(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getNextCheckPt'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getNextCheckPt'", nullptr);
            return 0;
        }
        int ret = cobj->getNextCheckPt();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getNextCheckPt",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getNextCheckPt'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setGameServerId(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setGameServerId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:setGameServerId");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setGameServerId'", nullptr);
            return 0;
        }
        cobj->setGameServerId(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setGameServerId",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setGameServerId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsShowDailyMissionHot(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsShowDailyMissionHot'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsShowDailyMissionHot'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsShowDailyMissionHot();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsShowDailyMissionHot",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsShowDailyMissionHot'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setFirstFail(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setFirstFail'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setFirstFail");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setFirstFail'", nullptr);
            return 0;
        }
        cobj->setFirstFail(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setFirstFail",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setFirstFail'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getCheckPointState(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getCheckPointState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getCheckPointState");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getCheckPointState'", nullptr);
            return 0;
        }
        int ret = cobj->getCheckPointState(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getCheckPointState",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getCheckPointState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setUin(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setUin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned int arg0;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "UserObj:setUin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setUin'", nullptr);
            return 0;
        }
        cobj->setUin(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setUin",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setUin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setBibleTabItemId(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setBibleTabItemId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setBibleTabItemId");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setBibleTabItemId'", nullptr);
            return 0;
        }
        cobj->setBibleTabItemId(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setBibleTabItemId",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setBibleTabItemId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getNewBieReward(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getNewBieReward'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getNewBieReward'", nullptr);
            return 0;
        }
        cobj->getNewBieReward();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getNewBieReward",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getNewBieReward'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getOneLostPointData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getOneLostPointData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getOneLostPointData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getOneLostPointData'", nullptr);
            return 0;
        }
        int ret = cobj->getOneLostPointData(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getOneLostPointData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getOneLostPointData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getGuideFinish(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getGuideFinish'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getGuideFinish");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getGuideFinish'", nullptr);
            return 0;
        }
        bool ret = cobj->getGuideFinish(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getGuideFinish",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getGuideFinish'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getCurSaveDataVersion(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getCurSaveDataVersion'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getCurSaveDataVersion'", nullptr);
            return 0;
        }
        int ret = cobj->getCurSaveDataVersion();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getCurSaveDataVersion",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getCurSaveDataVersion'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_initPlayerData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_initPlayerData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_initPlayerData'", nullptr);
            return 0;
        }
        cobj->initPlayerData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:initPlayerData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_initPlayerData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_addGlyphStuffGuideNum(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_addGlyphStuffGuideNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:addGlyphStuffGuideNum");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_addGlyphStuffGuideNum'", nullptr);
            return 0;
        }
        cobj->addGlyphStuffGuideNum(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:addGlyphStuffGuideNum",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_addGlyphStuffGuideNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getPlayerUpgradeState(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getPlayerUpgradeState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getPlayerUpgradeState'", nullptr);
            return 0;
        }
        int ret = cobj->getPlayerUpgradeState();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getPlayerUpgradeState",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getPlayerUpgradeState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsSkipSuccess(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsSkipSuccess'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsSkipSuccess'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsSkipSuccess();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsSkipSuccess",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsSkipSuccess'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_changePvePower(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_changePvePower'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:changePvePower");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_changePvePower'", nullptr);
            return 0;
        }
        cobj->changePvePower(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:changePvePower",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_changePvePower'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setCurInfoUin(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setCurInfoUin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned int arg0;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "UserObj:setCurInfoUin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setCurInfoUin'", nullptr);
            return 0;
        }
        cobj->setCurInfoUin(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setCurInfoUin",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setCurInfoUin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_isOpenGamePassTip(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_isOpenGamePassTip'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_isOpenGamePassTip'", nullptr);
            return 0;
        }
        bool ret = cobj->isOpenGamePassTip();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:isOpenGamePassTip",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_isOpenGamePassTip'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_cleanmActNoticeList(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_cleanmActNoticeList'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_cleanmActNoticeList'", nullptr);
            return 0;
        }
        cobj->cleanmActNoticeList();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:cleanmActNoticeList",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_cleanmActNoticeList'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_sendGetCheckPtData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_sendGetCheckPtData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_sendGetCheckPtData'", nullptr);
            return 0;
        }
        cobj->sendGetCheckPtData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:sendGetCheckPtData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_sendGetCheckPtData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_clearGateState(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_clearGateState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_clearGateState'", nullptr);
            return 0;
        }
        cobj->clearGateState();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:clearGateState",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_clearGateState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_changeGamePassTip(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_changeGamePassTip'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:changeGamePassTip");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_changeGamePassTip'", nullptr);
            return 0;
        }
        cobj->changeGamePassTip(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:changeGamePassTip",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_changeGamePassTip'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getLoginServerDir(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getLoginServerDir'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getLoginServerDir'", nullptr);
            return 0;
        }
        std::string ret = cobj->getLoginServerDir();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getLoginServerDir",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getLoginServerDir'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getGameServerName(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getGameServerName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getGameServerName'", nullptr);
            return 0;
        }
        std::string ret = cobj->getGameServerName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getGameServerName",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getGameServerName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setOccupyModeFlag(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setOccupyModeFlag'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setOccupyModeFlag");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setOccupyModeFlag'", nullptr);
            return 0;
        }
        cobj->setOccupyModeFlag(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setOccupyModeFlag",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setOccupyModeFlag'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getCheckPointStar(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getCheckPointStar'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getCheckPointStar");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getCheckPointStar'", nullptr);
            return 0;
        }
        int ret = cobj->getCheckPointStar(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getCheckPointStar",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getCheckPointStar'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_addCostMoney(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_addCostMoney'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:addCostMoney");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_addCostMoney'", nullptr);
            return 0;
        }
        cobj->addCostMoney(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:addCostMoney",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_addCostMoney'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_addLoginSrv2List(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_addLoginSrv2List'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        std::string arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:addLoginSrv2List");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "UserObj:addLoginSrv2List");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_addLoginSrv2List'", nullptr);
            return 0;
        }
        cobj->addLoginSrv2List(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:addLoginSrv2List",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_addLoginSrv2List'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setDiamond(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setDiamond'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setDiamond");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setDiamond'", nullptr);
            return 0;
        }
        cobj->setDiamond(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setDiamond");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:setDiamond");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setDiamond'", nullptr);
            return 0;
        }
        cobj->setDiamond(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setDiamond",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setDiamond'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_addBadgeItem(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_addBadgeItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:addBadgeItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_addBadgeItem'", nullptr);
            return 0;
        }
        cobj->addBadgeItem(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:addBadgeItem",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_addBadgeItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_isInitLoginData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_isInitLoginData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_isInitLoginData'", nullptr);
            return 0;
        }
        bool ret = cobj->isInitLoginData();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:isInitLoginData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_isInitLoginData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getChatTimeLeft(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getChatTimeLeft'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getChatTimeLeft'", nullptr);
            return 0;
        }
        long long ret = cobj->getChatTimeLeft();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getChatTimeLeft",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getChatTimeLeft'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getNowPassCheckPoint(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getNowPassCheckPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getNowPassCheckPoint'", nullptr);
            return 0;
        }
        int ret = cobj->getNowPassCheckPoint();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getNowPassCheckPoint",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getNowPassCheckPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsGoneNewerProtect(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsGoneNewerProtect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsGoneNewerProtect'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsGoneNewerProtect();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsGoneNewerProtect",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsGoneNewerProtect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getPlayerName(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getPlayerName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getPlayerName'", nullptr);
            return 0;
        }
        std::string ret = cobj->getPlayerName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getPlayerName",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getPlayerName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_onSkip(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_onSkip'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:onSkip");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_onSkip'", nullptr);
            return 0;
        }
        cobj->onSkip(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:onSkip",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_onSkip'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_addShopGuideNum(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_addShopGuideNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:addShopGuideNum");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_addShopGuideNum'", nullptr);
            return 0;
        }
        cobj->addShopGuideNum(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:addShopGuideNum",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_addShopGuideNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_dltLoginSrvFromList(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_dltLoginSrvFromList'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        std::string arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:dltLoginSrvFromList");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "UserObj:dltLoginSrvFromList");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_dltLoginSrvFromList'", nullptr);
            return 0;
        }
        cobj->dltLoginSrvFromList(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:dltLoginSrvFromList",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_dltLoginSrvFromList'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_sendAddGuideDiamond(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_sendAddGuideDiamond'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:sendAddGuideDiamond");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_sendAddGuideDiamond'", nullptr);
            return 0;
        }
        cobj->sendAddGuideDiamond(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:sendAddGuideDiamond",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_sendAddGuideDiamond'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_isHaveBadge(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_isHaveBadge'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:isHaveBadge");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_isHaveBadge'", nullptr);
            return 0;
        }
        bool ret = cobj->isHaveBadge(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:isHaveBadge",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_isHaveBadge'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getUin(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getUin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getUin'", nullptr);
            return 0;
        }
        unsigned int ret = cobj->getUin();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getUin",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getUin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_updateLastServerTime(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_updateLastServerTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_updateLastServerTime'", nullptr);
            return 0;
        }
        cobj->updateLastServerTime();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:updateLastServerTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_updateLastServerTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_sendUpdateCheckPoint(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_sendUpdateCheckPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_sendUpdateCheckPoint'", nullptr);
            return 0;
        }
        cobj->sendUpdateCheckPoint();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:sendUpdateCheckPoint",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_sendUpdateCheckPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getChatBuyTip(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getChatBuyTip'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getChatBuyTip'", nullptr);
            return 0;
        }
        unsigned int ret = cobj->getChatBuyTip();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getChatBuyTip",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getChatBuyTip'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getGateState(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getGateState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getGateState");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getGateState'", nullptr);
            return 0;
        }
        int ret = cobj->getGateState(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getGateState",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getGateState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_updateCheckPoint(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_updateCheckPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:updateCheckPoint");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:updateCheckPoint");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_updateCheckPoint'", nullptr);
            return 0;
        }
        cobj->updateCheckPoint(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 3) 
    {
        int arg0;
        int arg1;
        int arg2;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:updateCheckPoint");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:updateCheckPoint");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "UserObj:updateCheckPoint");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_updateCheckPoint'", nullptr);
            return 0;
        }
        cobj->updateCheckPoint(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 4) 
    {
        int arg0;
        int arg1;
        int arg2;
        int arg3;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:updateCheckPoint");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:updateCheckPoint");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "UserObj:updateCheckPoint");

        ok &= luaval_to_int32(tolua_S, 5,(int *)&arg3, "UserObj:updateCheckPoint");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_updateCheckPoint'", nullptr);
            return 0;
        }
        cobj->updateCheckPoint(arg0, arg1, arg2, arg3);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:updateCheckPoint",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_updateCheckPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getNewUin(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getNewUin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getNewUin'", nullptr);
            return 0;
        }
        unsigned int ret = cobj->getNewUin();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getNewUin",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getNewUin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_cleanCheckPtDataMap(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_cleanCheckPtDataMap'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_cleanCheckPtDataMap'", nullptr);
            return 0;
        }
        cobj->cleanCheckPtDataMap();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:cleanCheckPtDataMap",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_cleanCheckPtDataMap'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getNowTime(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getNowTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getNowTime'", nullptr);
            return 0;
        }
        long long ret = cobj->getNowTime();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getNowTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getNowTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setIsOpenDailyMissionFirst(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setIsOpenDailyMissionFirst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setIsOpenDailyMissionFirst");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setIsOpenDailyMissionFirst'", nullptr);
            return 0;
        }
        cobj->setIsOpenDailyMissionFirst(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setIsOpenDailyMissionFirst",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setIsOpenDailyMissionFirst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_addTestMoney(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_addTestMoney'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:addTestMoney");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_addTestMoney'", nullptr);
            return 0;
        }
        cobj->addTestMoney(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:addTestMoney",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_addTestMoney'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_convertToNewUin(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_convertToNewUin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned int arg0;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "UserObj:convertToNewUin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_convertToNewUin'", nullptr);
            return 0;
        }
        unsigned int ret = cobj->convertToNewUin(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:convertToNewUin",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_convertToNewUin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsOpenDailyMissionDialog(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsOpenDailyMissionDialog'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsOpenDailyMissionDialog'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsOpenDailyMissionDialog();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsOpenDailyMissionDialog",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsOpenDailyMissionDialog'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsOpenDailyMissionFirst(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsOpenDailyMissionFirst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsOpenDailyMissionFirst'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsOpenDailyMissionFirst();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsOpenDailyMissionFirst",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsOpenDailyMissionFirst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getChatFreeCount(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getChatFreeCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getChatFreeCount'", nullptr);
            return 0;
        }
        unsigned int ret = cobj->getChatFreeCount();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getChatFreeCount",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getChatFreeCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setLvlUpgrade(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setLvlUpgrade'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setLvlUpgrade");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setLvlUpgrade'", nullptr);
            return 0;
        }
        cobj->setLvlUpgrade(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setLvlUpgrade",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setLvlUpgrade'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getPlayerDataStr(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getPlayerDataStr'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getPlayerDataStr'", nullptr);
            return 0;
        }
        std::string ret = cobj->getPlayerDataStr();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getPlayerDataStr",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getPlayerDataStr'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getMaxOpenCheckPoint(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getMaxOpenCheckPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getMaxOpenCheckPoint'", nullptr);
            return 0;
        }
        int ret = cobj->getMaxOpenCheckPoint();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:getMaxOpenCheckPoint");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getMaxOpenCheckPoint'", nullptr);
            return 0;
        }
        int ret = cobj->getMaxOpenCheckPoint(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getMaxOpenCheckPoint",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getMaxOpenCheckPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_doAddGuideDiamond(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_doAddGuideDiamond'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:doAddGuideDiamond");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_doAddGuideDiamond'", nullptr);
            return 0;
        }
        cobj->doAddGuideDiamond(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:doAddGuideDiamond",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_doAddGuideDiamond'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setGuideFinish(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setGuideFinish'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setGuideFinish");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setGuideFinish'", nullptr);
            return 0;
        }
        cobj->setGuideFinish(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setGuideFinish",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setGuideFinish'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setIsShowDailyMissionProgress(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setIsShowDailyMissionProgress'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setIsShowDailyMissionProgress");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setIsShowDailyMissionProgress'", nullptr);
            return 0;
        }
        cobj->setIsShowDailyMissionProgress(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setIsShowDailyMissionProgress",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setIsShowDailyMissionProgress'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_sendEnterPoint(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_sendEnterPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:sendEnterPoint");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_sendEnterPoint'", nullptr);
            return 0;
        }
        cobj->sendEnterPoint(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:sendEnterPoint",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_sendEnterPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getShowGiftId(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getShowGiftId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getShowGiftId'", nullptr);
            return 0;
        }
        int ret = cobj->getShowGiftId();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getShowGiftId",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getShowGiftId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_doAddGuideGlyphStuff(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_doAddGuideGlyphStuff'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:doAddGuideGlyphStuff");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_doAddGuideGlyphStuff'", nullptr);
            return 0;
        }
        cobj->doAddGuideGlyphStuff(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:doAddGuideGlyphStuff",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_doAddGuideGlyphStuff'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setIsShowDailyMissionHot(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setIsShowDailyMissionHot'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setIsShowDailyMissionHot");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setIsShowDailyMissionHot'", nullptr);
            return 0;
        }
        cobj->setIsShowDailyMissionHot(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setIsShowDailyMissionHot",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setIsShowDailyMissionHot'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getMaxGuideGroup(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getMaxGuideGroup'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getMaxGuideGroup'", nullptr);
            return 0;
        }
        int ret = cobj->getMaxGuideGroup();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getMaxGuideGroup",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getMaxGuideGroup'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setIsShopBuy(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setIsShopBuy'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setIsShopBuy");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setIsShopBuy'", nullptr);
            return 0;
        }
        cobj->setIsShopBuy(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setIsShopBuy",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setIsShopBuy'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setSaveDataOffLine(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setSaveDataOffLine'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setSaveDataOffLine");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setSaveDataOffLine'", nullptr);
            return 0;
        }
        cobj->setSaveDataOffLine(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setSaveDataOffLine",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setSaveDataOffLine'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getHasSkipCount(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getHasSkipCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getHasSkipCount'", nullptr);
            return 0;
        }
        int ret = cobj->getHasSkipCount();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getHasSkipCount",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getHasSkipCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getActInformTime(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getActInformTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getActInformTime'", nullptr);
            return 0;
        }
        long long ret = cobj->getActInformTime();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getActInformTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getActInformTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setLoginServerDir(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setLoginServerDir'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:setLoginServerDir");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setLoginServerDir'", nullptr);
            return 0;
        }
        cobj->setLoginServerDir(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setLoginServerDir",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setLoginServerDir'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getProp(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getProp'", nullptr);
            return 0;
        }
        int ret = cobj->getProp(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getProp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getScore(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getScore'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getScore'", nullptr);
            return 0;
        }
        int ret = cobj->getScore();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getScore",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getScore'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_sltLoginSrvRand(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_sltLoginSrvRand'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:sltLoginSrvRand");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_sltLoginSrvRand'", nullptr);
            return 0;
        }
        std::string ret = cobj->sltLoginSrvRand(arg0);
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:sltLoginSrvRand",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_sltLoginSrvRand'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_saveToFile(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_saveToFile'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_saveToFile'", nullptr);
            return 0;
        }
        cobj->saveToFile();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:saveToFile",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_saveToFile'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_isCostMax(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_isCostMax'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:isCostMax");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_isCostMax'", nullptr);
            return 0;
        }
        bool ret = cobj->isCostMax(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:isCostMax",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_isCostMax'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_clearDailyMissionTips(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_clearDailyMissionTips'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_clearDailyMissionTips'", nullptr);
            return 0;
        }
        cobj->clearDailyMissionTips();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:clearDailyMissionTips",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_clearDailyMissionTips'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_cleanPropItem(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_cleanPropItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:cleanPropItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_cleanPropItem'", nullptr);
            return 0;
        }
        cobj->cleanPropItem(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:cleanPropItem",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_cleanPropItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setIsSkipSuccess(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setIsSkipSuccess'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setIsSkipSuccess");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setIsSkipSuccess'", nullptr);
            return 0;
        }
        cobj->setIsSkipSuccess(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setIsSkipSuccess",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setIsSkipSuccess'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setIsOpenDailyMissionDialog(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setIsOpenDailyMissionDialog'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setIsOpenDailyMissionDialog");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setIsOpenDailyMissionDialog'", nullptr);
            return 0;
        }
        cobj->setIsOpenDailyMissionDialog(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setIsOpenDailyMissionDialog",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setIsOpenDailyMissionDialog'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_changePvpPower(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_changePvpPower'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:changePvpPower");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_changePvpPower'", nullptr);
            return 0;
        }
        cobj->changePvpPower(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:changePvpPower",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_changePvpPower'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getPersonalString(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getPersonalString'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getPersonalString'", nullptr);
            return 0;
        }
        std::string ret = cobj->getPersonalString();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getPersonalString",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getPersonalString'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_initUserObj(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_initUserObj'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_initUserObj'", nullptr);
            return 0;
        }
        cobj->initUserObj();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:initUserObj",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_initUserObj'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getWinnerType(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getWinnerType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getWinnerType'", nullptr);
            return 0;
        }
        int ret = cobj->getWinnerType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getWinnerType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getWinnerType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setPropItem(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setPropItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setPropItem");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:setPropItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setPropItem'", nullptr);
            return 0;
        }
        cobj->setPropItem(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setPropItem",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setPropItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getFirstFail(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getFirstFail'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getFirstFail'", nullptr);
            return 0;
        }
        int ret = cobj->getFirstFail();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getFirstFail",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getFirstFail'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getLvlUpgrade(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getLvlUpgrade'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getLvlUpgrade'", nullptr);
            return 0;
        }
        bool ret = cobj->getLvlUpgrade();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getLvlUpgrade",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getLvlUpgrade'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getBadgeItem(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getBadgeItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getBadgeItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getBadgeItem'", nullptr);
            return 0;
        }
        BadgeItem* ret = cobj->getBadgeItem(arg0);
        object_to_luaval<BadgeItem>(tolua_S, "BadgeItem",(BadgeItem*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getBadgeItem",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getBadgeItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setChannelPlayerName(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setChannelPlayerName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:setChannelPlayerName");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setChannelPlayerName'", nullptr);
            return 0;
        }
        cobj->setChannelPlayerName(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setChannelPlayerName",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setChannelPlayerName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setCurSaveDataVersion(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setCurSaveDataVersion'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setCurSaveDataVersion");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setCurSaveDataVersion'", nullptr);
            return 0;
        }
        cobj->setCurSaveDataVersion(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setCurSaveDataVersion",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setCurSaveDataVersion'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getSaveData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getSaveData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getSaveData'", nullptr);
            return 0;
        }
        fgame::UserData* ret = cobj->getSaveData();
        object_to_luaval<fgame::UserData>(tolua_S, "fgame.UserData",(fgame::UserData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getSaveData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getSaveData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getDailyMissionTipPointByType(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getDailyMissionTipPointByType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getDailyMissionTipPointByType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getDailyMissionTipPointByType'", nullptr);
            return 0;
        }
        cocos2d::Point ret = cobj->getDailyMissionTipPointByType(arg0);
        point_to_luaval(tolua_S, ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getDailyMissionTipPointByType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getDailyMissionTipPointByType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsShowDailyMissionProgress(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsShowDailyMissionProgress'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsShowDailyMissionProgress'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsShowDailyMissionProgress();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsShowDailyMissionProgress",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsShowDailyMissionProgress'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_sendGetNewBieList(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_sendGetNewBieList'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_sendGetNewBieList'", nullptr);
            return 0;
        }
        cobj->sendGetNewBieList();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:sendGetNewBieList",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_sendGetNewBieList'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsBranch(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsBranch'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getIsBranch");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsBranch'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsBranch(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsBranch",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsBranch'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getReceiveAward(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getReceiveAward'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getReceiveAward");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:getReceiveAward");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getReceiveAward'", nullptr);
            return 0;
        }
        bool ret = cobj->getReceiveAward(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getReceiveAward",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getReceiveAward'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getOpenID(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getOpenID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getOpenID'", nullptr);
            return 0;
        }
        std::string ret = cobj->getOpenID();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getOpenID",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getOpenID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getChannelPlayerName(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getChannelPlayerName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getChannelPlayerName'", nullptr);
            return 0;
        }
        std::string ret = cobj->getChannelPlayerName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getChannelPlayerName",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getChannelPlayerName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_loadPlayerData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_loadPlayerData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_loadPlayerData'", nullptr);
            return 0;
        }
        cobj->loadPlayerData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:loadPlayerData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_loadPlayerData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setPlayerDataStr(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setPlayerDataStr'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:setPlayerDataStr");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setPlayerDataStr'", nullptr);
            return 0;
        }
        cobj->setPlayerDataStr(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setPlayerDataStr",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setPlayerDataStr'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setProp(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setProp");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:setProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setProp'", nullptr);
            return 0;
        }
        cobj->setProp(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setProp",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsShopBuy(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsShopBuy'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsShopBuy'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsShopBuy();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsShopBuy",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsShopBuy'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setCurInfoType(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setCurInfoType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setCurInfoType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setCurInfoType'", nullptr);
            return 0;
        }
        cobj->setCurInfoType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setCurInfoType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setCurInfoType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_refreshLostPointData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_refreshLostPointData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:refreshLostPointData");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:refreshLostPointData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_refreshLostPointData'", nullptr);
            return 0;
        }
        bool ret = cobj->refreshLostPointData(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:refreshLostPointData",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_refreshLostPointData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_convertToUin(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_convertToUin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned int arg0;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "UserObj:convertToUin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_convertToUin'", nullptr);
            return 0;
        }
        unsigned int ret = cobj->convertToUin(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:convertToUin",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_convertToUin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setSaveDataOnLine(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setSaveDataOnLine'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setSaveDataOnLine");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setSaveDataOnLine'", nullptr);
            return 0;
        }
        cobj->setSaveDataOnLine(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setSaveDataOnLine",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setSaveDataOnLine'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_addActNoticeData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_addActNoticeData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:addActNoticeData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_addActNoticeData'", nullptr);
            return 0;
        }
        cobj->addActNoticeData(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:addActNoticeData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_addActNoticeData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getCurInfoType(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getCurInfoType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getCurInfoType'", nullptr);
            return 0;
        }
        int ret = cobj->getCurInfoType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getCurInfoType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getCurInfoType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setIsOpenCrazyWeek(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setIsOpenCrazyWeek'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setIsOpenCrazyWeek");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setIsOpenCrazyWeek'", nullptr);
            return 0;
        }
        cobj->setIsOpenCrazyWeek(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setIsOpenCrazyWeek",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setIsOpenCrazyWeek'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getRankGroup(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getRankGroup'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getRankGroup'", nullptr);
            return 0;
        }
        int ret = cobj->getRankGroup();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getRankGroup",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getRankGroup'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getBadges(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getBadges'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getBadges'", nullptr);
            return 0;
        }
        std::vector<int> ret = cobj->getBadges();
        ccvector_int_to_luaval(tolua_S, ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getBadges",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getBadges'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setChatTimeLeft(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setChatTimeLeft'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        long long arg0;

        ok &= luaval_to_long_long(tolua_S, 2,&arg0, "UserObj:setChatTimeLeft");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setChatTimeLeft'", nullptr);
            return 0;
        }
        cobj->setChatTimeLeft(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setChatTimeLeft",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setChatTimeLeft'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsShowDailyMissionBtn(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsShowDailyMissionBtn'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsShowDailyMissionBtn'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsShowDailyMissionBtn();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsShowDailyMissionBtn",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsShowDailyMissionBtn'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_checkIsHaveAllNoticeData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_checkIsHaveAllNoticeData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_checkIsHaveAllNoticeData'", nullptr);
            return 0;
        }
        bool ret = cobj->checkIsHaveAllNoticeData();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:checkIsHaveAllNoticeData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_checkIsHaveAllNoticeData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setScore(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setScore'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setScore");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setScore'", nullptr);
            return 0;
        }
        cobj->setScore(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setScore",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setScore'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setChatFreeCount(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setChatFreeCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned int arg0;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "UserObj:setChatFreeCount");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setChatFreeCount'", nullptr);
            return 0;
        }
        cobj->setChatFreeCount(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setChatFreeCount",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setChatFreeCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_loadGlyphStuff(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_loadGlyphStuff'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_loadGlyphStuff'", nullptr);
            return 0;
        }
        bool ret = cobj->loadGlyphStuff();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:loadGlyphStuff",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_loadGlyphStuff'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setMaxOpenGateID(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setMaxOpenGateID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setMaxOpenGateID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setMaxOpenGateID'", nullptr);
            return 0;
        }
        cobj->setMaxOpenGateID(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setMaxOpenGateID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setMaxOpenGateID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getHaveGlyph(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getHaveGlyph'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getHaveGlyph'", nullptr);
            return 0;
        }
        bool ret = cobj->getHaveGlyph();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getHaveGlyph",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getHaveGlyph'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_refreshPropItemData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_refreshPropItemData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:refreshPropItemData");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:refreshPropItemData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_refreshPropItemData'", nullptr);
            return 0;
        }
        bool ret = cobj->refreshPropItemData(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:refreshPropItemData",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_refreshPropItemData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getPropItem(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getPropItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getPropItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getPropItem'", nullptr);
            return 0;
        }
        int ret = cobj->getPropItem(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getPropItem",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getPropItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_update(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "UserObj:update");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_update'", nullptr);
            return 0;
        }
        cobj->update(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:update",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getTotalStars(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getTotalStars'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getTotalStars'", nullptr);
            return 0;
        }
        int ret = cobj->getTotalStars();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getTotalStars",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getTotalStars'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setIsShowDailyMissionBtn(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setIsShowDailyMissionBtn'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setIsShowDailyMissionBtn");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setIsShowDailyMissionBtn'", nullptr);
            return 0;
        }
        cobj->setIsShowDailyMissionBtn(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setIsShowDailyMissionBtn",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setIsShowDailyMissionBtn'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsOpenCrazyWeek(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsOpenCrazyWeek'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsOpenCrazyWeek'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsOpenCrazyWeek();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsOpenCrazyWeek",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsOpenCrazyWeek'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setWinnerType(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setWinnerType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setWinnerType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setWinnerType'", nullptr);
            return 0;
        }
        cobj->setWinnerType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setWinnerType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setWinnerType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setInputID(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setInputID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:setInputID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setInputID'", nullptr);
            return 0;
        }
        cobj->setInputID(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setInputID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setInputID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_initVipTime(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_initVipTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:initVipTime");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_initVipTime'", nullptr);
            return 0;
        }
        cobj->initVipTime(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:initVipTime",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_initVipTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_checkNoSavaData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_checkNoSavaData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_checkNoSavaData'", nullptr);
            return 0;
        }
        bool ret = cobj->checkNoSavaData();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:checkNoSavaData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_checkNoSavaData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setGateState(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setGateState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setGateState");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:setGateState");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setGateState'", nullptr);
            return 0;
        }
        cobj->setGateState(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setGateState",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setGateState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setReceiveAward(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setReceiveAward'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setReceiveAward");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "UserObj:setReceiveAward");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setReceiveAward'", nullptr);
            return 0;
        }
        cobj->setReceiveAward(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setReceiveAward",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setReceiveAward'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_isCanGetMonthCard(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_isCanGetMonthCard'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_isCanGetMonthCard'", nullptr);
            return 0;
        }
        bool ret = cobj->isCanGetMonthCard();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:isCanGetMonthCard",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_isCanGetMonthCard'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setPlayerUpgradeState(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setPlayerUpgradeState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:setPlayerUpgradeState");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setPlayerUpgradeState'", nullptr);
            return 0;
        }
        cobj->setPlayerUpgradeState(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setPlayerUpgradeState",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setPlayerUpgradeState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setOpenID(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setOpenID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "UserObj:setOpenID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setOpenID'", nullptr);
            return 0;
        }
        cobj->setOpenID(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setOpenID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setOpenID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_addDailyMissionTips(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_addDailyMissionTips'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        cocos2d::Point arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:addDailyMissionTips");

        ok &= luaval_to_point(tolua_S, 3, &arg1, "UserObj:addDailyMissionTips");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_addDailyMissionTips'", nullptr);
            return 0;
        }
        cobj->addDailyMissionTips(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:addDailyMissionTips",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_addDailyMissionTips'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_setHaveGlyph(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_setHaveGlyph'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:setHaveGlyph");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_setHaveGlyph'", nullptr);
            return 0;
        }
        cobj->setHaveGlyph(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:setHaveGlyph",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_setHaveGlyph'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getCurInfoUin(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getCurInfoUin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getCurInfoUin'", nullptr);
            return 0;
        }
        unsigned int ret = cobj->getCurInfoUin();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getCurInfoUin",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getCurInfoUin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getGlyphStuffNum(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getGlyphStuffNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "UserObj:getGlyphStuffNum");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getGlyphStuffNum'", nullptr);
            return 0;
        }
        int ret = cobj->getGlyphStuffNum(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getGlyphStuffNum",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getGlyphStuffNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_sendDailyMissionData(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_sendDailyMissionData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "UserObj:sendDailyMissionData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_sendDailyMissionData'", nullptr);
            return 0;
        }
        cobj->sendDailyMissionData(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:sendDailyMissionData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_sendDailyMissionData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_getIsAfterAwardOpenAgain(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"UserObj",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (UserObj*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_UserObj_getIsAfterAwardOpenAgain'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_getIsAfterAwardOpenAgain'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsAfterAwardOpenAgain();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:getIsAfterAwardOpenAgain",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_getIsAfterAwardOpenAgain'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_UserObj_constructor(lua_State* tolua_S)
{
    int argc = 0;
    UserObj* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_UserObj_constructor'", nullptr);
            return 0;
        }
        cobj = new UserObj();
        tolua_pushusertype(tolua_S,(void*)cobj,"UserObj");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "UserObj:UserObj",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_UserObj_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_UserObj_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (UserObj)");
    return 0;
}

int lua_register_mgame_UserObj(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"UserObj");
    tolua_cclass(tolua_S,"UserObj","UserObj","",nullptr);

    tolua_beginmodule(tolua_S,"UserObj");
        tolua_function(tolua_S,"new",lua_mgame_UserObj_constructor);
        tolua_function(tolua_S,"setChatBuyTip",lua_mgame_UserObj_setChatBuyTip);
        tolua_function(tolua_S,"updatePlayerExp",lua_mgame_UserObj_updatePlayerExp);
        tolua_function(tolua_S,"showGiftInfoById",lua_mgame_UserObj_showGiftInfoById);
        tolua_function(tolua_S,"checkIsHaveNoticeData",lua_mgame_UserObj_checkIsHaveNoticeData);
        tolua_function(tolua_S,"sendAddGuideGlyphStuff",lua_mgame_UserObj_sendAddGuideGlyphStuff);
        tolua_function(tolua_S,"getHeadIconUrl",lua_mgame_UserObj_getHeadIconUrl);
        tolua_function(tolua_S,"addBadge",lua_mgame_UserObj_addBadge);
        tolua_function(tolua_S,"resetDailyMissionData",lua_mgame_UserObj_resetDailyMissionData);
        tolua_function(tolua_S,"getOccupyModeFlag",lua_mgame_UserObj_getOccupyModeFlag);
        tolua_function(tolua_S,"setIsAfterAwardOpenAgain",lua_mgame_UserObj_setIsAfterAwardOpenAgain);
        tolua_function(tolua_S,"updateLostPointData",lua_mgame_UserObj_updateLostPointData);
        tolua_function(tolua_S,"setShowGiftId",lua_mgame_UserObj_setShowGiftId);
        tolua_function(tolua_S,"setHeadIconUrl",lua_mgame_UserObj_setHeadIconUrl);
        tolua_function(tolua_S,"getBibleTabItemId",lua_mgame_UserObj_getBibleTabItemId);
        tolua_function(tolua_S,"updateActInformData",lua_mgame_UserObj_updateActInformData);
        tolua_function(tolua_S,"getMaxOpenGateID",lua_mgame_UserObj_getMaxOpenGateID);
        tolua_function(tolua_S,"getLastServerTime",lua_mgame_UserObj_getLastServerTime);
        tolua_function(tolua_S,"getNextCheckPt",lua_mgame_UserObj_getNextCheckPt);
        tolua_function(tolua_S,"setGameServerId",lua_mgame_UserObj_setGameServerId);
        tolua_function(tolua_S,"getIsShowDailyMissionHot",lua_mgame_UserObj_getIsShowDailyMissionHot);
        tolua_function(tolua_S,"setFirstFail",lua_mgame_UserObj_setFirstFail);
        tolua_function(tolua_S,"getCheckPointState",lua_mgame_UserObj_getCheckPointState);
        tolua_function(tolua_S,"setUin",lua_mgame_UserObj_setUin);
        tolua_function(tolua_S,"setBibleTabItemId",lua_mgame_UserObj_setBibleTabItemId);
        tolua_function(tolua_S,"getNewBieReward",lua_mgame_UserObj_getNewBieReward);
        tolua_function(tolua_S,"getOneLostPointData",lua_mgame_UserObj_getOneLostPointData);
        tolua_function(tolua_S,"getGuideFinish",lua_mgame_UserObj_getGuideFinish);
        tolua_function(tolua_S,"getCurSaveDataVersion",lua_mgame_UserObj_getCurSaveDataVersion);
        tolua_function(tolua_S,"initPlayerData",lua_mgame_UserObj_initPlayerData);
        tolua_function(tolua_S,"addGlyphStuffGuideNum",lua_mgame_UserObj_addGlyphStuffGuideNum);
        tolua_function(tolua_S,"getPlayerUpgradeState",lua_mgame_UserObj_getPlayerUpgradeState);
        tolua_function(tolua_S,"getIsSkipSuccess",lua_mgame_UserObj_getIsSkipSuccess);
        tolua_function(tolua_S,"changePvePower",lua_mgame_UserObj_changePvePower);
        tolua_function(tolua_S,"setCurInfoUin",lua_mgame_UserObj_setCurInfoUin);
        tolua_function(tolua_S,"isOpenGamePassTip",lua_mgame_UserObj_isOpenGamePassTip);
        tolua_function(tolua_S,"cleanmActNoticeList",lua_mgame_UserObj_cleanmActNoticeList);
        tolua_function(tolua_S,"sendGetCheckPtData",lua_mgame_UserObj_sendGetCheckPtData);
        tolua_function(tolua_S,"clearGateState",lua_mgame_UserObj_clearGateState);
        tolua_function(tolua_S,"changeGamePassTip",lua_mgame_UserObj_changeGamePassTip);
        tolua_function(tolua_S,"getLoginServerDir",lua_mgame_UserObj_getLoginServerDir);
        tolua_function(tolua_S,"getGameServerName",lua_mgame_UserObj_getGameServerName);
        tolua_function(tolua_S,"setOccupyModeFlag",lua_mgame_UserObj_setOccupyModeFlag);
        tolua_function(tolua_S,"getCheckPointStar",lua_mgame_UserObj_getCheckPointStar);
        tolua_function(tolua_S,"addCostMoney",lua_mgame_UserObj_addCostMoney);
        tolua_function(tolua_S,"addLoginSrv2List",lua_mgame_UserObj_addLoginSrv2List);
        tolua_function(tolua_S,"setDiamond",lua_mgame_UserObj_setDiamond);
        tolua_function(tolua_S,"addBadgeItem",lua_mgame_UserObj_addBadgeItem);
        tolua_function(tolua_S,"isInitLoginData",lua_mgame_UserObj_isInitLoginData);
        tolua_function(tolua_S,"getChatTimeLeft",lua_mgame_UserObj_getChatTimeLeft);
        tolua_function(tolua_S,"getNowPassCheckPoint",lua_mgame_UserObj_getNowPassCheckPoint);
        tolua_function(tolua_S,"getIsGoneNewerProtect",lua_mgame_UserObj_getIsGoneNewerProtect);
        tolua_function(tolua_S,"getPlayerName",lua_mgame_UserObj_getPlayerName);
        tolua_function(tolua_S,"onSkip",lua_mgame_UserObj_onSkip);
        tolua_function(tolua_S,"addShopGuideNum",lua_mgame_UserObj_addShopGuideNum);
        tolua_function(tolua_S,"dltLoginSrvFromList",lua_mgame_UserObj_dltLoginSrvFromList);
        tolua_function(tolua_S,"sendAddGuideDiamond",lua_mgame_UserObj_sendAddGuideDiamond);
        tolua_function(tolua_S,"isHaveBadge",lua_mgame_UserObj_isHaveBadge);
        tolua_function(tolua_S,"getUin",lua_mgame_UserObj_getUin);
        tolua_function(tolua_S,"updateLastServerTime",lua_mgame_UserObj_updateLastServerTime);
        tolua_function(tolua_S,"sendUpdateCheckPoint",lua_mgame_UserObj_sendUpdateCheckPoint);
        tolua_function(tolua_S,"getChatBuyTip",lua_mgame_UserObj_getChatBuyTip);
        tolua_function(tolua_S,"getGateState",lua_mgame_UserObj_getGateState);
        tolua_function(tolua_S,"updateCheckPoint",lua_mgame_UserObj_updateCheckPoint);
        tolua_function(tolua_S,"getNewUin",lua_mgame_UserObj_getNewUin);
        tolua_function(tolua_S,"cleanCheckPtDataMap",lua_mgame_UserObj_cleanCheckPtDataMap);
        tolua_function(tolua_S,"getNowTime",lua_mgame_UserObj_getNowTime);
        tolua_function(tolua_S,"setIsOpenDailyMissionFirst",lua_mgame_UserObj_setIsOpenDailyMissionFirst);
        tolua_function(tolua_S,"addTestMoney",lua_mgame_UserObj_addTestMoney);
        tolua_function(tolua_S,"convertToNewUin",lua_mgame_UserObj_convertToNewUin);
        tolua_function(tolua_S,"getIsOpenDailyMissionDialog",lua_mgame_UserObj_getIsOpenDailyMissionDialog);
        tolua_function(tolua_S,"getIsOpenDailyMissionFirst",lua_mgame_UserObj_getIsOpenDailyMissionFirst);
        tolua_function(tolua_S,"getChatFreeCount",lua_mgame_UserObj_getChatFreeCount);
        tolua_function(tolua_S,"setLvlUpgrade",lua_mgame_UserObj_setLvlUpgrade);
        tolua_function(tolua_S,"getPlayerDataStr",lua_mgame_UserObj_getPlayerDataStr);
        tolua_function(tolua_S,"getMaxOpenCheckPoint",lua_mgame_UserObj_getMaxOpenCheckPoint);
        tolua_function(tolua_S,"doAddGuideDiamond",lua_mgame_UserObj_doAddGuideDiamond);
        tolua_function(tolua_S,"setGuideFinish",lua_mgame_UserObj_setGuideFinish);
        tolua_function(tolua_S,"setIsShowDailyMissionProgress",lua_mgame_UserObj_setIsShowDailyMissionProgress);
        tolua_function(tolua_S,"sendEnterPoint",lua_mgame_UserObj_sendEnterPoint);
        tolua_function(tolua_S,"getShowGiftId",lua_mgame_UserObj_getShowGiftId);
        tolua_function(tolua_S,"doAddGuideGlyphStuff",lua_mgame_UserObj_doAddGuideGlyphStuff);
        tolua_function(tolua_S,"setIsShowDailyMissionHot",lua_mgame_UserObj_setIsShowDailyMissionHot);
        tolua_function(tolua_S,"getMaxGuideGroup",lua_mgame_UserObj_getMaxGuideGroup);
        tolua_function(tolua_S,"setIsShopBuy",lua_mgame_UserObj_setIsShopBuy);
        tolua_function(tolua_S,"setSaveDataOffLine",lua_mgame_UserObj_setSaveDataOffLine);
        tolua_function(tolua_S,"getHasSkipCount",lua_mgame_UserObj_getHasSkipCount);
        tolua_function(tolua_S,"getActInformTime",lua_mgame_UserObj_getActInformTime);
        tolua_function(tolua_S,"setLoginServerDir",lua_mgame_UserObj_setLoginServerDir);
        tolua_function(tolua_S,"getProp",lua_mgame_UserObj_getProp);
        tolua_function(tolua_S,"getScore",lua_mgame_UserObj_getScore);
        tolua_function(tolua_S,"sltLoginSrvRand",lua_mgame_UserObj_sltLoginSrvRand);
        tolua_function(tolua_S,"saveToFile",lua_mgame_UserObj_saveToFile);
        tolua_function(tolua_S,"isCostMax",lua_mgame_UserObj_isCostMax);
        tolua_function(tolua_S,"clearDailyMissionTips",lua_mgame_UserObj_clearDailyMissionTips);
        tolua_function(tolua_S,"cleanPropItem",lua_mgame_UserObj_cleanPropItem);
        tolua_function(tolua_S,"setIsSkipSuccess",lua_mgame_UserObj_setIsSkipSuccess);
        tolua_function(tolua_S,"setIsOpenDailyMissionDialog",lua_mgame_UserObj_setIsOpenDailyMissionDialog);
        tolua_function(tolua_S,"changePvpPower",lua_mgame_UserObj_changePvpPower);
        tolua_function(tolua_S,"getPersonalString",lua_mgame_UserObj_getPersonalString);
        tolua_function(tolua_S,"initUserObj",lua_mgame_UserObj_initUserObj);
        tolua_function(tolua_S,"getWinnerType",lua_mgame_UserObj_getWinnerType);
        tolua_function(tolua_S,"setPropItem",lua_mgame_UserObj_setPropItem);
        tolua_function(tolua_S,"getFirstFail",lua_mgame_UserObj_getFirstFail);
        tolua_function(tolua_S,"getLvlUpgrade",lua_mgame_UserObj_getLvlUpgrade);
        tolua_function(tolua_S,"getBadgeItem",lua_mgame_UserObj_getBadgeItem);
        tolua_function(tolua_S,"setChannelPlayerName",lua_mgame_UserObj_setChannelPlayerName);
        tolua_function(tolua_S,"setCurSaveDataVersion",lua_mgame_UserObj_setCurSaveDataVersion);
        tolua_function(tolua_S,"getSaveData",lua_mgame_UserObj_getSaveData);
        tolua_function(tolua_S,"getDailyMissionTipPointByType",lua_mgame_UserObj_getDailyMissionTipPointByType);
        tolua_function(tolua_S,"getIsShowDailyMissionProgress",lua_mgame_UserObj_getIsShowDailyMissionProgress);
        tolua_function(tolua_S,"sendGetNewBieList",lua_mgame_UserObj_sendGetNewBieList);
        tolua_function(tolua_S,"getIsBranch",lua_mgame_UserObj_getIsBranch);
        tolua_function(tolua_S,"getReceiveAward",lua_mgame_UserObj_getReceiveAward);
        tolua_function(tolua_S,"getOpenID",lua_mgame_UserObj_getOpenID);
        tolua_function(tolua_S,"getChannelPlayerName",lua_mgame_UserObj_getChannelPlayerName);
        tolua_function(tolua_S,"loadPlayerData",lua_mgame_UserObj_loadPlayerData);
        tolua_function(tolua_S,"setPlayerDataStr",lua_mgame_UserObj_setPlayerDataStr);
        tolua_function(tolua_S,"setProp",lua_mgame_UserObj_setProp);
        tolua_function(tolua_S,"getIsShopBuy",lua_mgame_UserObj_getIsShopBuy);
        tolua_function(tolua_S,"setCurInfoType",lua_mgame_UserObj_setCurInfoType);
        tolua_function(tolua_S,"refreshLostPointData",lua_mgame_UserObj_refreshLostPointData);
        tolua_function(tolua_S,"convertToUin",lua_mgame_UserObj_convertToUin);
        tolua_function(tolua_S,"setSaveDataOnLine",lua_mgame_UserObj_setSaveDataOnLine);
        tolua_function(tolua_S,"addActNoticeData",lua_mgame_UserObj_addActNoticeData);
        tolua_function(tolua_S,"getCurInfoType",lua_mgame_UserObj_getCurInfoType);
        tolua_function(tolua_S,"setIsOpenCrazyWeek",lua_mgame_UserObj_setIsOpenCrazyWeek);
        tolua_function(tolua_S,"getRankGroup",lua_mgame_UserObj_getRankGroup);
        tolua_function(tolua_S,"getBadges",lua_mgame_UserObj_getBadges);
        tolua_function(tolua_S,"setChatTimeLeft",lua_mgame_UserObj_setChatTimeLeft);
        tolua_function(tolua_S,"getIsShowDailyMissionBtn",lua_mgame_UserObj_getIsShowDailyMissionBtn);
        tolua_function(tolua_S,"checkIsHaveAllNoticeData",lua_mgame_UserObj_checkIsHaveAllNoticeData);
        tolua_function(tolua_S,"setScore",lua_mgame_UserObj_setScore);
        tolua_function(tolua_S,"setChatFreeCount",lua_mgame_UserObj_setChatFreeCount);
        tolua_function(tolua_S,"loadGlyphStuff",lua_mgame_UserObj_loadGlyphStuff);
        tolua_function(tolua_S,"setMaxOpenGateID",lua_mgame_UserObj_setMaxOpenGateID);
        tolua_function(tolua_S,"getHaveGlyph",lua_mgame_UserObj_getHaveGlyph);
        tolua_function(tolua_S,"refreshPropItemData",lua_mgame_UserObj_refreshPropItemData);
        tolua_function(tolua_S,"getPropItem",lua_mgame_UserObj_getPropItem);
        tolua_function(tolua_S,"update",lua_mgame_UserObj_update);
        tolua_function(tolua_S,"getTotalStars",lua_mgame_UserObj_getTotalStars);
        tolua_function(tolua_S,"setIsShowDailyMissionBtn",lua_mgame_UserObj_setIsShowDailyMissionBtn);
        tolua_function(tolua_S,"getIsOpenCrazyWeek",lua_mgame_UserObj_getIsOpenCrazyWeek);
        tolua_function(tolua_S,"setWinnerType",lua_mgame_UserObj_setWinnerType);
        tolua_function(tolua_S,"setInputID",lua_mgame_UserObj_setInputID);
        tolua_function(tolua_S,"initVipTime",lua_mgame_UserObj_initVipTime);
        tolua_function(tolua_S,"checkNoSavaData",lua_mgame_UserObj_checkNoSavaData);
        tolua_function(tolua_S,"setGateState",lua_mgame_UserObj_setGateState);
        tolua_function(tolua_S,"setReceiveAward",lua_mgame_UserObj_setReceiveAward);
        tolua_function(tolua_S,"isCanGetMonthCard",lua_mgame_UserObj_isCanGetMonthCard);
        tolua_function(tolua_S,"setPlayerUpgradeState",lua_mgame_UserObj_setPlayerUpgradeState);
        tolua_function(tolua_S,"setOpenID",lua_mgame_UserObj_setOpenID);
        tolua_function(tolua_S,"addDailyMissionTips",lua_mgame_UserObj_addDailyMissionTips);
        tolua_function(tolua_S,"setHaveGlyph",lua_mgame_UserObj_setHaveGlyph);
        tolua_function(tolua_S,"getCurInfoUin",lua_mgame_UserObj_getCurInfoUin);
        tolua_function(tolua_S,"getGlyphStuffNum",lua_mgame_UserObj_getGlyphStuffNum);
        tolua_function(tolua_S,"sendDailyMissionData",lua_mgame_UserObj_sendDailyMissionData);
        tolua_function(tolua_S,"getIsAfterAwardOpenAgain",lua_mgame_UserObj_getIsAfterAwardOpenAgain);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(UserObj).name();
    g_luaType[typeName] = "UserObj";
    g_typeCast["UserObj"] = "UserObj";
    return 1;
}

int lua_mgame_ChannelApi_setAccountChoice(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_setAccountChoice'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ChannelApi:setAccountChoice");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_setAccountChoice'", nullptr);
            return 0;
        }
        cobj->setAccountChoice(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:setAccountChoice",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_setAccountChoice'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getPayToken(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getPayToken'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getPayToken'", nullptr);
            return 0;
        }
        std::string ret = cobj->getPayToken();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getPayToken",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getPayToken'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getServerStateInfo(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getServerStateInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getServerStateInfo'", nullptr);
            return 0;
        }
        const char* ret = cobj->getServerStateInfo();
        tolua_pushstring(tolua_S,(const char*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getServerStateInfo",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getServerStateInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_uploadSDKInfo(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_uploadSDKInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        std::string arg0;
        std::string arg1;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ChannelApi:uploadSDKInfo");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "ChannelApi:uploadSDKInfo");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_uploadSDKInfo'", nullptr);
            return 0;
        }
        cobj->uploadSDKInfo(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:uploadSDKInfo",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_uploadSDKInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getAccountChoice(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getAccountChoice'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getAccountChoice'", nullptr);
            return 0;
        }
        int ret = cobj->getAccountChoice();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getAccountChoice",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getAccountChoice'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getXGPushToken(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getXGPushToken'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getXGPushToken'", nullptr);
            return 0;
        }
        std::string ret = cobj->getXGPushToken();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getXGPushToken",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getXGPushToken'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getPaySdkType(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getPaySdkType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getPaySdkType'", nullptr);
            return 0;
        }
        int ret = (int)cobj->getPaySdkType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getPaySdkType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getPaySdkType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getDirURL(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getDirURL'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getDirURL'", nullptr);
            return 0;
        }
        const char* ret = cobj->getDirURL();
        tolua_pushstring(tolua_S,(const char*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getDirURL",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getDirURL'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getOperatorId(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getOperatorId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getOperatorId'", nullptr);
            return 0;
        }
        int ret = cobj->getOperatorId();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getOperatorId",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getOperatorId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_uploadUin(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_uploadUin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ChannelApi:uploadUin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_uploadUin'", nullptr);
            return 0;
        }
        cobj->uploadUin(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:uploadUin",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_uploadUin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getSession(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getSession'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getSession'", nullptr);
            return 0;
        }
        std::string ret = cobj->getSession();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getSession",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getSession'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getSDCardPath(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getSDCardPath'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getSDCardPath'", nullptr);
            return 0;
        }
        std::string ret = cobj->getSDCardPath();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getSDCardPath",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getSDCardPath'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getEmergLoginDNS(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getEmergLoginDNS'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getEmergLoginDNS'", nullptr);
            return 0;
        }
        const char* ret = cobj->getEmergLoginDNS();
        tolua_pushstring(tolua_S,(const char*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getEmergLoginDNS",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getEmergLoginDNS'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_setIsDiffAccount(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_setIsDiffAccount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "ChannelApi:setIsDiffAccount");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_setIsDiffAccount'", nullptr);
            return 0;
        }
        cobj->setIsDiffAccount(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:setIsDiffAccount",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_setIsDiffAccount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_init(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_init'", nullptr);
            return 0;
        }
        bool ret = cobj->init();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getChannelId(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getChannelId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getChannelId'", nullptr);
            return 0;
        }
        int ret = cobj->getChannelId();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getChannelId",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getChannelId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_setChannelInfo(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_setChannelInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ChannelApi:setChannelInfo");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "ChannelApi:setChannelInfo");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_setChannelInfo'", nullptr);
            return 0;
        }
        cobj->setChannelInfo(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:setChannelInfo",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_setChannelInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_uploadPlayerInfo(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_uploadPlayerInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 4) 
    {
        std::string arg0;
        std::string arg1;
        std::string arg2;
        std::string arg3;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ChannelApi:uploadPlayerInfo");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "ChannelApi:uploadPlayerInfo");

        ok &= luaval_to_std_string(tolua_S, 4,&arg2, "ChannelApi:uploadPlayerInfo");

        ok &= luaval_to_std_string(tolua_S, 5,&arg3, "ChannelApi:uploadPlayerInfo");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_uploadPlayerInfo'", nullptr);
            return 0;
        }
        cobj->uploadPlayerInfo(arg0, arg1, arg2, arg3);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:uploadPlayerInfo",argc, 4);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_uploadPlayerInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_setPayToken(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_setPayToken'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ChannelApi:setPayToken");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_setPayToken'", nullptr);
            return 0;
        }
        cobj->setPayToken(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:setPayToken",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_setPayToken'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_channelPay(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_channelPay'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 4) 
    {
        int arg0;
        std::string arg1;
        double arg2;
        std::string arg3;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ChannelApi:channelPay");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "ChannelApi:channelPay");

        ok &= luaval_to_number(tolua_S, 4,&arg2, "ChannelApi:channelPay");

        ok &= luaval_to_std_string(tolua_S, 5,&arg3, "ChannelApi:channelPay");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_channelPay'", nullptr);
            return 0;
        }
        cobj->channelPay(arg0, arg1, arg2, arg3);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:channelPay",argc, 4);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_channelPay'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_setXGPushToken(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_setXGPushToken'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ChannelApi:setXGPushToken");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_setXGPushToken'", nullptr);
            return 0;
        }
        cobj->setXGPushToken(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:setXGPushToken",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_setXGPushToken'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_share(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_share'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 8) 
    {
        int arg0;
        std::string arg1;
        std::string arg2;
        std::string arg3;
        std::string arg4;
        double arg5;
        double arg6;
        double arg7;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ChannelApi:share");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "ChannelApi:share");

        ok &= luaval_to_std_string(tolua_S, 4,&arg2, "ChannelApi:share");

        ok &= luaval_to_std_string(tolua_S, 5,&arg3, "ChannelApi:share");

        ok &= luaval_to_std_string(tolua_S, 6,&arg4, "ChannelApi:share");

        ok &= luaval_to_number(tolua_S, 7,&arg5, "ChannelApi:share");

        ok &= luaval_to_number(tolua_S, 8,&arg6, "ChannelApi:share");

        ok &= luaval_to_number(tolua_S, 9,&arg7, "ChannelApi:share");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_share'", nullptr);
            return 0;
        }
        cobj->share(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:share",argc, 8);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_share'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getPlatformName(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getPlatformName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getPlatformName'", nullptr);
            return 0;
        }
        std::string ret = cobj->getPlatformName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getPlatformName",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getPlatformName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getIsDiffAccount(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getIsDiffAccount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getIsDiffAccount'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsDiffAccount();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getIsDiffAccount",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getIsDiffAccount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_channelLogin(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_channelLogin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ChannelApi:channelLogin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_channelLogin'", nullptr);
            return 0;
        }
        bool ret = cobj->channelLogin(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:channelLogin",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_channelLogin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_channelQuit(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_channelQuit'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_channelQuit'", nullptr);
            return 0;
        }
        cobj->channelQuit();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:channelQuit",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_channelQuit'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getVersion(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getVersion'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getVersion'", nullptr);
            return 0;
        }
        std::string ret = cobj->getVersion();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getVersion",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getVersion'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_isOnlineSdk(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_isOnlineSdk'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_isOnlineSdk'", nullptr);
            return 0;
        }
        bool ret = cobj->isOnlineSdk();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:isOnlineSdk",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_isOnlineSdk'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_channelLogout(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_channelLogout'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_channelLogout'", nullptr);
            return 0;
        }
        cobj->channelLogout();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:channelLogout",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_channelLogout'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_callResLoadOver(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_callResLoadOver'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_callResLoadOver'", nullptr);
            return 0;
        }
        cobj->callResLoadOver();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:callResLoadOver",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_callResLoadOver'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_callLogin(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_callLogin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ChannelApi:callLogin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_callLogin'", nullptr);
            return 0;
        }
        cobj->callLogin(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:callLogin",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_callLogin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getImei(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getImei'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getImei'", nullptr);
            return 0;
        }
        std::string ret = cobj->getImei();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getImei",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getImei'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getDefaultLogin(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getDefaultLogin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getDefaultLogin'", nullptr);
            return 0;
        }
        const char* ret = cobj->getDefaultLogin();
        tolua_pushstring(tolua_S,(const char*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getDefaultLogin",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getDefaultLogin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_callMoreGame(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_callMoreGame'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_callMoreGame'", nullptr);
            return 0;
        }
        cobj->callMoreGame();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:callMoreGame",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_callMoreGame'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getSDKChargeURL(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getSDKChargeURL'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getSDKChargeURL'", nullptr);
            return 0;
        }
        const char* ret = cobj->getSDKChargeURL();
        tolua_pushstring(tolua_S,(const char*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getSDKChargeURL",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getSDKChargeURL'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_getDefaultLoginDNS(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_getDefaultLoginDNS'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_getDefaultLoginDNS'", nullptr);
            return 0;
        }
        const char* ret = cobj->getDefaultLoginDNS();
        tolua_pushstring(tolua_S,(const char*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:getDefaultLoginDNS",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_getDefaultLoginDNS'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_setSession(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ChannelApi",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ChannelApi*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ChannelApi_setSession'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ChannelApi:setSession");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_setSession'", nullptr);
            return 0;
        }
        cobj->setSession(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:setSession",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_setSession'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ChannelApi_constructor(lua_State* tolua_S)
{
    int argc = 0;
    ChannelApi* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ChannelApi_constructor'", nullptr);
            return 0;
        }
        cobj = new ChannelApi();
        tolua_pushusertype(tolua_S,(void*)cobj,"ChannelApi");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ChannelApi:ChannelApi",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ChannelApi_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_ChannelApi_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (ChannelApi)");
    return 0;
}

int lua_register_mgame_ChannelApi(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"ChannelApi");
    tolua_cclass(tolua_S,"ChannelApi","ChannelApi","",nullptr);

    tolua_beginmodule(tolua_S,"ChannelApi");
        tolua_function(tolua_S,"new",lua_mgame_ChannelApi_constructor);
        tolua_function(tolua_S,"setAccountChoice",lua_mgame_ChannelApi_setAccountChoice);
        tolua_function(tolua_S,"getPayToken",lua_mgame_ChannelApi_getPayToken);
        tolua_function(tolua_S,"getServerStateInfo",lua_mgame_ChannelApi_getServerStateInfo);
        tolua_function(tolua_S,"uploadSDKInfo",lua_mgame_ChannelApi_uploadSDKInfo);
        tolua_function(tolua_S,"getAccountChoice",lua_mgame_ChannelApi_getAccountChoice);
        tolua_function(tolua_S,"getXGPushToken",lua_mgame_ChannelApi_getXGPushToken);
        tolua_function(tolua_S,"getPaySdkType",lua_mgame_ChannelApi_getPaySdkType);
        tolua_function(tolua_S,"getDirURL",lua_mgame_ChannelApi_getDirURL);
        tolua_function(tolua_S,"getOperatorId",lua_mgame_ChannelApi_getOperatorId);
        tolua_function(tolua_S,"uploadUin",lua_mgame_ChannelApi_uploadUin);
        tolua_function(tolua_S,"getSession",lua_mgame_ChannelApi_getSession);
        tolua_function(tolua_S,"getSDCardPath",lua_mgame_ChannelApi_getSDCardPath);
        tolua_function(tolua_S,"getEmergLoginDNS",lua_mgame_ChannelApi_getEmergLoginDNS);
        tolua_function(tolua_S,"setIsDiffAccount",lua_mgame_ChannelApi_setIsDiffAccount);
        tolua_function(tolua_S,"init",lua_mgame_ChannelApi_init);
        tolua_function(tolua_S,"getChannelId",lua_mgame_ChannelApi_getChannelId);
        tolua_function(tolua_S,"setChannelInfo",lua_mgame_ChannelApi_setChannelInfo);
        tolua_function(tolua_S,"uploadPlayerInfo",lua_mgame_ChannelApi_uploadPlayerInfo);
        tolua_function(tolua_S,"setPayToken",lua_mgame_ChannelApi_setPayToken);
        tolua_function(tolua_S,"channelPay",lua_mgame_ChannelApi_channelPay);
        tolua_function(tolua_S,"setXGPushToken",lua_mgame_ChannelApi_setXGPushToken);
        tolua_function(tolua_S,"share",lua_mgame_ChannelApi_share);
        tolua_function(tolua_S,"getPlatformName",lua_mgame_ChannelApi_getPlatformName);
        tolua_function(tolua_S,"getIsDiffAccount",lua_mgame_ChannelApi_getIsDiffAccount);
        tolua_function(tolua_S,"channelLogin",lua_mgame_ChannelApi_channelLogin);
        tolua_function(tolua_S,"channelQuit",lua_mgame_ChannelApi_channelQuit);
        tolua_function(tolua_S,"getVersion",lua_mgame_ChannelApi_getVersion);
        tolua_function(tolua_S,"isOnlineSdk",lua_mgame_ChannelApi_isOnlineSdk);
        tolua_function(tolua_S,"channelLogout",lua_mgame_ChannelApi_channelLogout);
        tolua_function(tolua_S,"callResLoadOver",lua_mgame_ChannelApi_callResLoadOver);
        tolua_function(tolua_S,"callLogin",lua_mgame_ChannelApi_callLogin);
        tolua_function(tolua_S,"getImei",lua_mgame_ChannelApi_getImei);
        tolua_function(tolua_S,"getDefaultLogin",lua_mgame_ChannelApi_getDefaultLogin);
        tolua_function(tolua_S,"callMoreGame",lua_mgame_ChannelApi_callMoreGame);
        tolua_function(tolua_S,"getSDKChargeURL",lua_mgame_ChannelApi_getSDKChargeURL);
        tolua_function(tolua_S,"getDefaultLoginDNS",lua_mgame_ChannelApi_getDefaultLoginDNS);
        tolua_function(tolua_S,"setSession",lua_mgame_ChannelApi_setSession);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(ChannelApi).name();
    g_luaType[typeName] = "ChannelApi";
    g_typeCast["ChannelApi"] = "ChannelApi";
    return 1;
}

int lua_mgame_TextHelper_init(lua_State* tolua_S)
{
    int argc = 0;
    TextHelper* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TextHelper",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TextHelper*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TextHelper_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TextHelper_init'", nullptr);
            return 0;
        }
        bool ret = cobj->init();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TextHelper:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TextHelper_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TextHelper_getText(lua_State* tolua_S)
{
    int argc = 0;
    TextHelper* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TextHelper",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TextHelper*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TextHelper_getText'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TextHelper_getText'", nullptr);
            return 0;
        }
        std::string ret = cobj->getText();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TextHelper:getText",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TextHelper_getText'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TextHelper_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"TextHelper",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TextHelper_create'", nullptr);
            return 0;
        }
        TextHelper* ret = TextHelper::create();
        object_to_luaval<TextHelper>(tolua_S, "TextHelper",(TextHelper*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "TextHelper:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TextHelper_create'.",&tolua_err);
#endif
    return 0;
}
static int lua_mgame_TextHelper_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (TextHelper)");
    return 0;
}

int lua_register_mgame_TextHelper(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"TextHelper");
    tolua_cclass(tolua_S,"TextHelper","TextHelper","",nullptr);

    tolua_beginmodule(tolua_S,"TextHelper");
        tolua_function(tolua_S,"init",lua_mgame_TextHelper_init);
        tolua_function(tolua_S,"getText",lua_mgame_TextHelper_getText);
        tolua_function(tolua_S,"create", lua_mgame_TextHelper_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(TextHelper).name();
    g_luaType[typeName] = "TextHelper";
    g_typeCast["TextHelper"] = "TextHelper";
    return 1;
}

int lua_mgame_PropInfo_getIcon(lua_State* tolua_S)
{
    int argc = 0;
    PropInfo* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropInfo",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropInfo*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropInfo_getIcon'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropInfo_getIcon'", nullptr);
            return 0;
        }
        std::string ret = cobj->getIcon();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropInfo:getIcon",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropInfo_getIcon'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropInfo_init(lua_State* tolua_S)
{
    int argc = 0;
    PropInfo* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropInfo",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropInfo*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropInfo_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropInfo_init'", nullptr);
            return 0;
        }
        bool ret = cobj->init();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropInfo:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropInfo_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropInfo_getName(lua_State* tolua_S)
{
    int argc = 0;
    PropInfo* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropInfo",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropInfo*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropInfo_getName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropInfo_getName'", nullptr);
            return 0;
        }
        std::string ret = cobj->getName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropInfo:getName",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropInfo_getName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropInfo_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"PropInfo",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropInfo_create'", nullptr);
            return 0;
        }
        PropInfo* ret = PropInfo::create();
        object_to_luaval<PropInfo>(tolua_S, "PropInfo",(PropInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "PropInfo:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropInfo_create'.",&tolua_err);
#endif
    return 0;
}
static int lua_mgame_PropInfo_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (PropInfo)");
    return 0;
}

int lua_register_mgame_PropInfo(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"PropInfo");
    tolua_cclass(tolua_S,"PropInfo","PropInfo","",nullptr);

    tolua_beginmodule(tolua_S,"PropInfo");
        tolua_function(tolua_S,"getIcon",lua_mgame_PropInfo_getIcon);
        tolua_function(tolua_S,"init",lua_mgame_PropInfo_init);
        tolua_function(tolua_S,"getName",lua_mgame_PropInfo_getName);
        tolua_function(tolua_S,"create", lua_mgame_PropInfo_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(PropInfo).name();
    g_luaType[typeName] = "PropInfo";
    g_typeCast["PropInfo"] = "PropInfo";
    return 1;
}

int lua_mgame_GiftAward_getRoomCard(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getRoomCard'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getRoomCard'", nullptr);
            return 0;
        }
        int ret = cobj->getRoomCard();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getRoomCard",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getRoomCard'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getPropIdByIndex(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getPropIdByIndex'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GiftAward:getPropIdByIndex");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getPropIdByIndex'", nullptr);
            return 0;
        }
        int ret = cobj->getPropIdByIndex(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getPropIdByIndex",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getPropIdByIndex'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getGiftInfoNumberByIndex(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getGiftInfoNumberByIndex'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GiftAward:getGiftInfoNumberByIndex");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getGiftInfoNumberByIndex'", nullptr);
            return 0;
        }
        int ret = cobj->getGiftInfoNumberByIndex(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getGiftInfoNumberByIndex",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getGiftInfoNumberByIndex'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getPvePower(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getPvePower'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getPvePower'", nullptr);
            return 0;
        }
        int ret = cobj->getPvePower();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getPvePower",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getPvePower'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getPvpPower(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getPvpPower'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getPvpPower'", nullptr);
            return 0;
        }
        int ret = cobj->getPvpPower();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getPvpPower",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getPvpPower'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getGiftInfoTypeByIndex(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getGiftInfoTypeByIndex'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GiftAward:getGiftInfoTypeByIndex");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getGiftInfoTypeByIndex'", nullptr);
            return 0;
        }
        int ret = cobj->getGiftInfoTypeByIndex(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getGiftInfoTypeByIndex",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getGiftInfoTypeByIndex'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getGold(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getGold'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getGold'", nullptr);
            return 0;
        }
        int ret = cobj->getGold();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getGold",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getGold'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_init(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_init'", nullptr);
            return 0;
        }
        bool ret = cobj->init();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getHonor(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getHonor'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getHonor'", nullptr);
            return 0;
        }
        int ret = cobj->getHonor();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getHonor",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getHonor'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getGiftInfoIdByIndex(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getGiftInfoIdByIndex'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GiftAward:getGiftInfoIdByIndex");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getGiftInfoIdByIndex'", nullptr);
            return 0;
        }
        int ret = cobj->getGiftInfoIdByIndex(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getGiftInfoIdByIndex",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getGiftInfoIdByIndex'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getGiftInfoSize(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getGiftInfoSize'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getGiftInfoSize'", nullptr);
            return 0;
        }
        int ret = cobj->getGiftInfoSize();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getGiftInfoSize",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getGiftInfoSize'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_getPropCountByIndex(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAward*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAward_getPropCountByIndex'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GiftAward:getPropCountByIndex");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_getPropCountByIndex'", nullptr);
            return 0;
        }
        int ret = cobj->getPropCountByIndex(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:getPropCountByIndex",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_getPropCountByIndex'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAward_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GiftAward",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_create'", nullptr);
            return 0;
        }
        GiftAward* ret = GiftAward::create();
        object_to_luaval<GiftAward>(tolua_S, "GiftAward",(GiftAward*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GiftAward:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GiftAward_constructor(lua_State* tolua_S)
{
    int argc = 0;
    GiftAward* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAward_constructor'", nullptr);
            return 0;
        }
        cobj = new GiftAward();
        tolua_pushusertype(tolua_S,(void*)cobj,"GiftAward");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAward:GiftAward",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAward_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_GiftAward_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (GiftAward)");
    return 0;
}

int lua_register_mgame_GiftAward(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"GiftAward");
    tolua_cclass(tolua_S,"GiftAward","GiftAward","",nullptr);

    tolua_beginmodule(tolua_S,"GiftAward");
        tolua_function(tolua_S,"new",lua_mgame_GiftAward_constructor);
        tolua_function(tolua_S,"getRoomCard",lua_mgame_GiftAward_getRoomCard);
        tolua_function(tolua_S,"getPropIdByIndex",lua_mgame_GiftAward_getPropIdByIndex);
        tolua_function(tolua_S,"getGiftInfoNumberByIndex",lua_mgame_GiftAward_getGiftInfoNumberByIndex);
        tolua_function(tolua_S,"getPvePower",lua_mgame_GiftAward_getPvePower);
        tolua_function(tolua_S,"getPvpPower",lua_mgame_GiftAward_getPvpPower);
        tolua_function(tolua_S,"getGiftInfoTypeByIndex",lua_mgame_GiftAward_getGiftInfoTypeByIndex);
        tolua_function(tolua_S,"getGold",lua_mgame_GiftAward_getGold);
        tolua_function(tolua_S,"init",lua_mgame_GiftAward_init);
        tolua_function(tolua_S,"getHonor",lua_mgame_GiftAward_getHonor);
        tolua_function(tolua_S,"getGiftInfoIdByIndex",lua_mgame_GiftAward_getGiftInfoIdByIndex);
        tolua_function(tolua_S,"getGiftInfoSize",lua_mgame_GiftAward_getGiftInfoSize);
        tolua_function(tolua_S,"getPropCountByIndex",lua_mgame_GiftAward_getPropCountByIndex);
        tolua_function(tolua_S,"create", lua_mgame_GiftAward_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(GiftAward).name();
    g_luaType[typeName] = "GiftAward";
    g_typeCast["GiftAward"] = "GiftAward";
    return 1;
}

int lua_mgame_GradeData_getRandWinScore(lua_State* tolua_S)
{
    int argc = 0;
    GradeData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GradeData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GradeData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GradeData_getRandWinScore'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GradeData_getRandWinScore'", nullptr);
            return 0;
        }
        int ret = cobj->getRandWinScore();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GradeData:getRandWinScore",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GradeData_getRandWinScore'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GradeData_getName(lua_State* tolua_S)
{
    int argc = 0;
    GradeData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GradeData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GradeData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GradeData_getName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GradeData_getName'", nullptr);
            return 0;
        }
        const std::string& ret = cobj->getName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GradeData:getName",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GradeData_getName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GradeData_getRandLoseScore(lua_State* tolua_S)
{
    int argc = 0;
    GradeData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GradeData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GradeData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GradeData_getRandLoseScore'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GradeData_getRandLoseScore'", nullptr);
            return 0;
        }
        int ret = cobj->getRandLoseScore();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GradeData:getRandLoseScore",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GradeData_getRandLoseScore'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GradeData_getID(lua_State* tolua_S)
{
    int argc = 0;
    GradeData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GradeData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GradeData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GradeData_getID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GradeData_getID'", nullptr);
            return 0;
        }
        int ret = cobj->getID();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GradeData:getID",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GradeData_getID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GradeData_getMinPoint(lua_State* tolua_S)
{
    int argc = 0;
    GradeData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GradeData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GradeData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GradeData_getMinPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GradeData_getMinPoint'", nullptr);
            return 0;
        }
        int ret = cobj->getMinPoint();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GradeData:getMinPoint",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GradeData_getMinPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GradeData_getGroup(lua_State* tolua_S)
{
    int argc = 0;
    GradeData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GradeData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GradeData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GradeData_getGroup'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GradeData_getGroup'", nullptr);
            return 0;
        }
        int ret = (int)cobj->getGroup();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GradeData:getGroup",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GradeData_getGroup'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GradeData_getMaxPoint(lua_State* tolua_S)
{
    int argc = 0;
    GradeData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GradeData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GradeData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GradeData_getMaxPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GradeData_getMaxPoint'", nullptr);
            return 0;
        }
        int ret = cobj->getMaxPoint();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GradeData:getMaxPoint",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GradeData_getMaxPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GradeData_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GradeData",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GradeData_create'", nullptr);
            return 0;
        }
        GradeData* ret = GradeData::create();
        object_to_luaval<GradeData>(tolua_S, "GradeData",(GradeData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GradeData:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GradeData_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GradeData_constructor(lua_State* tolua_S)
{
    int argc = 0;
    GradeData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GradeData_constructor'", nullptr);
            return 0;
        }
        cobj = new GradeData();
        tolua_pushusertype(tolua_S,(void*)cobj,"GradeData");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GradeData:GradeData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GradeData_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_GradeData_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (GradeData)");
    return 0;
}

int lua_register_mgame_GradeData(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"GradeData");
    tolua_cclass(tolua_S,"GradeData","GradeData","",nullptr);

    tolua_beginmodule(tolua_S,"GradeData");
        tolua_function(tolua_S,"new",lua_mgame_GradeData_constructor);
        tolua_function(tolua_S,"getRandWinScore",lua_mgame_GradeData_getRandWinScore);
        tolua_function(tolua_S,"getName",lua_mgame_GradeData_getName);
        tolua_function(tolua_S,"getRandLoseScore",lua_mgame_GradeData_getRandLoseScore);
        tolua_function(tolua_S,"getID",lua_mgame_GradeData_getID);
        tolua_function(tolua_S,"getMinPoint",lua_mgame_GradeData_getMinPoint);
        tolua_function(tolua_S,"getGroup",lua_mgame_GradeData_getGroup);
        tolua_function(tolua_S,"getMaxPoint",lua_mgame_GradeData_getMaxPoint);
        tolua_function(tolua_S,"create", lua_mgame_GradeData_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(GradeData).name();
    g_luaType[typeName] = "GradeData";
    g_typeCast["GradeData"] = "GradeData";
    return 1;
}

int lua_mgame_VipData_setAddHonor(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_setAddHonor'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "VipData:setAddHonor");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_setAddHonor'", nullptr);
            return 0;
        }
        cobj->setAddHonor(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:setAddHonor",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_setAddHonor'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_setPowerSlot(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_setPowerSlot'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "VipData:setPowerSlot");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_setPowerSlot'", nullptr);
            return 0;
        }
        cobj->setPowerSlot(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:setPowerSlot",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_setPowerSlot'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_setEnergySlot(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_setEnergySlot'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "VipData:setEnergySlot");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_setEnergySlot'", nullptr);
            return 0;
        }
        cobj->setEnergySlot(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:setEnergySlot",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_setEnergySlot'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_setName(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_setName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "VipData:setName");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_setName'", nullptr);
            return 0;
        }
        cobj->setName(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:setName",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_setName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_getHIcon(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_getHIcon'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_getHIcon'", nullptr);
            return 0;
        }
        std::string ret = cobj->getHIcon();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:getHIcon",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_getHIcon'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_getEnergySlot(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_getEnergySlot'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_getEnergySlot'", nullptr);
            return 0;
        }
        int ret = cobj->getEnergySlot();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:getEnergySlot",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_getEnergySlot'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_getName(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_getName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_getName'", nullptr);
            return 0;
        }
        std::string ret = cobj->getName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:getName",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_getName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_getID(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_getID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_getID'", nullptr);
            return 0;
        }
        int ret = cobj->getID();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:getID",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_getID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_setShopDiscount(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_setShopDiscount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "VipData:setShopDiscount");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_setShopDiscount'", nullptr);
            return 0;
        }
        cobj->setShopDiscount(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:setShopDiscount",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_setShopDiscount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_getDescribeID(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_getDescribeID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_getDescribeID'", nullptr);
            return 0;
        }
        std::vector<std::string> ret = cobj->getDescribeID();
        ccvector_std_string_to_luaval(tolua_S, ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:getDescribeID",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_getDescribeID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_getShopDiscount(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_getShopDiscount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_getShopDiscount'", nullptr);
            return 0;
        }
        int ret = cobj->getShopDiscount();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:getShopDiscount",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_getShopDiscount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_getPowerSlot(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_getPowerSlot'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_getPowerSlot'", nullptr);
            return 0;
        }
        int ret = cobj->getPowerSlot();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:getPowerSlot",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_getPowerSlot'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_setID(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_setID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "VipData:setID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_setID'", nullptr);
            return 0;
        }
        cobj->setID(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:setID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_setID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_setHIcon(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_setHIcon'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "VipData:setHIcon");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_setHIcon'", nullptr);
            return 0;
        }
        cobj->setHIcon(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:setHIcon",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_setHIcon'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_getAddHonor(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (VipData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_VipData_getAddHonor'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_getAddHonor'", nullptr);
            return 0;
        }
        int ret = cobj->getAddHonor();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:getAddHonor",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_getAddHonor'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_VipData_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"VipData",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_create'", nullptr);
            return 0;
        }
        VipData* ret = VipData::create();
        object_to_luaval<VipData>(tolua_S, "VipData",(VipData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "VipData:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_VipData_constructor(lua_State* tolua_S)
{
    int argc = 0;
    VipData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_VipData_constructor'", nullptr);
            return 0;
        }
        cobj = new VipData();
        tolua_pushusertype(tolua_S,(void*)cobj,"VipData");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "VipData:VipData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_VipData_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_VipData_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (VipData)");
    return 0;
}

int lua_register_mgame_VipData(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"VipData");
    tolua_cclass(tolua_S,"VipData","VipData","",nullptr);

    tolua_beginmodule(tolua_S,"VipData");
        tolua_function(tolua_S,"new",lua_mgame_VipData_constructor);
        tolua_function(tolua_S,"setAddHonor",lua_mgame_VipData_setAddHonor);
        tolua_function(tolua_S,"setPowerSlot",lua_mgame_VipData_setPowerSlot);
        tolua_function(tolua_S,"setEnergySlot",lua_mgame_VipData_setEnergySlot);
        tolua_function(tolua_S,"setName",lua_mgame_VipData_setName);
        tolua_function(tolua_S,"getHIcon",lua_mgame_VipData_getHIcon);
        tolua_function(tolua_S,"getEnergySlot",lua_mgame_VipData_getEnergySlot);
        tolua_function(tolua_S,"getName",lua_mgame_VipData_getName);
        tolua_function(tolua_S,"getID",lua_mgame_VipData_getID);
        tolua_function(tolua_S,"setShopDiscount",lua_mgame_VipData_setShopDiscount);
        tolua_function(tolua_S,"getDescribeID",lua_mgame_VipData_getDescribeID);
        tolua_function(tolua_S,"getShopDiscount",lua_mgame_VipData_getShopDiscount);
        tolua_function(tolua_S,"getPowerSlot",lua_mgame_VipData_getPowerSlot);
        tolua_function(tolua_S,"setID",lua_mgame_VipData_setID);
        tolua_function(tolua_S,"setHIcon",lua_mgame_VipData_setHIcon);
        tolua_function(tolua_S,"getAddHonor",lua_mgame_VipData_getAddHonor);
        tolua_function(tolua_S,"create", lua_mgame_VipData_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(VipData).name();
    g_luaType[typeName] = "VipData";
    g_typeCast["VipData"] = "VipData";
    return 1;
}

int lua_mgame_GlyphStuffData_getIcon(lua_State* tolua_S)
{
    int argc = 0;
    GlyphStuffData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GlyphStuffData",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GlyphStuffData*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GlyphStuffData_getIcon'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GlyphStuffData_getIcon'", nullptr);
            return 0;
        }
        std::string ret = cobj->getIcon();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GlyphStuffData:getIcon",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GlyphStuffData_getIcon'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GlyphStuffData_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GlyphStuffData",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GlyphStuffData_create'", nullptr);
            return 0;
        }
        GlyphStuffData* ret = GlyphStuffData::create();
        object_to_luaval<GlyphStuffData>(tolua_S, "GlyphStuffData",(GlyphStuffData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GlyphStuffData:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GlyphStuffData_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GlyphStuffData_constructor(lua_State* tolua_S)
{
    int argc = 0;
    GlyphStuffData* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GlyphStuffData_constructor'", nullptr);
            return 0;
        }
        cobj = new GlyphStuffData();
        tolua_pushusertype(tolua_S,(void*)cobj,"GlyphStuffData");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GlyphStuffData:GlyphStuffData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GlyphStuffData_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_GlyphStuffData_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (GlyphStuffData)");
    return 0;
}

int lua_register_mgame_GlyphStuffData(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"GlyphStuffData");
    tolua_cclass(tolua_S,"GlyphStuffData","GlyphStuffData","",nullptr);

    tolua_beginmodule(tolua_S,"GlyphStuffData");
        tolua_function(tolua_S,"new",lua_mgame_GlyphStuffData_constructor);
        tolua_function(tolua_S,"getIcon",lua_mgame_GlyphStuffData_getIcon);
        tolua_function(tolua_S,"create", lua_mgame_GlyphStuffData_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(GlyphStuffData).name();
    g_luaType[typeName] = "GlyphStuffData";
    g_typeCast["GlyphStuffData"] = "GlyphStuffData";
    return 1;
}

int lua_mgame_GoodsInfo_getIcon(lua_State* tolua_S)
{
    int argc = 0;
    GoodsInfo* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GoodsInfo",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GoodsInfo*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GoodsInfo_getIcon'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GoodsInfo_getIcon'", nullptr);
            return 0;
        }
        std::string ret = cobj->getIcon();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GoodsInfo:getIcon",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GoodsInfo_getIcon'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GoodsInfo_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GoodsInfo",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GoodsInfo_create'", nullptr);
            return 0;
        }
        GoodsInfo* ret = GoodsInfo::create();
        object_to_luaval<GoodsInfo>(tolua_S, "GoodsInfo",(GoodsInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GoodsInfo:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GoodsInfo_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GoodsInfo_constructor(lua_State* tolua_S)
{
    int argc = 0;
    GoodsInfo* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GoodsInfo_constructor'", nullptr);
            return 0;
        }
        cobj = new GoodsInfo();
        tolua_pushusertype(tolua_S,(void*)cobj,"GoodsInfo");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GoodsInfo:GoodsInfo",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GoodsInfo_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_GoodsInfo_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (GoodsInfo)");
    return 0;
}

int lua_register_mgame_GoodsInfo(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"GoodsInfo");
    tolua_cclass(tolua_S,"GoodsInfo","GoodsInfo","",nullptr);

    tolua_beginmodule(tolua_S,"GoodsInfo");
        tolua_function(tolua_S,"new",lua_mgame_GoodsInfo_constructor);
        tolua_function(tolua_S,"getIcon",lua_mgame_GoodsInfo_getIcon);
        tolua_function(tolua_S,"create", lua_mgame_GoodsInfo_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(GoodsInfo).name();
    g_luaType[typeName] = "GoodsInfo";
    g_typeCast["GoodsInfo"] = "GoodsInfo";
    return 1;
}

int lua_mgame_TableManager_getCreepsPoint(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getCreepsPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getCreepsPoint");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getCreepsPoint'", nullptr);
            return 0;
        }
        const CreepsPoint* ret = cobj->getCreepsPoint(arg0);
        object_to_luaval<CreepsPoint>(tolua_S, "CreepsPoint",(CreepsPoint*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getCreepsPoint",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getCreepsPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getBadgeDataTable(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getBadgeDataTable'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getBadgeDataTable'", nullptr);
            return 0;
        }
        const BadgeDataTable* ret = cobj->getBadgeDataTable();
        object_to_luaval<BadgeDataTable>(tolua_S, "BadgeDataTable",(BadgeDataTable*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getBadgeDataTable",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getBadgeDataTable'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getAchievementAwardCount(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getAchievementAwardCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        AchieveCategory arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getAchievementAwardCount");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getAchievementAwardCount'", nullptr);
            return 0;
        }
        int ret = cobj->getAchievementAwardCount(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getAchievementAwardCount",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getAchievementAwardCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getNextCheckPoints(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getNextCheckPoints'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getNextCheckPoints");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "TableManager:getNextCheckPoints");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getNextCheckPoints'", nullptr);
            return 0;
        }
        std::vector<int> ret = cobj->getNextCheckPoints(arg0, arg1);
        ccvector_int_to_luaval(tolua_S, ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getNextCheckPoints",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getNextCheckPoints'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getPowerBuy(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getPowerBuy'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getPowerBuy");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getPowerBuy'", nullptr);
            return 0;
        }
        PowerBuy* ret = cobj->getPowerBuy(arg0);
        object_to_luaval<PowerBuy>(tolua_S, "PowerBuy",(PowerBuy*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getPowerBuy",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getPowerBuy'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_initLoadTables(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_initLoadTables'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_initLoadTables'", nullptr);
            return 0;
        }
        cobj->initLoadTables();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:initLoadTables",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_initLoadTables'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getShopInfoById(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getShopInfoById'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getShopInfoById");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getShopInfoById'", nullptr);
            return 0;
        }
        const ShopInfo* ret = cobj->getShopInfoById(arg0);
        object_to_luaval<ShopInfo>(tolua_S, "ShopInfo",(ShopInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getShopInfoById",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getShopInfoById'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getJungleDataByID(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getJungleDataByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getJungleDataByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getJungleDataByID'", nullptr);
            return 0;
        }
        const JungleData* ret = cobj->getJungleDataByID(arg0);
        object_to_luaval<JungleData>(tolua_S, "JungleData",(JungleData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getJungleDataByID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getJungleDataByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getItemBuyById(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getItemBuyById'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getItemBuyById");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getItemBuyById'", nullptr);
            return 0;
        }
        const ItemBuyInfo* ret = cobj->getItemBuyById(arg0);
        object_to_luaval<ItemBuyInfo>(tolua_S, "ItemBuyInfo",(ItemBuyInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getItemBuyById",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getItemBuyById'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getPlatformName(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getPlatformName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getPlatformName");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getPlatformName'", nullptr);
            return 0;
        }
        std::string ret = cobj->getPlatformName(arg0);
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getPlatformName",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getPlatformName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getNoticeData(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getNoticeData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getNoticeData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getNoticeData'", nullptr);
            return 0;
        }
        NoticeData* ret = cobj->getNoticeData(arg0);
        object_to_luaval<NoticeData>(tolua_S, "NoticeData",(NoticeData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getNoticeData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getNoticeData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getWinnerDataNum(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getWinnerDataNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getWinnerDataNum'", nullptr);
            return 0;
        }
        int ret = cobj->getWinnerDataNum();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getWinnerDataNum",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getWinnerDataNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getGoodsInfo(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getGoodsInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getGoodsInfo");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getGoodsInfo'", nullptr);
            return 0;
        }
        const GoodsInfo* ret = cobj->getGoodsInfo(arg0);
        object_to_luaval<GoodsInfo>(tolua_S, "GoodsInfo",(GoodsInfo*)ret);
        return 1;
    }
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getGoodsInfo");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "TableManager:getGoodsInfo");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getGoodsInfo'", nullptr);
            return 0;
        }
        const GoodsInfo* ret = cobj->getGoodsInfo(arg0, arg1);
        object_to_luaval<GoodsInfo>(tolua_S, "GoodsInfo",(GoodsInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getGoodsInfo",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getGoodsInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getBible(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getBible'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getBible");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getBible'", nullptr);
            return 0;
        }
        Bible* ret = cobj->getBible(arg0);
        object_to_luaval<Bible>(tolua_S, "Bible",(Bible*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getBible",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getBible'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getNameArea(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getNameArea'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getNameArea");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getNameArea'", nullptr);
            return 0;
        }
        NameArea* ret = cobj->getNameArea(arg0);
        object_to_luaval<NameArea>(tolua_S, "NameArea",(NameArea*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getNameArea",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getNameArea'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getMusicInfoByID(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getMusicInfoByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getMusicInfoByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getMusicInfoByID'", nullptr);
            return 0;
        }
        const MusicInfo* ret = cobj->getMusicInfoByID(arg0);
        object_to_luaval<MusicInfo>(tolua_S, "MusicInfo",(MusicInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getMusicInfoByID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getMusicInfoByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getDayTaskDataById(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getDayTaskDataById'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getDayTaskDataById");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getDayTaskDataById'", nullptr);
            return 0;
        }
        DayTaskData* ret = cobj->getDayTaskDataById(arg0);
        object_to_luaval<DayTaskData>(tolua_S, "DayTaskData",(DayTaskData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getDayTaskDataById",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getDayTaskDataById'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getCreeps(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getCreeps'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getCreeps");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getCreeps'", nullptr);
            return 0;
        }
        const Creeps* ret = cobj->getCreeps(arg0);
        object_to_luaval<Creeps>(tolua_S, "Creeps",(Creeps*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getCreeps",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getCreeps'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getPayLimit(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getPayLimit'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getPayLimit'", nullptr);
            return 0;
        }
        const PayLimit* ret = cobj->getPayLimit();
        object_to_luaval<PayLimit>(tolua_S, "PayLimit",(PayLimit*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getPayLimit",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getPayLimit'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_loadNoticeTable(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_loadNoticeTable'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_loadNoticeTable'", nullptr);
            return 0;
        }
        cobj->loadNoticeTable();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:loadNoticeTable",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_loadNoticeTable'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getActLogin(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getActLogin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getActLogin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getActLogin'", nullptr);
            return 0;
        }
        const ActLogin* ret = cobj->getActLogin(arg0);
        object_to_luaval<ActLogin>(tolua_S, "ActLogin",(ActLogin*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getActLogin",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getActLogin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_loadShopTable(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_loadShopTable'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_loadShopTable'", nullptr);
            return 0;
        }
        cobj->loadShopTable();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:loadShopTable",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_loadShopTable'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getPropType(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getPropType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getPropType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getPropType'", nullptr);
            return 0;
        }
        int ret = cobj->getPropType(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getPropType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getPropType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getNewPlayGiftDataByType(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getNewPlayGiftDataByType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getNewPlayGiftDataByType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getNewPlayGiftDataByType'", nullptr);
            return 0;
        }
        NewPlayGiftData* ret = cobj->getNewPlayGiftDataByType(arg0);
        object_to_luaval<NewPlayGiftData>(tolua_S, "NewPlayGiftData",(NewPlayGiftData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getNewPlayGiftDataByType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getNewPlayGiftDataByType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getPvpChat(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getPvpChat'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getPvpChat");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getPvpChat'", nullptr);
            return 0;
        }
        PvpChat* ret = cobj->getPvpChat(arg0);
        object_to_luaval<PvpChat>(tolua_S, "PvpChat",(PvpChat*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getPvpChat",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getPvpChat'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_unloadAllTables(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_unloadAllTables'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_unloadAllTables'", nullptr);
            return 0;
        }
        cobj->unloadAllTables();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:unloadAllTables",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_unloadAllTables'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_loadAllTables(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_loadAllTables'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_loadAllTables'", nullptr);
            return 0;
        }
        cobj->loadAllTables();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:loadAllTables",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_loadAllTables'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getBuffDataByID(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getBuffDataByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getBuffDataByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getBuffDataByID'", nullptr);
            return 0;
        }
        const BuffData* ret = cobj->getBuffDataByID(arg0);
        object_to_luaval<BuffData>(tolua_S, "BuffData",(BuffData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getBuffDataByID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getBuffDataByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getMapCPoint(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getMapCPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getMapCPoint");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "TableManager:getMapCPoint");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getMapCPoint'", nullptr);
            return 0;
        }
        const CheckPoint* ret = cobj->getMapCPoint(arg0, arg1);
        object_to_luaval<CheckPoint>(tolua_S, "CheckPoint",(CheckPoint*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getMapCPoint",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getMapCPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getExchangeItemCount(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getExchangeItemCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getExchangeItemCount'", nullptr);
            return 0;
        }
        int ret = cobj->getExchangeItemCount();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getExchangeItemCount",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getExchangeItemCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getExchangeItem(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getExchangeItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getExchangeItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getExchangeItem'", nullptr);
            return 0;
        }
        const ExchangeItem* ret = cobj->getExchangeItem(arg0);
        object_to_luaval<ExchangeItem>(tolua_S, "ExchangeItem",(ExchangeItem*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getExchangeItem",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getExchangeItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getBuildIns(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getBuildIns'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getBuildIns");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getBuildIns'", nullptr);
            return 0;
        }
        const BuildIns* ret = cobj->getBuildIns(arg0);
        object_to_luaval<BuildIns>(tolua_S, "BuildIns",(BuildIns*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getBuildIns",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getBuildIns'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_isAchieveMentAwardComplent(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_isAchieveMentAwardComplent'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        AchieveModule arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:isAchieveMentAwardComplent");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_isAchieveMentAwardComplent'", nullptr);
            return 0;
        }
        bool ret = cobj->isAchieveMentAwardComplent(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    if (argc == 2) 
    {
        AchieveModule arg0;
        bool arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:isAchieveMentAwardComplent");

        ok &= luaval_to_boolean(tolua_S, 3,&arg1, "TableManager:isAchieveMentAwardComplent");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_isAchieveMentAwardComplent'", nullptr);
            return 0;
        }
        bool ret = cobj->isAchieveMentAwardComplent(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:isAchieveMentAwardComplent",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_isAchieveMentAwardComplent'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getPropIdByType(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getPropIdByType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        ePropType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getPropIdByType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getPropIdByType'", nullptr);
            return 0;
        }
        int ret = cobj->getPropIdByType(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getPropIdByType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getPropIdByType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getBadgeData(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getBadgeData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getBadgeData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getBadgeData'", nullptr);
            return 0;
        }
        const BadgeData* ret = cobj->getBadgeData(arg0);
        object_to_luaval<BadgeData>(tolua_S, "BadgeData",(BadgeData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getBadgeData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getBadgeData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getGuideDataByID(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getGuideDataByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getGuideDataByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getGuideDataByID'", nullptr);
            return 0;
        }
        const GuideData* ret = cobj->getGuideDataByID(arg0);
        object_to_luaval<GuideData>(tolua_S, "GuideData",(GuideData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getGuideDataByID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getGuideDataByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getGradeData(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getGradeData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getGradeData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getGradeData'", nullptr);
            return 0;
        }
        const GradeData* ret = cobj->getGradeData(arg0);
        object_to_luaval<GradeData>(tolua_S, "GradeData",(GradeData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getGradeData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getGradeData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getActInformDataByIdx(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getActInformDataByIdx'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getActInformDataByIdx");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getActInformDataByIdx'", nullptr);
            return 0;
        }
        ActInformData* ret = cobj->getActInformDataByIdx(arg0);
        object_to_luaval<ActInformData>(tolua_S, "ActInformData",(ActInformData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getActInformDataByIdx",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getActInformDataByIdx'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getGradeByGrade(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getGradeByGrade'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getGradeByGrade");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getGradeByGrade'", nullptr);
            return 0;
        }
        const GradeData* ret = cobj->getGradeByGrade(arg0);
        object_to_luaval<GradeData>(tolua_S, "GradeData",(GradeData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getGradeByGrade",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getGradeByGrade'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getGiftAward(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getGiftAward'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getGiftAward");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getGiftAward'", nullptr);
            return 0;
        }
        const GiftAward* ret = cobj->getGiftAward(arg0);
        object_to_luaval<GiftAward>(tolua_S, "GiftAward",(GiftAward*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getGiftAward",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getGiftAward'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getAchievementById(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getAchievementById'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getAchievementById");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getAchievementById'", nullptr);
            return 0;
        }
        const AchievementAward* ret = cobj->getAchievementById(arg0);
        object_to_luaval<AchievementAward>(tolua_S, "AchievementAward",(AchievementAward*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getAchievementById",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getAchievementById'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getAnimationNameByExpress(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getAnimationNameByExpress'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eExpressType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getAnimationNameByExpress");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getAnimationNameByExpress'", nullptr);
            return 0;
        }
        std::string ret = cobj->getAnimationNameByExpress(arg0);
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getAnimationNameByExpress",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getAnimationNameByExpress'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getWinnerData(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getWinnerData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getWinnerData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getWinnerData'", nullptr);
            return 0;
        }
        const WinnerData* ret = cobj->getWinnerData(arg0);
        object_to_luaval<WinnerData>(tolua_S, "WinnerData",(WinnerData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getWinnerData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getWinnerData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getAnimationNameByCamp(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getAnimationNameByCamp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eCampType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getAnimationNameByCamp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getAnimationNameByCamp'", nullptr);
            return 0;
        }
        std::string ret = cobj->getAnimationNameByCamp(arg0);
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getAnimationNameByCamp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getAnimationNameByCamp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getRechargeData(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getRechargeData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getRechargeData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getRechargeData'", nullptr);
            return 0;
        }
        RechargeData* ret = cobj->getRechargeData(arg0);
        object_to_luaval<RechargeData>(tolua_S, "RechargeData",(RechargeData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getRechargeData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getRechargeData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getActInformData(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getActInformData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getActInformData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getActInformData'", nullptr);
            return 0;
        }
        ActInformData* ret = cobj->getActInformData(arg0);
        object_to_luaval<ActInformData>(tolua_S, "ActInformData",(ActInformData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getActInformData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getActInformData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getLoadState(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getLoadState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getLoadState'", nullptr);
            return 0;
        }
        int ret = (int)cobj->getLoadState();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getLoadState",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getLoadState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getAchievePointAwardById(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getAchievePointAwardById'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getAchievePointAwardById");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getAchievePointAwardById'", nullptr);
            return 0;
        }
        const AchievePointAward* ret = cobj->getAchievePointAwardById(arg0);
        object_to_luaval<AchievePointAward>(tolua_S, "AchievePointAward",(AchievePointAward*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getAchievePointAwardById",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getAchievePointAwardById'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_setLoadState(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_setLoadState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eCsvLoadState arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:setLoadState");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_setLoadState'", nullptr);
            return 0;
        }
        cobj->setLoadState(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:setLoadState",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_setLoadState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getBuildAttr(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getBuildAttr'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getBuildAttr");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getBuildAttr'", nullptr);
            return 0;
        }
        const BuildAttr* ret = cobj->getBuildAttr(arg0);
        object_to_luaval<BuildAttr>(tolua_S, "BuildAttr",(BuildAttr*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getBuildAttr",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getBuildAttr'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getSevenDayMissionByDay(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getSevenDayMissionByDay'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getSevenDayMissionByDay");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getSevenDayMissionByDay'", nullptr);
            return 0;
        }
        SevenDayMission* ret = cobj->getSevenDayMissionByDay(arg0);
        object_to_luaval<SevenDayMission>(tolua_S, "SevenDayMission",(SevenDayMission*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getSevenDayMissionByDay",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getSevenDayMissionByDay'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getErrorCodeByID(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getErrorCodeByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getErrorCodeByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getErrorCodeByID'", nullptr);
            return 0;
        }
        const ErrorCode* ret = cobj->getErrorCodeByID(arg0);
        object_to_luaval<ErrorCode>(tolua_S, "ErrorCode",(ErrorCode*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getErrorCodeByID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getErrorCodeByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getInsistuteAddAttr(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getInsistuteAddAttr'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getInsistuteAddAttr");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getInsistuteAddAttr'", nullptr);
            return 0;
        }
        const InsistuteAddAttr* ret = cobj->getInsistuteAddAttr(arg0);
        object_to_luaval<InsistuteAddAttr>(tolua_S, "InsistuteAddAttr",(InsistuteAddAttr*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getInsistuteAddAttr",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getInsistuteAddAttr'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getMoraleLevel(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getMoraleLevel'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "TableManager:getMoraleLevel");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getMoraleLevel'", nullptr);
            return 0;
        }
        const int ret = cobj->getMoraleLevel(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getMoraleLevel",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getMoraleLevel'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_loadPlatformCsv(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_loadPlatformCsv'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_loadPlatformCsv'", nullptr);
            return 0;
        }
        cobj->loadPlatformCsv();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:loadPlatformCsv",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_loadPlatformCsv'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getPlayerInfo(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getPlayerInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getPlayerInfo'", nullptr);
            return 0;
        }
        PlayerInfo* ret = cobj->getPlayerInfo();
        object_to_luaval<PlayerInfo>(tolua_S, "PlayerInfo",(PlayerInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getPlayerInfo",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getPlayerInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_loadActInformTable(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_loadActInformTable'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_loadActInformTable'", nullptr);
            return 0;
        }
        cobj->loadActInformTable();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:loadActInformTable",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_loadActInformTable'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getCrazyWeekInfoById(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getCrazyWeekInfoById'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getCrazyWeekInfoById");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getCrazyWeekInfoById'", nullptr);
            return 0;
        }
        const CrazyWeekInfo* ret = cobj->getCrazyWeekInfoById(arg0);
        object_to_luaval<CrazyWeekInfo>(tolua_S, "CrazyWeekInfo",(CrazyWeekInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getCrazyWeekInfoById",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getCrazyWeekInfoById'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getPropInfoById(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getPropInfoById'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getPropInfoById");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getPropInfoById'", nullptr);
            return 0;
        }
        const PropInfo* ret = cobj->getPropInfoById(arg0);
        object_to_luaval<PropInfo>(tolua_S, "PropInfo",(PropInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getPropInfoById",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getPropInfoById'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_update(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "TableManager:update");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_update'", nullptr);
            return 0;
        }
        cobj->update(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:update",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_loadGuideTable(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_loadGuideTable'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_loadGuideTable'", nullptr);
            return 0;
        }
        cobj->loadGuideTable();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:loadGuideTable",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_loadGuideTable'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getFlagNameByCamp(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getFlagNameByCamp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eCampType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getFlagNameByCamp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getFlagNameByCamp'", nullptr);
            return 0;
        }
        std::string ret = cobj->getFlagNameByCamp(arg0);
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getFlagNameByCamp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getFlagNameByCamp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getTextHelperByID(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getTextHelperByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getTextHelperByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getTextHelperByID'", nullptr);
            return 0;
        }
        const TextHelper* ret = cobj->getTextHelperByID(arg0);
        object_to_luaval<TextHelper>(tolua_S, "TextHelper",(TextHelper*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getTextHelperByID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getTextHelperByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getGlyphStuffData(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getGlyphStuffData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getGlyphStuffData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getGlyphStuffData'", nullptr);
            return 0;
        }
        GlyphStuffData* ret = cobj->getGlyphStuffData(arg0);
        object_to_luaval<GlyphStuffData>(tolua_S, "GlyphStuffData",(GlyphStuffData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getGlyphStuffData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getGlyphStuffData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getMoraleDefenceDataByRange(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getMoraleDefenceDataByRange'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "TableManager:getMoraleDefenceDataByRange");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getMoraleDefenceDataByRange'", nullptr);
            return 0;
        }
        const MoraleDefenceData* ret = cobj->getMoraleDefenceDataByRange(arg0);
        object_to_luaval<MoraleDefenceData>(tolua_S, "MoraleDefenceData",(MoraleDefenceData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getMoraleDefenceDataByRange",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getMoraleDefenceDataByRange'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getWolrdAllStar(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getWolrdAllStar'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getWolrdAllStar");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getWolrdAllStar'", nullptr);
            return 0;
        }
        int ret = cobj->getWolrdAllStar(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getWolrdAllStar",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getWolrdAllStar'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getLevelExp(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getLevelExp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getLevelExp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getLevelExp'", nullptr);
            return 0;
        }
        int ret = cobj->getLevelExp(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getLevelExp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getLevelExp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getScoreInfo(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getScoreInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getScoreInfo");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getScoreInfo'", nullptr);
            return 0;
        }
        ScoreInfo* ret = cobj->getScoreInfo(arg0);
        object_to_luaval<ScoreInfo>(tolua_S, "ScoreInfo",(ScoreInfo*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getScoreInfo",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getScoreInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getStateActionByID(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getStateActionByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getStateActionByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getStateActionByID'", nullptr);
            return 0;
        }
        const StateAction* ret = cobj->getStateActionByID(arg0);
        object_to_luaval<StateAction>(tolua_S, "StateAction",(StateAction*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getStateActionByID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getStateActionByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getIntelligent(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getIntelligent'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getIntelligent");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getIntelligent'", nullptr);
            return 0;
        }
        const Intelligent* ret = cobj->getIntelligent(arg0);
        object_to_luaval<Intelligent>(tolua_S, "Intelligent",(Intelligent*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getIntelligent",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getIntelligent'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getVipData(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getVipData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getVipData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getVipData'", nullptr);
            return 0;
        }
        VipData* ret = cobj->getVipData(arg0);
        object_to_luaval<VipData>(tolua_S, "VipData",(VipData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getVipData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getVipData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_loadErrorCodeCsv(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_loadErrorCodeCsv'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_loadErrorCodeCsv'", nullptr);
            return 0;
        }
        cobj->loadErrorCodeCsv();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:loadErrorCodeCsv",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_loadErrorCodeCsv'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_getAchievementAwardByID(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TableManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TableManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TableManager_getAchievementAwardByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        AchieveCategory arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "TableManager:getAchievementAwardByID");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "TableManager:getAchievementAwardByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_getAchievementAwardByID'", nullptr);
            return 0;
        }
        const AchievementAward* ret = cobj->getAchievementAwardByID(arg0, arg1);
        object_to_luaval<AchievementAward>(tolua_S, "AchievementAward",(AchievementAward*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:getAchievementAwardByID",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_getAchievementAwardByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TableManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    TableManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TableManager_constructor'", nullptr);
            return 0;
        }
        cobj = new TableManager();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"TableManager");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TableManager:TableManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TableManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_TableManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (TableManager)");
    return 0;
}

int lua_register_mgame_TableManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"TableManager");
    tolua_cclass(tolua_S,"TableManager","TableManager","cc.Ref",nullptr);

    tolua_beginmodule(tolua_S,"TableManager");
        tolua_function(tolua_S,"new",lua_mgame_TableManager_constructor);
        tolua_function(tolua_S,"getCreepsPoint",lua_mgame_TableManager_getCreepsPoint);
        tolua_function(tolua_S,"getBadgeDataTable",lua_mgame_TableManager_getBadgeDataTable);
        tolua_function(tolua_S,"getAchievementAwardCount",lua_mgame_TableManager_getAchievementAwardCount);
        tolua_function(tolua_S,"getNextCheckPoints",lua_mgame_TableManager_getNextCheckPoints);
        tolua_function(tolua_S,"getPowerBuy",lua_mgame_TableManager_getPowerBuy);
        tolua_function(tolua_S,"initLoadTables",lua_mgame_TableManager_initLoadTables);
        tolua_function(tolua_S,"getShopInfoById",lua_mgame_TableManager_getShopInfoById);
        tolua_function(tolua_S,"getJungleDataByID",lua_mgame_TableManager_getJungleDataByID);
        tolua_function(tolua_S,"getItemBuyById",lua_mgame_TableManager_getItemBuyById);
        tolua_function(tolua_S,"getPlatformName",lua_mgame_TableManager_getPlatformName);
        tolua_function(tolua_S,"getNoticeData",lua_mgame_TableManager_getNoticeData);
        tolua_function(tolua_S,"getWinnerDataNum",lua_mgame_TableManager_getWinnerDataNum);
        tolua_function(tolua_S,"getGoodsInfo",lua_mgame_TableManager_getGoodsInfo);
        tolua_function(tolua_S,"getBible",lua_mgame_TableManager_getBible);
        tolua_function(tolua_S,"getNameArea",lua_mgame_TableManager_getNameArea);
        tolua_function(tolua_S,"getMusicInfoByID",lua_mgame_TableManager_getMusicInfoByID);
        tolua_function(tolua_S,"getDayTaskDataById",lua_mgame_TableManager_getDayTaskDataById);
        tolua_function(tolua_S,"getCreeps",lua_mgame_TableManager_getCreeps);
        tolua_function(tolua_S,"getPayLimit",lua_mgame_TableManager_getPayLimit);
        tolua_function(tolua_S,"loadNoticeTable",lua_mgame_TableManager_loadNoticeTable);
        tolua_function(tolua_S,"getActLogin",lua_mgame_TableManager_getActLogin);
        tolua_function(tolua_S,"loadShopTable",lua_mgame_TableManager_loadShopTable);
        tolua_function(tolua_S,"getPropType",lua_mgame_TableManager_getPropType);
        tolua_function(tolua_S,"getNewPlayGiftDataByType",lua_mgame_TableManager_getNewPlayGiftDataByType);
        tolua_function(tolua_S,"getPvpChat",lua_mgame_TableManager_getPvpChat);
        tolua_function(tolua_S,"unloadAllTables",lua_mgame_TableManager_unloadAllTables);
        tolua_function(tolua_S,"loadAllTables",lua_mgame_TableManager_loadAllTables);
        tolua_function(tolua_S,"getBuffDataByID",lua_mgame_TableManager_getBuffDataByID);
        tolua_function(tolua_S,"getMapCPoint",lua_mgame_TableManager_getMapCPoint);
        tolua_function(tolua_S,"getExchangeItemCount",lua_mgame_TableManager_getExchangeItemCount);
        tolua_function(tolua_S,"getExchangeItem",lua_mgame_TableManager_getExchangeItem);
        tolua_function(tolua_S,"getBuildIns",lua_mgame_TableManager_getBuildIns);
        tolua_function(tolua_S,"isAchieveMentAwardComplent",lua_mgame_TableManager_isAchieveMentAwardComplent);
        tolua_function(tolua_S,"getPropIdByType",lua_mgame_TableManager_getPropIdByType);
        tolua_function(tolua_S,"getBadgeData",lua_mgame_TableManager_getBadgeData);
        tolua_function(tolua_S,"getGuideDataByID",lua_mgame_TableManager_getGuideDataByID);
        tolua_function(tolua_S,"getGradeData",lua_mgame_TableManager_getGradeData);
        tolua_function(tolua_S,"getActInformDataByIdx",lua_mgame_TableManager_getActInformDataByIdx);
        tolua_function(tolua_S,"getGradeByGrade",lua_mgame_TableManager_getGradeByGrade);
        tolua_function(tolua_S,"getGiftAward",lua_mgame_TableManager_getGiftAward);
        tolua_function(tolua_S,"getAchievementById",lua_mgame_TableManager_getAchievementById);
        tolua_function(tolua_S,"getAnimationNameByExpress",lua_mgame_TableManager_getAnimationNameByExpress);
        tolua_function(tolua_S,"getWinnerData",lua_mgame_TableManager_getWinnerData);
        tolua_function(tolua_S,"getAnimationNameByCamp",lua_mgame_TableManager_getAnimationNameByCamp);
        tolua_function(tolua_S,"getRechargeData",lua_mgame_TableManager_getRechargeData);
        tolua_function(tolua_S,"getActInformData",lua_mgame_TableManager_getActInformData);
        tolua_function(tolua_S,"getLoadState",lua_mgame_TableManager_getLoadState);
        tolua_function(tolua_S,"getAchievePointAwardById",lua_mgame_TableManager_getAchievePointAwardById);
        tolua_function(tolua_S,"setLoadState",lua_mgame_TableManager_setLoadState);
        tolua_function(tolua_S,"getBuildAttr",lua_mgame_TableManager_getBuildAttr);
        tolua_function(tolua_S,"getSevenDayMissionByDay",lua_mgame_TableManager_getSevenDayMissionByDay);
        tolua_function(tolua_S,"getErrorCodeByID",lua_mgame_TableManager_getErrorCodeByID);
        tolua_function(tolua_S,"getInsistuteAddAttr",lua_mgame_TableManager_getInsistuteAddAttr);
        tolua_function(tolua_S,"getMoraleLevel",lua_mgame_TableManager_getMoraleLevel);
        tolua_function(tolua_S,"loadPlatformCsv",lua_mgame_TableManager_loadPlatformCsv);
        tolua_function(tolua_S,"getPlayerInfo",lua_mgame_TableManager_getPlayerInfo);
        tolua_function(tolua_S,"loadActInformTable",lua_mgame_TableManager_loadActInformTable);
        tolua_function(tolua_S,"getCrazyWeekInfoById",lua_mgame_TableManager_getCrazyWeekInfoById);
        tolua_function(tolua_S,"getPropInfoById",lua_mgame_TableManager_getPropInfoById);
        tolua_function(tolua_S,"update",lua_mgame_TableManager_update);
        tolua_function(tolua_S,"loadGuideTable",lua_mgame_TableManager_loadGuideTable);
        tolua_function(tolua_S,"getFlagNameByCamp",lua_mgame_TableManager_getFlagNameByCamp);
        tolua_function(tolua_S,"getTextHelperByID",lua_mgame_TableManager_getTextHelperByID);
        tolua_function(tolua_S,"getGlyphStuffData",lua_mgame_TableManager_getGlyphStuffData);
        tolua_function(tolua_S,"getMoraleDefenceDataByRange",lua_mgame_TableManager_getMoraleDefenceDataByRange);
        tolua_function(tolua_S,"getWolrdAllStar",lua_mgame_TableManager_getWolrdAllStar);
        tolua_function(tolua_S,"getLevelExp",lua_mgame_TableManager_getLevelExp);
        tolua_function(tolua_S,"getScoreInfo",lua_mgame_TableManager_getScoreInfo);
        tolua_function(tolua_S,"getStateActionByID",lua_mgame_TableManager_getStateActionByID);
        tolua_function(tolua_S,"getIntelligent",lua_mgame_TableManager_getIntelligent);
        tolua_function(tolua_S,"getVipData",lua_mgame_TableManager_getVipData);
        tolua_function(tolua_S,"loadErrorCodeCsv",lua_mgame_TableManager_loadErrorCodeCsv);
        tolua_function(tolua_S,"getAchievementAwardByID",lua_mgame_TableManager_getAchievementAwardByID);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(TableManager).name();
    g_luaType[typeName] = "TableManager";
    g_typeCast["TableManager"] = "TableManager";
    return 1;
}

int lua_mgame_Window_staticWindow(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_staticWindow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_staticWindow'", nullptr);
            return 0;
        }
        cobj->staticWindow();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:staticWindow",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_staticWindow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_setShow(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_setShow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "Window:setShow");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_setShow'", nullptr);
            return 0;
        }
        cobj->setShow(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:setShow",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_setShow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_onShow(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_onShow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_onShow'", nullptr);
            return 0;
        }
        cobj->onShow();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:onShow",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_onShow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_getPriority(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_getPriority'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_getPriority'", nullptr);
            return 0;
        }
        int ret = (int)cobj->getPriority();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:getPriority",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_getPriority'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_afterClose(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_afterClose'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_afterClose'", nullptr);
            return 0;
        }
        cobj->afterClose();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:afterClose",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_afterClose'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_onClose(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_onClose'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_onClose'", nullptr);
            return 0;
        }
        cobj->onClose();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:onClose",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_onClose'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_isWindowLayoutEnable(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_isWindowLayoutEnable'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_isWindowLayoutEnable'", nullptr);
            return 0;
        }
        bool ret = cobj->isWindowLayoutEnable();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:isWindowLayoutEnable",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_isWindowLayoutEnable'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_isShow(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_isShow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_isShow'", nullptr);
            return 0;
        }
        bool ret = cobj->isShow();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:isShow",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_isShow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_setWindowLayoutEnable(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_setWindowLayoutEnable'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "Window:setWindowLayoutEnable");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_setWindowLayoutEnable'", nullptr);
            return 0;
        }
        cobj->setWindowLayoutEnable(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:setWindowLayoutEnable",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_setWindowLayoutEnable'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_getBgPanel(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_getBgPanel'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_getBgPanel'", nullptr);
            return 0;
        }
        cocos2d::ui::Layout* ret = cobj->getBgPanel();
        object_to_luaval<cocos2d::ui::Layout>(tolua_S, "ccui.Layout",(cocos2d::ui::Layout*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:getBgPanel",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_getBgPanel'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_getLuaType(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_getLuaType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_getLuaType'", nullptr);
            return 0;
        }
        int ret = cobj->getLuaType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:getLuaType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_getLuaType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_setLuaType(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_setLuaType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "Window:setLuaType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_setLuaType'", nullptr);
            return 0;
        }
        cobj->setLuaType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:setLuaType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_setLuaType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_getShowFromLayer(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_getShowFromLayer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_getShowFromLayer'", nullptr);
            return 0;
        }
        cocos2d::ui::Widget* ret = cobj->getShowFromLayer();
        object_to_luaval<cocos2d::ui::Widget>(tolua_S, "ccui.Widget",(cocos2d::ui::Widget*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:getShowFromLayer",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_getShowFromLayer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_setBgOpacity(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_setBgOpacity'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "Window:setBgOpacity");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_setBgOpacity'", nullptr);
            return 0;
        }
        cobj->setBgOpacity(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:setBgOpacity",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_setBgOpacity'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_normalClose(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_normalClose'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_normalClose'", nullptr);
            return 0;
        }
        cobj->normalClose();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:normalClose",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_normalClose'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_addChildCenter(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_addChildCenter'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Node* arg0;

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 2, "cc.Node",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_addChildCenter'", nullptr);
            return 0;
        }
        cobj->addChildCenter(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:addChildCenter",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_addChildCenter'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_setPageType(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_setPageType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        ePageType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "Window:setPageType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_setPageType'", nullptr);
            return 0;
        }
        cobj->setPageType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:setPageType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_setPageType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_setPageName(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_setPageName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "Window:setPageName");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_setPageName'", nullptr);
            return 0;
        }
        cobj->setPageName(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:setPageName",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_setPageName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_getPageName(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (Window*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_Window_getPageName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_getPageName'", nullptr);
            return 0;
        }
        std::string ret = cobj->getPageName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "Window:getPageName",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_getPageName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_Window_getShowingWindowSize(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_getShowingWindowSize'", nullptr);
            return 0;
        }
        int ret = Window::getShowingWindowSize();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "Window:getShowingWindowSize",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_getShowingWindowSize'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_Window_createWithName(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 3)
    {
        std::string arg0;
        ePageType arg1;
        int arg2;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "Window:createWithName");
        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "Window:createWithName");
        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "Window:createWithName");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_createWithName'", nullptr);
            return 0;
        }
        Window* ret = Window::createWithName(arg0, arg1, arg2);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "Window:createWithName",argc, 3);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_createWithName'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_Window_getWindowSize(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_getWindowSize'", nullptr);
            return 0;
        }
        int ret = Window::getWindowSize();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "Window:getWindowSize",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_getWindowSize'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_Window_setAllWindowHide(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_setAllWindowHide'", nullptr);
            return 0;
        }
        Window::setAllWindowHide();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "Window:setAllWindowHide",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_setAllWindowHide'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_Window_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_create'", nullptr);
            return 0;
        }
        Window* ret = Window::create();
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "Window:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_Window_showTextTip(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        std::string arg0;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "Window:showTextTip");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_showTextTip'", nullptr);
            return 0;
        }
        Window::showTextTip(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 2)
    {
        std::string arg0;
        cocos2d::Point arg1;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "Window:showTextTip");
        ok &= luaval_to_point(tolua_S, 3, &arg1, "Window:showTextTip");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_showTextTip'", nullptr);
            return 0;
        }
        Window::showTextTip(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 3)
    {
        std::string arg0;
        cocos2d::Point arg1;
        cocos2d::Size arg2;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "Window:showTextTip");
        ok &= luaval_to_point(tolua_S, 3, &arg1, "Window:showTextTip");
        ok &= luaval_to_size(tolua_S, 4, &arg2, "Window:showTextTip");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_showTextTip'", nullptr);
            return 0;
        }
        Window::showTextTip(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "Window:showTextTip",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_showTextTip'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_Window_getWindow(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        std::string arg0;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "Window:getWindow");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_getWindow'", nullptr);
            return 0;
        }
        Window* ret = Window::getWindow(arg0);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "Window:getWindow",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_getWindow'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_Window_Create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"Window",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        std::string arg0;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "Window:Create");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_Create'", nullptr);
            return 0;
        }
        Window* ret = Window::Create(arg0);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    if (argc == 2)
    {
        std::string arg0;
        ePageType arg1;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "Window:Create");
        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "Window:Create");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_Create'", nullptr);
            return 0;
        }
        Window* ret = Window::Create(arg0, arg1);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    if (argc == 3)
    {
        std::string arg0;
        ePageType arg1;
        int arg2;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "Window:Create");
        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "Window:Create");
        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "Window:Create");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_Window_Create'", nullptr);
            return 0;
        }
        Window* ret = Window::Create(arg0, arg1, arg2);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "Window:Create",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_Create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_Window_constructor(lua_State* tolua_S)
{
    int argc = 0;
    Window* cobj = nullptr;
    bool ok  = true;
#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

    argc = lua_gettop(tolua_S)-1;
    do{
        if (argc == 1) {
            ePriority arg0;
            ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "Window:Window");

            if (!ok) { break; }
            cobj = new Window(arg0);
            cobj->autorelease();
            int ID =  (int)cobj->_ID ;
            int* luaID =  &cobj->_luaID ;
            toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"Window");
            return 1;
        }
    }while(0);
    ok  = true;
    do{
        if (argc == 0) {
            cobj = new Window();
            cobj->autorelease();
            int ID =  (int)cobj->_ID ;
            int* luaID =  &cobj->_luaID ;
            toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"Window");
            return 1;
        }
    }while(0);
    ok  = true;
    do{
        if (argc == 1) {
            cocos2d::ui::Widget* arg0;
            ok &= luaval_to_object<cocos2d::ui::Widget>(tolua_S, 2, "ccui.Widget",&arg0);

            if (!ok) { break; }
            cobj = new Window(arg0);
            cobj->autorelease();
            int ID =  (int)cobj->_ID ;
            int* luaID =  &cobj->_luaID ;
            toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"Window");
            return 1;
        }
    }while(0);
    ok  = true;
    do{
        if (argc == 2) {
            ePriority arg0;
            ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "Window:Window");

            if (!ok) { break; }
            cocos2d::ui::Widget* arg1;
            ok &= luaval_to_object<cocos2d::ui::Widget>(tolua_S, 3, "ccui.Widget",&arg1);

            if (!ok) { break; }
            cobj = new Window(arg0, arg1);
            cobj->autorelease();
            int ID =  (int)cobj->_ID ;
            int* luaID =  &cobj->_luaID ;
            toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"Window");
            return 1;
        }
    }while(0);
    ok  = true;
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n",  "Window:Window",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_Window_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_Window_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (Window)");
    return 0;
}

int lua_register_mgame_Window(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"Window");
    tolua_cclass(tolua_S,"Window","Window","PageBase",nullptr);

    tolua_beginmodule(tolua_S,"Window");
        tolua_function(tolua_S,"new",lua_mgame_Window_constructor);
        tolua_function(tolua_S,"staticWindow",lua_mgame_Window_staticWindow);
        tolua_function(tolua_S,"setShow",lua_mgame_Window_setShow);
        tolua_function(tolua_S,"onShow",lua_mgame_Window_onShow);
        tolua_function(tolua_S,"getPriority",lua_mgame_Window_getPriority);
        tolua_function(tolua_S,"afterClose",lua_mgame_Window_afterClose);
        tolua_function(tolua_S,"onClose",lua_mgame_Window_onClose);
        tolua_function(tolua_S,"isWindowLayoutEnable",lua_mgame_Window_isWindowLayoutEnable);
        tolua_function(tolua_S,"isShow",lua_mgame_Window_isShow);
        tolua_function(tolua_S,"setWindowLayoutEnable",lua_mgame_Window_setWindowLayoutEnable);
        tolua_function(tolua_S,"getBgPanel",lua_mgame_Window_getBgPanel);
        tolua_function(tolua_S,"getLuaType",lua_mgame_Window_getLuaType);
        tolua_function(tolua_S,"setLuaType",lua_mgame_Window_setLuaType);
        tolua_function(tolua_S,"getShowFromLayer",lua_mgame_Window_getShowFromLayer);
        tolua_function(tolua_S,"setBgOpacity",lua_mgame_Window_setBgOpacity);
        tolua_function(tolua_S,"normalClose",lua_mgame_Window_normalClose);
        tolua_function(tolua_S,"addChildCenter",lua_mgame_Window_addChildCenter);
        tolua_function(tolua_S,"setPageType",lua_mgame_Window_setPageType);
        tolua_function(tolua_S,"setPageName",lua_mgame_Window_setPageName);
        tolua_function(tolua_S,"getPageName",lua_mgame_Window_getPageName);
        tolua_function(tolua_S,"getShowingWindowSize", lua_mgame_Window_getShowingWindowSize);
        tolua_function(tolua_S,"createWithName", lua_mgame_Window_createWithName);
        tolua_function(tolua_S,"getWindowSize", lua_mgame_Window_getWindowSize);
        tolua_function(tolua_S,"setAllWindowHide", lua_mgame_Window_setAllWindowHide);
        tolua_function(tolua_S,"create", lua_mgame_Window_create);
        tolua_function(tolua_S,"showTextTip", lua_mgame_Window_showTextTip);
        tolua_function(tolua_S,"getWindow", lua_mgame_Window_getWindow);
        tolua_function(tolua_S,"Create", lua_mgame_Window_Create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(Window).name();
    g_luaType[typeName] = "Window";
    g_typeCast["Window"] = "Window";
    return 1;
}

int lua_mgame_ActionWindow_setIsPlayBorn(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_setIsPlayBorn'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "ActionWindow:setIsPlayBorn");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_setIsPlayBorn'", nullptr);
            return 0;
        }
        cobj->setIsPlayBorn(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:setIsPlayBorn",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_setIsPlayBorn'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_setIsPlayEndOnClose(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_setIsPlayEndOnClose'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "ActionWindow:setIsPlayEndOnClose");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_setIsPlayEndOnClose'", nullptr);
            return 0;
        }
        cobj->setIsPlayEndOnClose(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:setIsPlayEndOnClose",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_setIsPlayEndOnClose'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow__initWindow(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow__initWindow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        ePriority arg0;
        cocos2d::ui::Widget* arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ActionWindow:_initWindow");

        ok &= luaval_to_object<cocos2d::ui::Widget>(tolua_S, 3, "ccui.Widget",&arg1);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow__initWindow'", nullptr);
            return 0;
        }
        bool ret = cobj->_initWindow(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:_initWindow",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow__initWindow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_getArmatureBg(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_getArmatureBg'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_getArmatureBg'", nullptr);
            return 0;
        }
        cocostudio::Armature* ret = cobj->getArmatureBg();
        object_to_luaval<cocostudio::Armature>(tolua_S, "ccs.Armature",(cocostudio::Armature*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:getArmatureBg",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_getArmatureBg'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_getBonePosition(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_getBonePosition'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ActionWindow:getBonePosition");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_getBonePosition'", nullptr);
            return 0;
        }
        cocos2d::Point ret = cobj->getBonePosition(arg0);
        point_to_luaval(tolua_S, ret);
        return 1;
    }
    if (argc == 2) 
    {
        std::string arg0;
        cocos2d::Point arg1;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ActionWindow:getBonePosition");

        ok &= luaval_to_point(tolua_S, 3, &arg1, "ActionWindow:getBonePosition");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_getBonePosition'", nullptr);
            return 0;
        }
        cocos2d::Point ret = cobj->getBonePosition(arg0, arg1);
        point_to_luaval(tolua_S, ret);
        return 1;
    }
    if (argc == 3) 
    {
        std::string arg0;
        cocos2d::Point arg1;
        cocostudio::Armature* arg2;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ActionWindow:getBonePosition");

        ok &= luaval_to_point(tolua_S, 3, &arg1, "ActionWindow:getBonePosition");

        ok &= luaval_to_object<cocostudio::Armature>(tolua_S, 4, "ccs.Armature",&arg2);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_getBonePosition'", nullptr);
            return 0;
        }
        cocos2d::Point ret = cobj->getBonePosition(arg0, arg1, arg2);
        point_to_luaval(tolua_S, ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:getBonePosition",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_getBonePosition'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_changeBoneByDefaultArmature(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_changeBoneByDefaultArmature'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        std::string arg0;
        cocos2d::Node* arg1;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ActionWindow:changeBoneByDefaultArmature");

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 3, "cc.Node",&arg1);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_changeBoneByDefaultArmature'", nullptr);
            return 0;
        }
        cobj->changeBoneByDefaultArmature(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 3) 
    {
        std::string arg0;
        cocos2d::Node* arg1;
        int arg2;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ActionWindow:changeBoneByDefaultArmature");

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 3, "cc.Node",&arg1);

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "ActionWindow:changeBoneByDefaultArmature");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_changeBoneByDefaultArmature'", nullptr);
            return 0;
        }
        cobj->changeBoneByDefaultArmature(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:changeBoneByDefaultArmature",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_changeBoneByDefaultArmature'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_setAnimation(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_setAnimation'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ActionWindow:setAnimation");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_setAnimation'", nullptr);
            return 0;
        }
        bool ret = cobj->setAnimation(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:setAnimation",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_setAnimation'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_changeBone(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_changeBone'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 3) 
    {
        cocostudio::Armature* arg0;
        std::string arg1;
        cocos2d::Node* arg2;

        ok &= luaval_to_object<cocostudio::Armature>(tolua_S, 2, "ccs.Armature",&arg0);

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "ActionWindow:changeBone");

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 4, "cc.Node",&arg2);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_changeBone'", nullptr);
            return 0;
        }
        cobj->changeBone(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 4) 
    {
        cocostudio::Armature* arg0;
        std::string arg1;
        cocos2d::Node* arg2;
        int arg3;

        ok &= luaval_to_object<cocostudio::Armature>(tolua_S, 2, "ccs.Armature",&arg0);

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "ActionWindow:changeBone");

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 4, "cc.Node",&arg2);

        ok &= luaval_to_int32(tolua_S, 5,(int *)&arg3, "ActionWindow:changeBone");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_changeBone'", nullptr);
            return 0;
        }
        cobj->changeBone(arg0, arg1, arg2, arg3);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:changeBone",argc, 3);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_changeBone'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_playAnimationByName(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_playAnimationByName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ActionWindow:playAnimationByName");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_playAnimationByName'", nullptr);
            return 0;
        }
        cobj->playAnimationByName(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:playAnimationByName",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_playAnimationByName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_setStandName(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_setStandName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ActionWindow:setStandName");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_setStandName'", nullptr);
            return 0;
        }
        cobj->setStandName(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:setStandName",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_setStandName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_setPopType(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ActionWindow*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ActionWindow_setPopType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        ActionWindowPopType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ActionWindow:setPopType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_setPopType'", nullptr);
            return 0;
        }
        cobj->setPopType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:setPopType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_setPopType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ActionWindow_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"ActionWindow",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_create'", nullptr);
            return 0;
        }
        ActionWindow* ret = ActionWindow::create();
        object_to_luaval<ActionWindow>(tolua_S, "ActionWindow",(ActionWindow*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "ActionWindow:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_ActionWindow_constructor(lua_State* tolua_S)
{
    int argc = 0;
    ActionWindow* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ActionWindow_constructor'", nullptr);
            return 0;
        }
        cobj = new ActionWindow();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"ActionWindow");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ActionWindow:ActionWindow",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ActionWindow_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_ActionWindow_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (ActionWindow)");
    return 0;
}

int lua_register_mgame_ActionWindow(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"ActionWindow");
    tolua_cclass(tolua_S,"ActionWindow","ActionWindow","Window",nullptr);

    tolua_beginmodule(tolua_S,"ActionWindow");
        tolua_function(tolua_S,"new",lua_mgame_ActionWindow_constructor);
        tolua_function(tolua_S,"setIsPlayBorn",lua_mgame_ActionWindow_setIsPlayBorn);
        tolua_function(tolua_S,"setIsPlayEndOnClose",lua_mgame_ActionWindow_setIsPlayEndOnClose);
        tolua_function(tolua_S,"_initWindow",lua_mgame_ActionWindow__initWindow);
        tolua_function(tolua_S,"getArmatureBg",lua_mgame_ActionWindow_getArmatureBg);
        tolua_function(tolua_S,"getBonePosition",lua_mgame_ActionWindow_getBonePosition);
        tolua_function(tolua_S,"changeBoneByDefaultArmature",lua_mgame_ActionWindow_changeBoneByDefaultArmature);
        tolua_function(tolua_S,"setAnimation",lua_mgame_ActionWindow_setAnimation);
        tolua_function(tolua_S,"changeBone",lua_mgame_ActionWindow_changeBone);
        tolua_function(tolua_S,"playAnimationByName",lua_mgame_ActionWindow_playAnimationByName);
        tolua_function(tolua_S,"setStandName",lua_mgame_ActionWindow_setStandName);
        tolua_function(tolua_S,"setPopType",lua_mgame_ActionWindow_setPopType);
        tolua_function(tolua_S,"create", lua_mgame_ActionWindow_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(ActionWindow).name();
    g_luaType[typeName] = "ActionWindow";
    g_typeCast["ActionWindow"] = "ActionWindow";
    return 1;
}

int lua_mgame_TimeCalculator_updateCountDown(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_updateCountDown'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "TimeCalculator:updateCountDown");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_updateCountDown'", nullptr);
            return 0;
        }
        cobj->updateCountDown(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:updateCountDown",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_updateCountDown'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_removeTimeCalcultor(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_removeTimeCalcultor'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "TimeCalculator:removeTimeCalcultor");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_removeTimeCalcultor'", nullptr);
            return 0;
        }
        cobj->removeTimeCalcultor(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:removeTimeCalcultor",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_removeTimeCalcultor'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_getTimeLength(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_getTimeLength'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "TimeCalculator:getTimeLength");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_getTimeLength'", nullptr);
            return 0;
        }
        double ret = cobj->getTimeLength(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:getTimeLength",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_getTimeLength'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_initServerTime(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_initServerTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "TimeCalculator:initServerTime");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_initServerTime'", nullptr);
            return 0;
        }
        cobj->initServerTime(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:initServerTime",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_initServerTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_getCurTime(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_getCurTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_getCurTime'", nullptr);
            return 0;
        }
        double ret = cobj->getCurTime();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:getCurTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_getCurTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_resume(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_resume'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_resume'", nullptr);
            return 0;
        }
        cobj->resume();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:resume",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_resume'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_addTimeByKey(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_addTimeByKey'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        std::string arg0;
        double arg1;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "TimeCalculator:addTimeByKey");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "TimeCalculator:addTimeByKey");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_addTimeByKey'", nullptr);
            return 0;
        }
        cobj->addTimeByKey(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:addTimeByKey",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_addTimeByKey'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_cleanData(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_cleanData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_cleanData'", nullptr);
            return 0;
        }
        cobj->cleanData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:cleanData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_cleanData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_createTimeCalcultor(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_createTimeCalcultor'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        std::string arg0;
        double arg1;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "TimeCalculator:createTimeCalcultor");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "TimeCalculator:createTimeCalcultor");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_createTimeCalcultor'", nullptr);
            return 0;
        }
        cobj->createTimeCalcultor(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:createTimeCalcultor",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_createTimeCalcultor'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_update(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_update'", nullptr);
            return 0;
        }
        cobj->update();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:update",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_init(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_init'", nullptr);
            return 0;
        }
        cobj->init();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_pause(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_pause'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_pause'", nullptr);
            return 0;
        }
        cobj->pause();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:pause",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_pause'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_getSystemTime(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_getSystemTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_getSystemTime'", nullptr);
            return 0;
        }
        double ret = cobj->getSystemTime();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:getSystemTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_getSystemTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_getServerTime(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_getServerTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_getServerTime'", nullptr);
            return 0;
        }
        double ret = cobj->getServerTime();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:getServerTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_getServerTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_resetTimeCalcultor(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_resetTimeCalcultor'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "TimeCalculator:resetTimeCalcultor");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_resetTimeCalcultor'", nullptr);
            return 0;
        }
        cobj->resetTimeCalcultor(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:resetTimeCalcultor",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_resetTimeCalcultor'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_getCountDownByKey(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_getCountDownByKey'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "TimeCalculator:getCountDownByKey");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_getCountDownByKey'", nullptr);
            return 0;
        }
        double ret = cobj->getCountDownByKey(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:getCountDownByKey",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_getCountDownByKey'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_hasKey(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_hasKey'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "TimeCalculator:hasKey");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_hasKey'", nullptr);
            return 0;
        }
        bool ret = cobj->hasKey(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:hasKey",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_hasKey'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_beganMainCountDown(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"TimeCalculator",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (TimeCalculator*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_TimeCalculator_beganMainCountDown'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_beganMainCountDown'", nullptr);
            return 0;
        }
        cobj->beganMainCountDown();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:beganMainCountDown",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_beganMainCountDown'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_TimeCalculator_constructor(lua_State* tolua_S)
{
    int argc = 0;
    TimeCalculator* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TimeCalculator_constructor'", nullptr);
            return 0;
        }
        cobj = new TimeCalculator();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"TimeCalculator");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TimeCalculator:TimeCalculator",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TimeCalculator_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_TimeCalculator_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (TimeCalculator)");
    return 0;
}

int lua_register_mgame_TimeCalculator(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"TimeCalculator");
    tolua_cclass(tolua_S,"TimeCalculator","TimeCalculator","cc.Ref",nullptr);

    tolua_beginmodule(tolua_S,"TimeCalculator");
        tolua_function(tolua_S,"new",lua_mgame_TimeCalculator_constructor);
        tolua_function(tolua_S,"updateCountDown",lua_mgame_TimeCalculator_updateCountDown);
        tolua_function(tolua_S,"removeTimeCalcultor",lua_mgame_TimeCalculator_removeTimeCalcultor);
        tolua_function(tolua_S,"getTimeLength",lua_mgame_TimeCalculator_getTimeLength);
        tolua_function(tolua_S,"initServerTime",lua_mgame_TimeCalculator_initServerTime);
        tolua_function(tolua_S,"getCurTime",lua_mgame_TimeCalculator_getCurTime);
        tolua_function(tolua_S,"resume",lua_mgame_TimeCalculator_resume);
        tolua_function(tolua_S,"addTimeByKey",lua_mgame_TimeCalculator_addTimeByKey);
        tolua_function(tolua_S,"cleanData",lua_mgame_TimeCalculator_cleanData);
        tolua_function(tolua_S,"createTimeCalcultor",lua_mgame_TimeCalculator_createTimeCalcultor);
        tolua_function(tolua_S,"update",lua_mgame_TimeCalculator_update);
        tolua_function(tolua_S,"init",lua_mgame_TimeCalculator_init);
        tolua_function(tolua_S,"pause",lua_mgame_TimeCalculator_pause);
        tolua_function(tolua_S,"getSystemTime",lua_mgame_TimeCalculator_getSystemTime);
        tolua_function(tolua_S,"getServerTime",lua_mgame_TimeCalculator_getServerTime);
        tolua_function(tolua_S,"resetTimeCalcultor",lua_mgame_TimeCalculator_resetTimeCalcultor);
        tolua_function(tolua_S,"getCountDownByKey",lua_mgame_TimeCalculator_getCountDownByKey);
        tolua_function(tolua_S,"hasKey",lua_mgame_TimeCalculator_hasKey);
        tolua_function(tolua_S,"beganMainCountDown",lua_mgame_TimeCalculator_beganMainCountDown);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(TimeCalculator).name();
    g_luaType[typeName] = "TimeCalculator";
    g_typeCast["TimeCalculator"] = "TimeCalculator";
    return 1;
}

int lua_mgame_MessageManager_removeMessageHandler(lua_State* tolua_S)
{
    int argc = 0;
    MessageManager* cobj = nullptr;
    bool ok  = true;
#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageManager",0,&tolua_err)) goto tolua_lerror;
#endif
    cobj = (MessageManager*)tolua_tousertype(tolua_S,1,0);
#if COCOS2D_DEBUG >= 1
    if (!cobj)
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageManager_removeMessageHandler'", nullptr);
        return 0;
    }
#endif
    argc = lua_gettop(tolua_S)-1;
    do{
        if (argc == 1) {
            MessageHandler* arg0;
            ok &= luaval_to_object<MessageHandler>(tolua_S, 2, "MessageHandler",&arg0);

            if (!ok) { break; }
            cobj->removeMessageHandler(arg0);
            lua_settop(tolua_S, 1);
            return 1;
        }
    }while(0);
    ok  = true;
    do{
        if (argc == 2) {
            unsigned int arg0;
            ok &= luaval_to_uint32(tolua_S, 2,&arg0, "MessageManager:removeMessageHandler");

            if (!ok) { break; }
            MessageHandler* arg1;
            ok &= luaval_to_object<MessageHandler>(tolua_S, 3, "MessageHandler",&arg1);

            if (!ok) { break; }
            cobj->removeMessageHandler(arg0, arg1);
            lua_settop(tolua_S, 1);
            return 1;
        }
    }while(0);
    ok  = true;
    do{
        if (argc == 1) {
            unsigned int arg0;
            ok &= luaval_to_uint32(tolua_S, 2,&arg0, "MessageManager:removeMessageHandler");

            if (!ok) { break; }
            cobj->removeMessageHandler(arg0);
            lua_settop(tolua_S, 1);
            return 1;
        }
    }while(0);
    ok  = true;
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n",  "MessageManager:removeMessageHandler",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageManager_removeMessageHandler'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageManager_createMessage(lua_State* tolua_S)
{
    int argc = 0;
    MessageManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageManager_createMessage'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        std::string arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "MessageManager:createMessage");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "MessageManager:createMessage");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageManager_createMessage'", nullptr);
            return 0;
        }
        const GameMessage* ret = cobj->createMessage(arg0, arg1);
        object_to_luaval<GameMessage>(tolua_S, "GameMessage",(GameMessage*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageManager:createMessage",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageManager_createMessage'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageManager_regisiterMessageHandler(lua_State* tolua_S)
{
    int argc = 0;
    MessageManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageManager_regisiterMessageHandler'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        unsigned int arg0;
        MessageHandler* arg1;

        ok &= luaval_to_uint32(tolua_S, 2,&arg0, "MessageManager:regisiterMessageHandler");

        ok &= luaval_to_object<MessageHandler>(tolua_S, 3, "MessageHandler",&arg1);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageManager_regisiterMessageHandler'", nullptr);
            return 0;
        }
        cobj->regisiterMessageHandler(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageManager:regisiterMessageHandler",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageManager_regisiterMessageHandler'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageManager_update(lua_State* tolua_S)
{
    int argc = 0;
    MessageManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageManager_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageManager_update'", nullptr);
            return 0;
        }
        cobj->update();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageManager:update",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageManager_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageManager_sendMessage(lua_State* tolua_S)
{
    int argc = 0;
    MessageManager* cobj = nullptr;
    bool ok  = true;
#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageManager",0,&tolua_err)) goto tolua_lerror;
#endif
    cobj = (MessageManager*)tolua_tousertype(tolua_S,1,0);
#if COCOS2D_DEBUG >= 1
    if (!cobj)
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageManager_sendMessage'", nullptr);
        return 0;
    }
#endif
    argc = lua_gettop(tolua_S)-1;
    do{
        if (argc == 2) {
            eMessageType arg0;
            ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "MessageManager:sendMessage");

            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "MessageManager:sendMessage");

            if (!ok) { break; }
            cobj->sendMessage(arg0, arg1);
            lua_settop(tolua_S, 1);
            return 1;
        }
    }while(0);
    ok  = true;
    do{
        if (argc == 1) {
            const GameMessage* arg0;
            ok &= luaval_to_object<const GameMessage>(tolua_S, 2, "GameMessage",&arg0);

            if (!ok) { break; }
            cobj->sendMessage(arg0);
            lua_settop(tolua_S, 1);
            return 1;
        }
    }while(0);
    ok  = true;
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n",  "MessageManager:sendMessage",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageManager_sendMessage'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageManager_loadFactorys(lua_State* tolua_S)
{
    int argc = 0;
    MessageManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageManager_loadFactorys'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageManager_loadFactorys'", nullptr);
            return 0;
        }
        cobj->loadFactorys();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageManager:loadFactorys",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageManager_loadFactorys'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageManager_registerFactory(lua_State* tolua_S)
{
    int argc = 0;
    MessageManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MessageManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MessageManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MessageManager_registerFactory'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        GameMessageFactory* arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "MessageManager:registerFactory");

        ok &= luaval_to_object<GameMessageFactory>(tolua_S, 3, "GameMessageFactory",&arg1);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageManager_registerFactory'", nullptr);
            return 0;
        }
        bool ret = cobj->registerFactory(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageManager:registerFactory",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageManager_registerFactory'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MessageManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    MessageManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MessageManager_constructor'", nullptr);
            return 0;
        }
        cobj = new MessageManager();
        tolua_pushusertype(tolua_S,(void*)cobj,"MessageManager");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MessageManager:MessageManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MessageManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_MessageManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (MessageManager)");
    return 0;
}

int lua_register_mgame_MessageManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"MessageManager");
    tolua_cclass(tolua_S,"MessageManager","MessageManager","",nullptr);

    tolua_beginmodule(tolua_S,"MessageManager");
        tolua_function(tolua_S,"new",lua_mgame_MessageManager_constructor);
        tolua_function(tolua_S,"removeMessageHandler",lua_mgame_MessageManager_removeMessageHandler);
        tolua_function(tolua_S,"createMessage",lua_mgame_MessageManager_createMessage);
        tolua_function(tolua_S,"regisiterMessageHandler",lua_mgame_MessageManager_regisiterMessageHandler);
        tolua_function(tolua_S,"update",lua_mgame_MessageManager_update);
        tolua_function(tolua_S,"sendMessage",lua_mgame_MessageManager_sendMessage);
        tolua_function(tolua_S,"loadFactorys",lua_mgame_MessageManager_loadFactorys);
        tolua_function(tolua_S,"registerFactory",lua_mgame_MessageManager_registerFactory);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(MessageManager).name();
    g_luaType[typeName] = "MessageManager";
    g_typeCast["MessageManager"] = "MessageManager";
    return 1;
}

int lua_mgame_GenerlDialog_init(lua_State* tolua_S)
{
    int argc = 0;
    GenerlDialog* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GenerlDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GenerlDialog*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GenerlDialog_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_init'", nullptr);
            return 0;
        }
        bool ret = cobj->init();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GenerlDialog:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GenerlDialog_hide(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GenerlDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_hide'", nullptr);
            return 0;
        }
        GenerlDialog::hide();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GenerlDialog:hide",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_hide'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GenerlDialog_show(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;
#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GenerlDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S)-1;

    do 
    {
        if (argc == 3)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:show");
            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:show");
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg2;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            GenerlDialog::show(arg0, arg1, arg2);
            lua_settop(tolua_S, 1);
            return 1;
        }
    } while (0);
    ok  = true;
    do 
    {
        if (argc == 4)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:show");
            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:show");
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg2;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            bool arg3;
            ok &= luaval_to_boolean(tolua_S, 5,&arg3, "GenerlDialog:show");
            if (!ok) { break; }
            GenerlDialog::show(arg0, arg1, arg2, arg3);
            lua_settop(tolua_S, 1);
            return 1;
        }
    } while (0);
    ok  = true;
    do 
    {
        if (argc == 5)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:show");
            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:show");
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg2;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            bool arg3;
            ok &= luaval_to_boolean(tolua_S, 5,&arg3, "GenerlDialog:show");
            if (!ok) { break; }
            bool arg4;
            ok &= luaval_to_boolean(tolua_S, 6,&arg4, "GenerlDialog:show");
            if (!ok) { break; }
            GenerlDialog::show(arg0, arg1, arg2, arg3, arg4);
            lua_settop(tolua_S, 1);
            return 1;
        }
    } while (0);
    ok  = true;
    do 
    {
        if (argc == 6)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:show");
            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:show");
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg2;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            bool arg3;
            ok &= luaval_to_boolean(tolua_S, 5,&arg3, "GenerlDialog:show");
            if (!ok) { break; }
            bool arg4;
            ok &= luaval_to_boolean(tolua_S, 6,&arg4, "GenerlDialog:show");
            if (!ok) { break; }
            eGeneralDialogType arg5;
            ok &= luaval_to_int32(tolua_S, 7,(int *)&arg5, "GenerlDialog:show");
            if (!ok) { break; }
            GenerlDialog::show(arg0, arg1, arg2, arg3, arg4, arg5);
            lua_settop(tolua_S, 1);
            return 1;
        }
    } while (0);
    ok  = true;
    do 
    {
        if (argc == 2)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:show");
            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:show");
            if (!ok) { break; }
            GenerlDialog::show(arg0, arg1);
            lua_settop(tolua_S, 1);
            return 1;
        }
    } while (0);
    ok  = true;
    do 
    {
        if (argc == 3)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:show");
            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:show");
            if (!ok) { break; }
            bool arg2;
            ok &= luaval_to_boolean(tolua_S, 4,&arg2, "GenerlDialog:show");
            if (!ok) { break; }
            GenerlDialog::show(arg0, arg1, arg2);
            lua_settop(tolua_S, 1);
            return 1;
        }
    } while (0);
    ok  = true;
    do 
    {
        if (argc == 4)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:show");
            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:show");
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg2;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg3;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            GenerlDialog::show(arg0, arg1, arg2, arg3);
            lua_settop(tolua_S, 1);
            return 1;
        }
    } while (0);
    ok  = true;
    do 
    {
        if (argc == 5)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:show");
            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:show");
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg2;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg3;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            bool arg4;
            ok &= luaval_to_boolean(tolua_S, 6,&arg4, "GenerlDialog:show");
            if (!ok) { break; }
            GenerlDialog::show(arg0, arg1, arg2, arg3, arg4);
            lua_settop(tolua_S, 1);
            return 1;
        }
    } while (0);
    ok  = true;
    do 
    {
        if (argc == 6)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:show");
            if (!ok) { break; }
            std::string arg1;
            ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:show");
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg2;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            std::function<void (cocos2d::Ref *)> arg3;
            do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
            if (!ok) { break; }
            bool arg4;
            ok &= luaval_to_boolean(tolua_S, 6,&arg4, "GenerlDialog:show");
            if (!ok) { break; }
            bool arg5;
            ok &= luaval_to_boolean(tolua_S, 7,&arg5, "GenerlDialog:show");
            if (!ok) { break; }
            GenerlDialog::show(arg0, arg1, arg2, arg3, arg4, arg5);
            lua_settop(tolua_S, 1);
            return 1;
        }
    } while (0);
    ok  = true;
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d", "GenerlDialog:show",argc, 4);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_show'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GenerlDialog_setHeadText(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GenerlDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        std::string arg0;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:setHeadText");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_setHeadText'", nullptr);
            return 0;
        }
        GenerlDialog::setHeadText(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GenerlDialog:setHeadText",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_setHeadText'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GenerlDialog_setContentShow(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GenerlDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_setContentShow'", nullptr);
            return 0;
        }
        GenerlDialog::setContentShow();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GenerlDialog:setContentShow",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_setContentShow'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GenerlDialog_setContentText(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GenerlDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        std::string arg0;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:setContentText");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_setContentText'", nullptr);
            return 0;
        }
        GenerlDialog::setContentText(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GenerlDialog:setContentText",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_setContentText'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GenerlDialog_showLuaDialog(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GenerlDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 3)
    {
        std::string arg0;
        std::string arg1;
        std::string arg2;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 4,&arg2, "GenerlDialog:showLuaDialog");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_showLuaDialog'", nullptr);
            return 0;
        }
        GenerlDialog::showLuaDialog(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 4)
    {
        std::string arg0;
        std::string arg1;
        std::string arg2;
        std::string arg3;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 4,&arg2, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 5,&arg3, "GenerlDialog:showLuaDialog");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_showLuaDialog'", nullptr);
            return 0;
        }
        GenerlDialog::showLuaDialog(arg0, arg1, arg2, arg3);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 5)
    {
        std::string arg0;
        std::string arg1;
        std::string arg2;
        std::string arg3;
        std::string arg4;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 4,&arg2, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 5,&arg3, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 6,&arg4, "GenerlDialog:showLuaDialog");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_showLuaDialog'", nullptr);
            return 0;
        }
        GenerlDialog::showLuaDialog(arg0, arg1, arg2, arg3, arg4);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 6)
    {
        std::string arg0;
        std::string arg1;
        std::string arg2;
        std::string arg3;
        std::string arg4;
        bool arg5;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 4,&arg2, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 5,&arg3, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 6,&arg4, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_boolean(tolua_S, 7,&arg5, "GenerlDialog:showLuaDialog");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_showLuaDialog'", nullptr);
            return 0;
        }
        GenerlDialog::showLuaDialog(arg0, arg1, arg2, arg3, arg4, arg5);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 7)
    {
        std::string arg0;
        std::string arg1;
        std::string arg2;
        std::string arg3;
        std::string arg4;
        bool arg5;
        bool arg6;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 4,&arg2, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 5,&arg3, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_std_string(tolua_S, 6,&arg4, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_boolean(tolua_S, 7,&arg5, "GenerlDialog:showLuaDialog");
        ok &= luaval_to_boolean(tolua_S, 8,&arg6, "GenerlDialog:showLuaDialog");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_showLuaDialog'", nullptr);
            return 0;
        }
        GenerlDialog::showLuaDialog(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GenerlDialog:showLuaDialog",argc, 3);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_showLuaDialog'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GenerlDialog_setCancel(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GenerlDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        std::function<void (cocos2d::Ref *)> arg0;
        do {
			// Lambda binding for lua is not supported.
			assert(false);
		} while(0)
		;
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_setCancel'", nullptr);
            return 0;
        }
        GenerlDialog::setCancel(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GenerlDialog:setCancel",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_setCancel'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GenerlDialog_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GenerlDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_create'", nullptr);
            return 0;
        }
        GenerlDialog* ret = GenerlDialog::create();
        object_to_luaval<GenerlDialog>(tolua_S, "GenerlDialog",(GenerlDialog*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GenerlDialog:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GenerlDialog_constructor(lua_State* tolua_S)
{
    int argc = 0;
    GenerlDialog* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GenerlDialog_constructor'", nullptr);
            return 0;
        }
        cobj = new GenerlDialog();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"GenerlDialog");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GenerlDialog:GenerlDialog",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GenerlDialog_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_GenerlDialog_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (GenerlDialog)");
    return 0;
}

int lua_register_mgame_GenerlDialog(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"GenerlDialog");
    tolua_cclass(tolua_S,"GenerlDialog","GenerlDialog","ActionWindow",nullptr);

    tolua_beginmodule(tolua_S,"GenerlDialog");
        tolua_function(tolua_S,"new",lua_mgame_GenerlDialog_constructor);
        tolua_function(tolua_S,"init",lua_mgame_GenerlDialog_init);
        tolua_function(tolua_S,"hide", lua_mgame_GenerlDialog_hide);
        tolua_function(tolua_S,"show", lua_mgame_GenerlDialog_show);
        tolua_function(tolua_S,"setHeadText", lua_mgame_GenerlDialog_setHeadText);
        tolua_function(tolua_S,"setContentShow", lua_mgame_GenerlDialog_setContentShow);
        tolua_function(tolua_S,"setContentText", lua_mgame_GenerlDialog_setContentText);
        tolua_function(tolua_S,"showLuaDialog", lua_mgame_GenerlDialog_showLuaDialog);
        tolua_function(tolua_S,"setCancel", lua_mgame_GenerlDialog_setCancel);
        tolua_function(tolua_S,"create", lua_mgame_GenerlDialog_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(GenerlDialog).name();
    g_luaType[typeName] = "GenerlDialog";
    g_typeCast["GenerlDialog"] = "GenerlDialog";
    return 1;
}

int lua_mgame_TipsManager_showTextTip(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"TipsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        std::string arg0;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "TipsManager:showTextTip");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TipsManager_showTextTip'", nullptr);
            return 0;
        }
        TipsManager::showTextTip(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 2)
    {
        std::string arg0;
        cocos2d::Point arg1;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "TipsManager:showTextTip");
        ok &= luaval_to_point(tolua_S, 3, &arg1, "TipsManager:showTextTip");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TipsManager_showTextTip'", nullptr);
            return 0;
        }
        TipsManager::showTextTip(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "TipsManager:showTextTip",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TipsManager_showTextTip'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_TipsManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    TipsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_TipsManager_constructor'", nullptr);
            return 0;
        }
        cobj = new TipsManager();
        tolua_pushusertype(tolua_S,(void*)cobj,"TipsManager");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "TipsManager:TipsManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_TipsManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_TipsManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (TipsManager)");
    return 0;
}

int lua_register_mgame_TipsManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"TipsManager");
    tolua_cclass(tolua_S,"TipsManager","TipsManager","",nullptr);

    tolua_beginmodule(tolua_S,"TipsManager");
        tolua_function(tolua_S,"new",lua_mgame_TipsManager_constructor);
        tolua_function(tolua_S,"showTextTip", lua_mgame_TipsManager_showTextTip);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(TipsManager).name();
    g_luaType[typeName] = "TipsManager";
    g_typeCast["TipsManager"] = "TipsManager";
    return 1;
}

int lua_mgame_RankingControl_getView(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getView'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getView'", nullptr);
            return 0;
        }
        RankingDialog* ret = cobj->getView();
        object_to_luaval<RankingDialog>(tolua_S, "RankingDialog",(RankingDialog*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getView",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getView'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getbLockDialogClose(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getbLockDialogClose'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getbLockDialogClose'", nullptr);
            return 0;
        }
        bool ret = cobj->getbLockDialogClose();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getbLockDialogClose",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getbLockDialogClose'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getPlayerScore(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getPlayerScore'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getPlayerScore'", nullptr);
            return 0;
        }
        int ret = cobj->getPlayerScore();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getPlayerScore",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getPlayerScore'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_giveUp(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_giveUp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "RankingControl:giveUp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_giveUp'", nullptr);
            return 0;
        }
        cobj->giveUp(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:giveUp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_giveUp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_setAwardTime(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_setAwardTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "RankingControl:setAwardTime");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_setAwardTime'", nullptr);
            return 0;
        }
        cobj->setAwardTime(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:setAwardTime",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_setAwardTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getError(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getError'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getError'", nullptr);
            return 0;
        }
        int ret = cobj->getError();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getError",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getError'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_requestRankingList(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_requestRankingList'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eRankingGroupType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "RankingControl:requestRankingList");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_requestRankingList'", nullptr);
            return 0;
        }
        cobj->requestRankingList(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:requestRankingList",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_requestRankingList'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getStatus(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getStatus'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getStatus'", nullptr);
            return 0;
        }
        bool ret = cobj->getStatus();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getStatus",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getStatus'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getPlayerPrevRanking(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getPlayerPrevRanking'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getPlayerPrevRanking'", nullptr);
            return 0;
        }
        int ret = cobj->getPlayerPrevRanking();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getPlayerPrevRanking",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getPlayerPrevRanking'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getAwardTime(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getAwardTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getAwardTime'", nullptr);
            return 0;
        }
        double ret = cobj->getAwardTime();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getAwardTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getAwardTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_cleanup(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_cleanup'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_cleanup'", nullptr);
            return 0;
        }
        cobj->cleanup();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:cleanup",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_cleanup'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getSuccess(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getSuccess'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getSuccess'", nullptr);
            return 0;
        }
        bool ret = cobj->getSuccess();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getSuccess",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getSuccess'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getPvpCount(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getPvpCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getPvpCount'", nullptr);
            return 0;
        }
        int ret = cobj->getPvpCount();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getPvpCount",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getPvpCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getGroupId(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getGroupId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getGroupId'", nullptr);
            return 0;
        }
        int ret = cobj->getGroupId();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getGroupId",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getGroupId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_setbLockDialogClose(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_setbLockDialogClose'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "RankingControl:setbLockDialogClose");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_setbLockDialogClose'", nullptr);
            return 0;
        }
        cobj->setbLockDialogClose(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:setbLockDialogClose",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_setbLockDialogClose'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_requestPlayerRankingInfo(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_requestPlayerRankingInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_requestPlayerRankingInfo'", nullptr);
            return 0;
        }
        cobj->requestPlayerRankingInfo();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:requestPlayerRankingInfo",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_requestPlayerRankingInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_requestPlayerSelfRankingList(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_requestPlayerSelfRankingList'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_requestPlayerSelfRankingList'", nullptr);
            return 0;
        }
        cobj->requestPlayerSelfRankingList();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:requestPlayerSelfRankingList",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_requestPlayerSelfRankingList'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_setView(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_setView'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        RankingDialog* arg0;

        ok &= luaval_to_object<RankingDialog>(tolua_S, 2, "RankingDialog",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_setView'", nullptr);
            return 0;
        }
        cobj->setView(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:setView",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_setView'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_requestRankWeekAwardInfo(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_requestRankWeekAwardInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_requestRankWeekAwardInfo'", nullptr);
            return 0;
        }
        cobj->requestRankWeekAwardInfo();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:requestRankWeekAwardInfo",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_requestRankWeekAwardInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getPlayerCurrentRanking(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getPlayerCurrentRanking'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getPlayerCurrentRanking'", nullptr);
            return 0;
        }
        int ret = cobj->getPlayerCurrentRanking();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getPlayerCurrentRanking",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getPlayerCurrentRanking'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_setPvpCount(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_setPvpCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "RankingControl:setPvpCount");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_setPvpCount'", nullptr);
            return 0;
        }
        cobj->setPvpCount(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:setPvpCount",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_setPvpCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_setRank(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_setRank'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "RankingControl:setRank");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_setRank'", nullptr);
            return 0;
        }
        cobj->setRank(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:setRank",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_setRank'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_requestPlayerPvpResultInfo(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_requestPlayerPvpResultInfo'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_requestPlayerPvpResultInfo'", nullptr);
            return 0;
        }
        cobj->requestPlayerPvpResultInfo();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:requestPlayerPvpResultInfo",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_requestPlayerPvpResultInfo'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_setGroupId(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_setGroupId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "RankingControl:setGroupId");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_setGroupId'", nullptr);
            return 0;
        }
        cobj->setGroupId(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:setGroupId",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_setGroupId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getRank(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getRank'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getRank'", nullptr);
            return 0;
        }
        int ret = cobj->getRank();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getRank",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getRank'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_requestRankWeekAward(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_requestRankWeekAward'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_requestRankWeekAward'", nullptr);
            return 0;
        }
        cobj->requestRankWeekAward();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:requestRankWeekAward",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_requestRankWeekAward'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_getProxy(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"RankingControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (RankingControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_RankingControl_getProxy'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_getProxy'", nullptr);
            return 0;
        }
        RankingProxy* ret = cobj->getProxy();
        object_to_luaval<RankingProxy>(tolua_S, "RankingProxy",(RankingProxy*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:getProxy",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_getProxy'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_RankingControl_constructor(lua_State* tolua_S)
{
    int argc = 0;
    RankingControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_RankingControl_constructor'", nullptr);
            return 0;
        }
        cobj = new RankingControl();
        tolua_pushusertype(tolua_S,(void*)cobj,"RankingControl");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "RankingControl:RankingControl",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_RankingControl_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_RankingControl_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (RankingControl)");
    return 0;
}

int lua_register_mgame_RankingControl(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"RankingControl");
    tolua_cclass(tolua_S,"RankingControl","RankingControl","",nullptr);

    tolua_beginmodule(tolua_S,"RankingControl");
        tolua_function(tolua_S,"new",lua_mgame_RankingControl_constructor);
        tolua_function(tolua_S,"getView",lua_mgame_RankingControl_getView);
        tolua_function(tolua_S,"getbLockDialogClose",lua_mgame_RankingControl_getbLockDialogClose);
        tolua_function(tolua_S,"getPlayerScore",lua_mgame_RankingControl_getPlayerScore);
        tolua_function(tolua_S,"giveUp",lua_mgame_RankingControl_giveUp);
        tolua_function(tolua_S,"setAwardTime",lua_mgame_RankingControl_setAwardTime);
        tolua_function(tolua_S,"getError",lua_mgame_RankingControl_getError);
        tolua_function(tolua_S,"requestRankingList",lua_mgame_RankingControl_requestRankingList);
        tolua_function(tolua_S,"getStatus",lua_mgame_RankingControl_getStatus);
        tolua_function(tolua_S,"getPlayerPrevRanking",lua_mgame_RankingControl_getPlayerPrevRanking);
        tolua_function(tolua_S,"getAwardTime",lua_mgame_RankingControl_getAwardTime);
        tolua_function(tolua_S,"cleanup",lua_mgame_RankingControl_cleanup);
        tolua_function(tolua_S,"getSuccess",lua_mgame_RankingControl_getSuccess);
        tolua_function(tolua_S,"getPvpCount",lua_mgame_RankingControl_getPvpCount);
        tolua_function(tolua_S,"getGroupId",lua_mgame_RankingControl_getGroupId);
        tolua_function(tolua_S,"setbLockDialogClose",lua_mgame_RankingControl_setbLockDialogClose);
        tolua_function(tolua_S,"requestPlayerRankingInfo",lua_mgame_RankingControl_requestPlayerRankingInfo);
        tolua_function(tolua_S,"requestPlayerSelfRankingList",lua_mgame_RankingControl_requestPlayerSelfRankingList);
        tolua_function(tolua_S,"setView",lua_mgame_RankingControl_setView);
        tolua_function(tolua_S,"requestRankWeekAwardInfo",lua_mgame_RankingControl_requestRankWeekAwardInfo);
        tolua_function(tolua_S,"getPlayerCurrentRanking",lua_mgame_RankingControl_getPlayerCurrentRanking);
        tolua_function(tolua_S,"setPvpCount",lua_mgame_RankingControl_setPvpCount);
        tolua_function(tolua_S,"setRank",lua_mgame_RankingControl_setRank);
        tolua_function(tolua_S,"requestPlayerPvpResultInfo",lua_mgame_RankingControl_requestPlayerPvpResultInfo);
        tolua_function(tolua_S,"setGroupId",lua_mgame_RankingControl_setGroupId);
        tolua_function(tolua_S,"getRank",lua_mgame_RankingControl_getRank);
        tolua_function(tolua_S,"requestRankWeekAward",lua_mgame_RankingControl_requestRankWeekAward);
        tolua_function(tolua_S,"getProxy",lua_mgame_RankingControl_getProxy);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(RankingControl).name();
    g_luaType[typeName] = "RankingControl";
    g_typeCast["RankingControl"] = "RankingControl";
    return 1;
}

int lua_mgame_PageFunction_createWindow(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_createWindow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        ePageType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageFunction:createWindow");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_createWindow'", nullptr);
            return 0;
        }
        Window* ret = cobj->createWindow(arg0);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    if (argc == 2) 
    {
        ePageType arg0;
        std::string arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageFunction:createWindow");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "PageFunction:createWindow");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_createWindow'", nullptr);
            return 0;
        }
        Window* ret = cobj->createWindow(arg0, arg1);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    if (argc == 3) 
    {
        ePageType arg0;
        std::string arg1;
        int arg2;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageFunction:createWindow");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "PageFunction:createWindow");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "PageFunction:createWindow");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_createWindow'", nullptr);
            return 0;
        }
        Window* ret = cobj->createWindow(arg0, arg1, arg2);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    if (argc == 4) 
    {
        ePageType arg0;
        std::string arg1;
        int arg2;
        bool arg3;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageFunction:createWindow");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "PageFunction:createWindow");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "PageFunction:createWindow");

        ok &= luaval_to_boolean(tolua_S, 5,&arg3, "PageFunction:createWindow");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_createWindow'", nullptr);
            return 0;
        }
        Window* ret = cobj->createWindow(arg0, arg1, arg2, arg3);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:createWindow",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_createWindow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_setDiamondPanel(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_setDiamondPanel'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "PageFunction:setDiamondPanel");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_setDiamondPanel'", nullptr);
            return 0;
        }
        cobj->setDiamondPanel(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 2) 
    {
        bool arg0;
        GameScene* arg1;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "PageFunction:setDiamondPanel");

        ok &= luaval_to_object<GameScene>(tolua_S, 3, "GameScene",&arg1);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_setDiamondPanel'", nullptr);
            return 0;
        }
        cobj->setDiamondPanel(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:setDiamondPanel",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_setDiamondPanel'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_getActionPowerLayer(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_getActionPowerLayer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_getActionPowerLayer'", nullptr);
            return 0;
        }
        ActionGain* ret = cobj->getActionPowerLayer();
        object_to_luaval<ActionGain>(tolua_S, "ActionGain",(ActionGain*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:getActionPowerLayer",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_getActionPowerLayer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_getActionPackageLayer(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_getActionPackageLayer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_getActionPackageLayer'", nullptr);
            return 0;
        }
        ActionGain* ret = cobj->getActionPackageLayer();
        object_to_luaval<ActionGain>(tolua_S, "ActionGain",(ActionGain*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:getActionPackageLayer",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_getActionPackageLayer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_showPage(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_showPage'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Scene* arg0;

        ok &= luaval_to_object<cocos2d::Scene>(tolua_S, 2, "cc.Scene",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_showPage'", nullptr);
            return 0;
        }
        cobj->showPage(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:showPage",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_showPage'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_setCurrentUIType(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_setCurrentUIType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageFunction:setCurrentUIType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_setCurrentUIType'", nullptr);
            return 0;
        }
        cobj->setCurrentUIType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:setCurrentUIType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_setCurrentUIType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_logout(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_logout'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_logout'", nullptr);
            return 0;
        }
        cobj->logout();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:logout",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_logout'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_getWindowByPageName(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_getWindowByPageName'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "PageFunction:getWindowByPageName");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_getWindowByPageName'", nullptr);
            return 0;
        }
        Window* ret = cobj->getWindowByPageName(arg0);
        object_to_luaval<Window>(tolua_S, "Window",(Window*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:getWindowByPageName",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_getWindowByPageName'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_getDiamondPanel(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_getDiamondPanel'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_getDiamondPanel'", nullptr);
            return 0;
        }
        cocos2d::Node* ret = cobj->getDiamondPanel();
        object_to_luaval<cocos2d::Node>(tolua_S, "cc.Node",(cocos2d::Node*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:getDiamondPanel",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_getDiamondPanel'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_getActionDiamondLayer(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_getActionDiamondLayer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_getActionDiamondLayer'", nullptr);
            return 0;
        }
        ActionGain* ret = cobj->getActionDiamondLayer();
        object_to_luaval<ActionGain>(tolua_S, "ActionGain",(ActionGain*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:getActionDiamondLayer",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_getActionDiamondLayer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_getCurrentUIType(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_getCurrentUIType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_getCurrentUIType'", nullptr);
            return 0;
        }
        int ret = cobj->getCurrentUIType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:getCurrentUIType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_getCurrentUIType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_enableOptionButton(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_enableOptionButton'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "PageFunction:enableOptionButton");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_enableOptionButton'", nullptr);
            return 0;
        }
        cobj->enableOptionButton(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:enableOptionButton",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_enableOptionButton'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_getActionChestLayer(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_getActionChestLayer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_getActionChestLayer'", nullptr);
            return 0;
        }
        ActionGain* ret = cobj->getActionChestLayer();
        object_to_luaval<ActionGain>(tolua_S, "ActionGain",(ActionGain*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:getActionChestLayer",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_getActionChestLayer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_gotoFunction(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PageFunction",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PageFunction*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PageFunction_gotoFunction'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        ePageType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageFunction:gotoFunction");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_gotoFunction'", nullptr);
            return 0;
        }
        cobj->gotoFunction(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 2) 
    {
        ePageType arg0;
        std::string arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageFunction:gotoFunction");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "PageFunction:gotoFunction");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_gotoFunction'", nullptr);
            return 0;
        }
        cobj->gotoFunction(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 3) 
    {
        ePageType arg0;
        std::string arg1;
        int arg2;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageFunction:gotoFunction");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "PageFunction:gotoFunction");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "PageFunction:gotoFunction");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_gotoFunction'", nullptr);
            return 0;
        }
        cobj->gotoFunction(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 4) 
    {
        ePageType arg0;
        std::string arg1;
        int arg2;
        bool arg3;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PageFunction:gotoFunction");

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "PageFunction:gotoFunction");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "PageFunction:gotoFunction");

        ok &= luaval_to_boolean(tolua_S, 5,&arg3, "PageFunction:gotoFunction");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_gotoFunction'", nullptr);
            return 0;
        }
        cobj->gotoFunction(arg0, arg1, arg2, arg3);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:gotoFunction",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_gotoFunction'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PageFunction_constructor(lua_State* tolua_S)
{
    int argc = 0;
    PageFunction* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PageFunction_constructor'", nullptr);
            return 0;
        }
        cobj = new PageFunction();
        tolua_pushusertype(tolua_S,(void*)cobj,"PageFunction");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PageFunction:PageFunction",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PageFunction_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_PageFunction_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (PageFunction)");
    return 0;
}

int lua_register_mgame_PageFunction(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"PageFunction");
    tolua_cclass(tolua_S,"PageFunction","PageFunction","Singleton<PageFunction>",nullptr);

    tolua_beginmodule(tolua_S,"PageFunction");
        tolua_function(tolua_S,"new",lua_mgame_PageFunction_constructor);
        tolua_function(tolua_S,"createWindow",lua_mgame_PageFunction_createWindow);
        tolua_function(tolua_S,"setDiamondPanel",lua_mgame_PageFunction_setDiamondPanel);
        tolua_function(tolua_S,"getActionPowerLayer",lua_mgame_PageFunction_getActionPowerLayer);
        tolua_function(tolua_S,"getActionPackageLayer",lua_mgame_PageFunction_getActionPackageLayer);
        tolua_function(tolua_S,"showPage",lua_mgame_PageFunction_showPage);
        tolua_function(tolua_S,"setCurrentUIType",lua_mgame_PageFunction_setCurrentUIType);
        tolua_function(tolua_S,"logout",lua_mgame_PageFunction_logout);
        tolua_function(tolua_S,"getWindowByPageName",lua_mgame_PageFunction_getWindowByPageName);
        tolua_function(tolua_S,"getDiamondPanel",lua_mgame_PageFunction_getDiamondPanel);
        tolua_function(tolua_S,"getActionDiamondLayer",lua_mgame_PageFunction_getActionDiamondLayer);
        tolua_function(tolua_S,"getCurrentUIType",lua_mgame_PageFunction_getCurrentUIType);
        tolua_function(tolua_S,"enableOptionButton",lua_mgame_PageFunction_enableOptionButton);
        tolua_function(tolua_S,"getActionChestLayer",lua_mgame_PageFunction_getActionChestLayer);
        tolua_function(tolua_S,"gotoFunction",lua_mgame_PageFunction_gotoFunction);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(PageFunction).name();
    g_luaType[typeName] = "PageFunction";
    g_typeCast["PageFunction"] = "PageFunction";
    return 1;
}

int lua_mgame_NetManager_DisConnect(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_DisConnect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_DisConnect'", nullptr);
            return 0;
        }
        cobj->DisConnect();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:DisConnect",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_DisConnect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_clearCachePack(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_clearCachePack'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_clearCachePack'", nullptr);
            return 0;
        }
        cobj->clearCachePack();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:clearCachePack",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_clearCachePack'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_SendCachePack(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_SendCachePack'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_SendCachePack'", nullptr);
            return 0;
        }
        cobj->SendCachePack();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:SendCachePack",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_SendCachePack'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_delCmdListener(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_delCmdListener'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "NetManager:delCmdListener");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_delCmdListener'", nullptr);
            return 0;
        }
        cobj->delCmdListener(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:delCmdListener",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_delCmdListener'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_InitNetConnection(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_InitNetConnection'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        std::string arg0;
        unsigned short arg1;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "NetManager:InitNetConnection");

        ok &= luaval_to_ushort(tolua_S, 3, &arg1, "NetManager:InitNetConnection");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_InitNetConnection'", nullptr);
            return 0;
        }
        int ret = cobj->InitNetConnection(arg0, arg1);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:InitNetConnection",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_InitNetConnection'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_IsConnect(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_IsConnect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_IsConnect'", nullptr);
            return 0;
        }
        bool ret = cobj->IsConnect();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:IsConnect",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_IsConnect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_getEncryMsg(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_getEncryMsg'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_getEncryMsg'", nullptr);
            return 0;
        }
        bool ret = cobj->getEncryMsg();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:getEncryMsg",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_getEncryMsg'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_ReConnect(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_ReConnect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_ReConnect'", nullptr);
            return 0;
        }
        cobj->ReConnect();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:ReConnect",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_ReConnect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_RegCmdListener(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_RegCmdListener'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        BaseProxy* arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "NetManager:RegCmdListener");

        ok &= luaval_to_object<BaseProxy>(tolua_S, 3, "BaseProxy",&arg1);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_RegCmdListener'", nullptr);
            return 0;
        }
        int ret = cobj->RegCmdListener(arg0, arg1);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    if (argc == 3) 
    {
        int arg0;
        BaseProxy* arg1;
        bool arg2;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "NetManager:RegCmdListener");

        ok &= luaval_to_object<BaseProxy>(tolua_S, 3, "BaseProxy",&arg1);

        ok &= luaval_to_boolean(tolua_S, 4,&arg2, "NetManager:RegCmdListener");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_RegCmdListener'", nullptr);
            return 0;
        }
        int ret = cobj->RegCmdListener(arg0, arg1, arg2);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:RegCmdListener",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_RegCmdListener'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_setEncryMsg(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"NetManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (NetManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_NetManager_setEncryMsg'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "NetManager:setEncryMsg");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_setEncryMsg'", nullptr);
            return 0;
        }
        cobj->setEncryMsg(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:setEncryMsg",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_setEncryMsg'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_NetManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    NetManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_NetManager_constructor'", nullptr);
            return 0;
        }
        cobj = new NetManager();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"NetManager");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "NetManager:NetManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_NetManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_NetManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (NetManager)");
    return 0;
}

int lua_register_mgame_NetManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"NetManager");
    tolua_cclass(tolua_S,"NetManager","NetManager","cc.Ref",nullptr);

    tolua_beginmodule(tolua_S,"NetManager");
        tolua_function(tolua_S,"new",lua_mgame_NetManager_constructor);
        tolua_function(tolua_S,"DisConnect",lua_mgame_NetManager_DisConnect);
        tolua_function(tolua_S,"clearCachePack",lua_mgame_NetManager_clearCachePack);
        tolua_function(tolua_S,"SendCachePack",lua_mgame_NetManager_SendCachePack);
        tolua_function(tolua_S,"delCmdListener",lua_mgame_NetManager_delCmdListener);
        tolua_function(tolua_S,"InitNetConnection",lua_mgame_NetManager_InitNetConnection);
        tolua_function(tolua_S,"IsConnect",lua_mgame_NetManager_IsConnect);
        tolua_function(tolua_S,"getEncryMsg",lua_mgame_NetManager_getEncryMsg);
        tolua_function(tolua_S,"ReConnect",lua_mgame_NetManager_ReConnect);
        tolua_function(tolua_S,"RegCmdListener",lua_mgame_NetManager_RegCmdListener);
        tolua_function(tolua_S,"setEncryMsg",lua_mgame_NetManager_setEncryMsg);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(NetManager).name();
    g_luaType[typeName] = "NetManager";
    g_typeCast["NetManager"] = "NetManager";
    return 1;
}

int lua_mgame_MoraleManager_cleanMoraleManager(lua_State* tolua_S)
{
    int argc = 0;
    MoraleManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MoraleManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MoraleManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MoraleManager_cleanMoraleManager'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MoraleManager_cleanMoraleManager'", nullptr);
            return 0;
        }
        cobj->cleanMoraleManager();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MoraleManager:cleanMoraleManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MoraleManager_cleanMoraleManager'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MoraleManager_clearMorale(lua_State* tolua_S)
{
    int argc = 0;
    MoraleManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MoraleManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MoraleManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MoraleManager_clearMorale'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MoraleManager_clearMorale'", nullptr);
            return 0;
        }
        cobj->clearMorale();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MoraleManager:clearMorale",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MoraleManager_clearMorale'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MoraleManager_registMoraleMessage(lua_State* tolua_S)
{
    int argc = 0;
    MoraleManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MoraleManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MoraleManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MoraleManager_registMoraleMessage'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 3) 
    {
        eCampType arg0;
        double arg1;
        int arg2;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "MoraleManager:registMoraleMessage");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "MoraleManager:registMoraleMessage");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "MoraleManager:registMoraleMessage");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MoraleManager_registMoraleMessage'", nullptr);
            return 0;
        }
        cobj->registMoraleMessage(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 4) 
    {
        eCampType arg0;
        double arg1;
        int arg2;
        int arg3;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "MoraleManager:registMoraleMessage");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "MoraleManager:registMoraleMessage");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "MoraleManager:registMoraleMessage");

        ok &= luaval_to_int32(tolua_S, 5,(int *)&arg3, "MoraleManager:registMoraleMessage");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MoraleManager_registMoraleMessage'", nullptr);
            return 0;
        }
        cobj->registMoraleMessage(arg0, arg1, arg2, arg3);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MoraleManager:registMoraleMessage",argc, 3);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MoraleManager_registMoraleMessage'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MoraleManager_update(lua_State* tolua_S)
{
    int argc = 0;
    MoraleManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MoraleManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MoraleManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MoraleManager_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "MoraleManager:update");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MoraleManager_update'", nullptr);
            return 0;
        }
        cobj->update(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MoraleManager:update",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MoraleManager_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MoraleManager_unRegistMoraleMessage(lua_State* tolua_S)
{
    int argc = 0;
    MoraleManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MoraleManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MoraleManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MoraleManager_unRegistMoraleMessage'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MoraleManager_unRegistMoraleMessage'", nullptr);
            return 0;
        }
        cobj->unRegistMoraleMessage();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MoraleManager:unRegistMoraleMessage",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MoraleManager_unRegistMoraleMessage'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MoraleManager_getMoraleValueByCamp(lua_State* tolua_S)
{
    int argc = 0;
    MoraleManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"MoraleManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (MoraleManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_MoraleManager_getMoraleValueByCamp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eCampType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "MoraleManager:getMoraleValueByCamp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MoraleManager_getMoraleValueByCamp'", nullptr);
            return 0;
        }
        double ret = cobj->getMoraleValueByCamp(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MoraleManager:getMoraleValueByCamp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MoraleManager_getMoraleValueByCamp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_MoraleManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    MoraleManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_MoraleManager_constructor'", nullptr);
            return 0;
        }
        cobj = new MoraleManager();
        tolua_pushusertype(tolua_S,(void*)cobj,"MoraleManager");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "MoraleManager:MoraleManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_MoraleManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_MoraleManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (MoraleManager)");
    return 0;
}

int lua_register_mgame_MoraleManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"MoraleManager");
    tolua_cclass(tolua_S,"MoraleManager","MoraleManager","MessageHandler",nullptr);

    tolua_beginmodule(tolua_S,"MoraleManager");
        tolua_function(tolua_S,"new",lua_mgame_MoraleManager_constructor);
        tolua_function(tolua_S,"cleanMoraleManager",lua_mgame_MoraleManager_cleanMoraleManager);
        tolua_function(tolua_S,"clearMorale",lua_mgame_MoraleManager_clearMorale);
        tolua_function(tolua_S,"registMoraleMessage",lua_mgame_MoraleManager_registMoraleMessage);
        tolua_function(tolua_S,"update",lua_mgame_MoraleManager_update);
        tolua_function(tolua_S,"unRegistMoraleMessage",lua_mgame_MoraleManager_unRegistMoraleMessage);
        tolua_function(tolua_S,"getMoraleValueByCamp",lua_mgame_MoraleManager_getMoraleValueByCamp);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(MoraleManager).name();
    g_luaType[typeName] = "MoraleManager";
    g_typeCast["MoraleManager"] = "MoraleManager";
    return 1;
}

int lua_mgame_BattleRecordsManager_getIsBeganPlayBack(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_getIsBeganPlayBack'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_getIsBeganPlayBack'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsBeganPlayBack();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:getIsBeganPlayBack",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_getIsBeganPlayBack'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_loadBattleRecords(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_loadBattleRecords'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BattleRecordsManager:loadBattleRecords");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_loadBattleRecords'", nullptr);
            return 0;
        }
        bool ret = cobj->loadBattleRecords(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:loadBattleRecords",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_loadBattleRecords'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_getIsPlayback(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_getIsPlayback'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_getIsPlayback'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsPlayback();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:getIsPlayback",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_getIsPlayback'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_resetCommondInterval(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_resetCommondInterval'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_resetCommondInterval'", nullptr);
            return 0;
        }
        cobj->resetCommondInterval();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:resetCommondInterval",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_resetCommondInterval'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_setIsBeganPlayback(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_setIsBeganPlayback'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "BattleRecordsManager:setIsBeganPlayback");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_setIsBeganPlayback'", nullptr);
            return 0;
        }
        cobj->setIsBeganPlayback(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:setIsBeganPlayback",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_setIsBeganPlayback'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_update(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "BattleRecordsManager:update");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_update'", nullptr);
            return 0;
        }
        cobj->update(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:update",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_onReceiveMassage(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_onReceiveMassage'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        GameMessage* arg0;

        ok &= luaval_to_object<GameMessage>(tolua_S, 2, "GameMessage",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_onReceiveMassage'", nullptr);
            return 0;
        }
        cobj->onReceiveMassage(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:onReceiveMassage",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_onReceiveMassage'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_saveBattleRecords(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_saveBattleRecords'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BattleRecordsManager:saveBattleRecords");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_saveBattleRecords'", nullptr);
            return 0;
        }
        cobj->saveBattleRecords(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:saveBattleRecords",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_saveBattleRecords'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_setLastPlaybackPoint(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_setLastPlaybackPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BattleRecordsManager:setLastPlaybackPoint");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_setLastPlaybackPoint'", nullptr);
            return 0;
        }
        cobj->setLastPlaybackPoint(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:setLastPlaybackPoint",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_setLastPlaybackPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_setIsPlayback(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_setIsPlayback'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "BattleRecordsManager:setIsPlayback");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_setIsPlayback'", nullptr);
            return 0;
        }
        cobj->setIsPlayback(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:setIsPlayback",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_setIsPlayback'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_getLastPlaybackPoint(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BattleRecordsManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BattleRecordsManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BattleRecordsManager_getLastPlaybackPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_getLastPlaybackPoint'", nullptr);
            return 0;
        }
        int ret = cobj->getLastPlaybackPoint();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:getLastPlaybackPoint",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_getLastPlaybackPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BattleRecordsManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    BattleRecordsManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BattleRecordsManager_constructor'", nullptr);
            return 0;
        }
        cobj = new BattleRecordsManager();
        tolua_pushusertype(tolua_S,(void*)cobj,"BattleRecordsManager");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BattleRecordsManager:BattleRecordsManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BattleRecordsManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_BattleRecordsManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (BattleRecordsManager)");
    return 0;
}

int lua_register_mgame_BattleRecordsManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"BattleRecordsManager");
    tolua_cclass(tolua_S,"BattleRecordsManager","BattleRecordsManager","MessageHandler",nullptr);

    tolua_beginmodule(tolua_S,"BattleRecordsManager");
        tolua_function(tolua_S,"new",lua_mgame_BattleRecordsManager_constructor);
        tolua_function(tolua_S,"getIsBeganPlayBack",lua_mgame_BattleRecordsManager_getIsBeganPlayBack);
        tolua_function(tolua_S,"loadBattleRecords",lua_mgame_BattleRecordsManager_loadBattleRecords);
        tolua_function(tolua_S,"getIsPlayback",lua_mgame_BattleRecordsManager_getIsPlayback);
        tolua_function(tolua_S,"resetCommondInterval",lua_mgame_BattleRecordsManager_resetCommondInterval);
        tolua_function(tolua_S,"setIsBeganPlayback",lua_mgame_BattleRecordsManager_setIsBeganPlayback);
        tolua_function(tolua_S,"update",lua_mgame_BattleRecordsManager_update);
        tolua_function(tolua_S,"onReceiveMassage",lua_mgame_BattleRecordsManager_onReceiveMassage);
        tolua_function(tolua_S,"saveBattleRecords",lua_mgame_BattleRecordsManager_saveBattleRecords);
        tolua_function(tolua_S,"setLastPlaybackPoint",lua_mgame_BattleRecordsManager_setLastPlaybackPoint);
        tolua_function(tolua_S,"setIsPlayback",lua_mgame_BattleRecordsManager_setIsPlayback);
        tolua_function(tolua_S,"getLastPlaybackPoint",lua_mgame_BattleRecordsManager_getLastPlaybackPoint);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(BattleRecordsManager).name();
    g_luaType[typeName] = "BattleRecordsManager";
    g_typeCast["BattleRecordsManager"] = "BattleRecordsManager";
    return 1;
}

int lua_mgame_BuffManager_setCampPeopleToFull(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_setCampPeopleToFull'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        eCampType arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BuffManager:setCampPeopleToFull");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "BuffManager:setCampPeopleToFull");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_setCampPeopleToFull'", nullptr);
            return 0;
        }
        cobj->setCampPeopleToFull(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:setCampPeopleToFull",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_setCampPeopleToFull'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_getExistBuff(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_getExistBuff'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        eCampType arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BuffManager:getExistBuff");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "BuffManager:getExistBuff");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_getExistBuff'", nullptr);
            return 0;
        }
        bool ret = cobj->getExistBuff(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:getExistBuff",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_getExistBuff'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_getBuffProduceSpeed(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_getBuffProduceSpeed'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        eCampType arg0;
        double arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BuffManager:getBuffProduceSpeed");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "BuffManager:getBuffProduceSpeed");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_getBuffProduceSpeed'", nullptr);
            return 0;
        }
        double ret = cobj->getBuffProduceSpeed(arg0, arg1);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:getBuffProduceSpeed",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_getBuffProduceSpeed'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_clearBuff(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_clearBuff'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_clearBuff'", nullptr);
            return 0;
        }
        cobj->clearBuff();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:clearBuff",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_clearBuff'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_update(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "BuffManager:update");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_update'", nullptr);
            return 0;
        }
        cobj->update(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:update",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_getBuffDefence(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_getBuffDefence'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        eCampType arg0;
        double arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BuffManager:getBuffDefence");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "BuffManager:getBuffDefence");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_getBuffDefence'", nullptr);
            return 0;
        }
        double ret = cobj->getBuffDefence(arg0, arg1);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:getBuffDefence",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_getBuffDefence'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_getBuffAttack(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_getBuffAttack'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        eCampType arg0;
        double arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BuffManager:getBuffAttack");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "BuffManager:getBuffAttack");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_getBuffAttack'", nullptr);
            return 0;
        }
        double ret = cobj->getBuffAttack(arg0, arg1);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:getBuffAttack",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_getBuffAttack'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_getBuffAttackSpeed(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_getBuffAttackSpeed'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        eCampType arg0;
        double arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BuffManager:getBuffAttackSpeed");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "BuffManager:getBuffAttackSpeed");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_getBuffAttackSpeed'", nullptr);
            return 0;
        }
        double ret = cobj->getBuffAttackSpeed(arg0, arg1);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:getBuffAttackSpeed",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_getBuffAttackSpeed'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_getBuffListByCamp(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_getBuffListByCamp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eCampType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BuffManager:getBuffListByCamp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_getBuffListByCamp'", nullptr);
            return 0;
        }
        const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >* ret = cobj->getBuffListByCamp(arg0);
        object_to_luaval<std::map<int, int, std::less<int>, std::allocator<std::pair<int, int> > >>(tolua_S, "std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >*",(std::map<int, int, std::less<int>, std::allocator<std::pair<int, int> > >*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:getBuffListByCamp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_getBuffListByCamp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_getBuffMoveSpeed(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BuffManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BuffManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BuffManager_getBuffMoveSpeed'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        eCampType arg0;
        double arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BuffManager:getBuffMoveSpeed");

        ok &= luaval_to_number(tolua_S, 3,&arg1, "BuffManager:getBuffMoveSpeed");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_getBuffMoveSpeed'", nullptr);
            return 0;
        }
        double ret = cobj->getBuffMoveSpeed(arg0, arg1);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:getBuffMoveSpeed",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_getBuffMoveSpeed'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BuffManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    BuffManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BuffManager_constructor'", nullptr);
            return 0;
        }
        cobj = new BuffManager();
        tolua_pushusertype(tolua_S,(void*)cobj,"BuffManager");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BuffManager:BuffManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BuffManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_BuffManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (BuffManager)");
    return 0;
}

int lua_register_mgame_BuffManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"BuffManager");
    tolua_cclass(tolua_S,"BuffManager","BuffManager","MessageHandler",nullptr);

    tolua_beginmodule(tolua_S,"BuffManager");
        tolua_function(tolua_S,"new",lua_mgame_BuffManager_constructor);
        tolua_function(tolua_S,"setCampPeopleToFull",lua_mgame_BuffManager_setCampPeopleToFull);
        tolua_function(tolua_S,"getExistBuff",lua_mgame_BuffManager_getExistBuff);
        tolua_function(tolua_S,"getBuffProduceSpeed",lua_mgame_BuffManager_getBuffProduceSpeed);
        tolua_function(tolua_S,"clearBuff",lua_mgame_BuffManager_clearBuff);
        tolua_function(tolua_S,"update",lua_mgame_BuffManager_update);
        tolua_function(tolua_S,"getBuffDefence",lua_mgame_BuffManager_getBuffDefence);
        tolua_function(tolua_S,"getBuffAttack",lua_mgame_BuffManager_getBuffAttack);
        tolua_function(tolua_S,"getBuffAttackSpeed",lua_mgame_BuffManager_getBuffAttackSpeed);
        tolua_function(tolua_S,"getBuffListByCamp",lua_mgame_BuffManager_getBuffListByCamp);
        tolua_function(tolua_S,"getBuffMoveSpeed",lua_mgame_BuffManager_getBuffMoveSpeed);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(BuffManager).name();
    g_luaType[typeName] = "BuffManager";
    g_typeCast["BuffManager"] = "BuffManager";
    return 1;
}

int lua_mgame_CommFunc_commParseUTFStr(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 2)
    {
        std::string arg0;
        std::vector<std::string> arg1;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "CommFunc:commParseUTFStr");
        ok &= luaval_to_std_vector_string(tolua_S, 3, &arg1, "CommFunc:commParseUTFStr");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CommFunc_commParseUTFStr'", nullptr);
            return 0;
        }
        bool ret = CommFunc::commParseUTFStr(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CommFunc:commParseUTFStr",argc, 2);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_commParseUTFStr'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CommFunc_commGetRichFormatText(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        std::string arg0;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "CommFunc:commGetRichFormatText");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CommFunc_commGetRichFormatText'", nullptr);
            return 0;
        }
        std::string ret = CommFunc::commGetRichFormatText(arg0);
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CommFunc:commGetRichFormatText",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_commGetRichFormatText'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CommFunc_getEnvSet(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        const char* arg0;
        std::string arg0_tmp; ok &= luaval_to_std_string(tolua_S, 2, &arg0_tmp, "CommFunc:getEnvSet"); arg0 = arg0_tmp.c_str();
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CommFunc_getEnvSet'", nullptr);
            return 0;
        }
        int ret = CommFunc::getEnvSet(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CommFunc:getEnvSet",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_getEnvSet'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CommFunc_commSplitStrToInt(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 2)
    {
        std::string arg0;
        std::string arg1;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "CommFunc:commSplitStrToInt");
        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "CommFunc:commSplitStrToInt");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CommFunc_commSplitStrToInt'", nullptr);
            return 0;
        }
        std::vector<int> ret = CommFunc::commSplitStrToInt(arg0, arg1);
        ccvector_int_to_luaval(tolua_S, ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CommFunc:commSplitStrToInt",argc, 2);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_commSplitStrToInt'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CommFunc_getStrValue(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;
#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S)-1;

    do 
    {
        if (argc == 3)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "CommFunc:getStrValue");
            if (!ok) { break; }
            const char* arg1;
            std::string arg1_tmp; ok &= luaval_to_std_string(tolua_S, 3, &arg1_tmp, "CommFunc:getStrValue"); arg1 = arg1_tmp.c_str();
            if (!ok) { break; }
            const char* arg2;
            std::string arg2_tmp; ok &= luaval_to_std_string(tolua_S, 4, &arg2_tmp, "CommFunc:getStrValue"); arg2 = arg2_tmp.c_str();
            if (!ok) { break; }
            std::string ret = CommFunc::getStrValue(arg0, arg1, arg2);
            tolua_pushcpplstring(tolua_S,ret,ret.size());
            return 1;
        }
    } while (0);
    ok  = true;
    do 
    {
        if (argc == 2)
        {
            std::string arg0;
            ok &= luaval_to_std_string(tolua_S, 2,&arg0, "CommFunc:getStrValue");
            if (!ok) { break; }
            const char* arg1;
            std::string arg1_tmp; ok &= luaval_to_std_string(tolua_S, 3, &arg1_tmp, "CommFunc:getStrValue"); arg1 = arg1_tmp.c_str();
            if (!ok) { break; }
            std::string ret = CommFunc::getStrValue(arg0, arg1);
            tolua_pushcpplstring(tolua_S,ret,ret.size());
            return 1;
        }
    } while (0);
    ok  = true;
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d", "CommFunc:getStrValue",argc, 2);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_getStrValue'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CommFunc_commSplitStr(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 2)
    {
        std::string arg0;
        std::string arg1;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "CommFunc:commSplitStr");
        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "CommFunc:commSplitStr");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CommFunc_commSplitStr'", nullptr);
            return 0;
        }
        std::vector<std::string> ret = CommFunc::commSplitStr(arg0, arg1);
        ccvector_std_string_to_luaval(tolua_S, ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CommFunc:commSplitStr",argc, 2);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_commSplitStr'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CommFunc_getRandName(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CommFunc_getRandName'", nullptr);
            return 0;
        }
        std::string ret = CommFunc::getRandName();
        tolua_pushcpplstring(tolua_S,ret,ret.size());
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CommFunc:getRandName",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_getRandName'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CommFunc_randomStrFromPlist(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        const char* arg0;
        std::string arg0_tmp; ok &= luaval_to_std_string(tolua_S, 2, &arg0_tmp, "CommFunc:randomStrFromPlist"); arg0 = arg0_tmp.c_str();
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CommFunc_randomStrFromPlist'", nullptr);
            return 0;
        }
        cocos2d::__String* ret = CommFunc::randomStrFromPlist(arg0);
        object_to_luaval<cocos2d::__String>(tolua_S, "cc.__String",(cocos2d::__String*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CommFunc:randomStrFromPlist",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_randomStrFromPlist'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CommFunc_commSetGray(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        cocos2d::Node* arg0;
        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 2, "cc.Node",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CommFunc_commSetGray'", nullptr);
            return 0;
        }
        CommFunc::commSetGray(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CommFunc:commSetGray",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_commSetGray'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_CommFunc_commCheckCharacter(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"CommFunc",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 2)
    {
        std::string arg0;
        std::string arg1;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "CommFunc:commCheckCharacter");
        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "CommFunc:commCheckCharacter");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_CommFunc_commCheckCharacter'", nullptr);
            return 0;
        }
        int ret = CommFunc::commCheckCharacter(arg0, arg1);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "CommFunc:commCheckCharacter",argc, 2);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_CommFunc_commCheckCharacter'.",&tolua_err);
#endif
    return 0;
}
static int lua_mgame_CommFunc_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (CommFunc)");
    return 0;
}

int lua_register_mgame_CommFunc(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"CommFunc");
    tolua_cclass(tolua_S,"CommFunc","CommFunc","",nullptr);

    tolua_beginmodule(tolua_S,"CommFunc");
        tolua_function(tolua_S,"commParseUTFStr", lua_mgame_CommFunc_commParseUTFStr);
        tolua_function(tolua_S,"commGetRichFormatText", lua_mgame_CommFunc_commGetRichFormatText);
        tolua_function(tolua_S,"getEnvSet", lua_mgame_CommFunc_getEnvSet);
        tolua_function(tolua_S,"commSplitStrToInt", lua_mgame_CommFunc_commSplitStrToInt);
        tolua_function(tolua_S,"getStrValue", lua_mgame_CommFunc_getStrValue);
        tolua_function(tolua_S,"commSplitStr", lua_mgame_CommFunc_commSplitStr);
        tolua_function(tolua_S,"getRandName", lua_mgame_CommFunc_getRandName);
        tolua_function(tolua_S,"randomStrFromPlist", lua_mgame_CommFunc_randomStrFromPlist);
        tolua_function(tolua_S,"commSetGray", lua_mgame_CommFunc_commSetGray);
        tolua_function(tolua_S,"commCheckCharacter", lua_mgame_CommFunc_commCheckCharacter);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(CommFunc).name();
    g_luaType[typeName] = "CommFunc";
    g_typeCast["CommFunc"] = "CommFunc";
    return 1;
}

int lua_mgame_ExRichText_setAnchorPoint(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_setAnchorPoint'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Vec2 arg0;

        ok &= luaval_to_vec2(tolua_S, 2, &arg0, "ExRichText:setAnchorPoint");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_setAnchorPoint'", nullptr);
            return 0;
        }
        cobj->setAnchorPoint(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:setAnchorPoint",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_setAnchorPoint'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_ignoreContentAdaptWithSize(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_ignoreContentAdaptWithSize'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "ExRichText:ignoreContentAdaptWithSize");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_ignoreContentAdaptWithSize'", nullptr);
            return 0;
        }
        cobj->ignoreContentAdaptWithSize(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:ignoreContentAdaptWithSize",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_ignoreContentAdaptWithSize'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_setString(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_setString'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ExRichText:setString");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_setString'", nullptr);
            return 0;
        }
        cobj->setString(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:setString",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_setString'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_setVerticalSpace(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_setVerticalSpace'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "ExRichText:setVerticalSpace");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_setVerticalSpace'", nullptr);
            return 0;
        }
        cobj->setVerticalSpace(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:setVerticalSpace",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_setVerticalSpace'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_getSize(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_getSize'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_getSize'", nullptr);
            return 0;
        }
        const cocos2d::Size& ret = cobj->getSize();
        size_to_luaval(tolua_S, ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:getSize",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_getSize'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_init(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_init'", nullptr);
            return 0;
        }
        bool ret = cobj->init();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_getLineNum(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_getLineNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_getLineNum'", nullptr);
            return 0;
        }
        int ret = cobj->getLineNum();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:getLineNum",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_getLineNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_setLimitWidth(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_setLimitWidth'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "ExRichText:setLimitWidth");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_setLimitWidth'", nullptr);
            return 0;
        }
        cobj->setLimitWidth(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:setLimitWidth",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_setLimitWidth'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_setSize(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_setSize'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Size arg0;

        ok &= luaval_to_size(tolua_S, 2, &arg0, "ExRichText:setSize");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_setSize'", nullptr);
            return 0;
        }
        cobj->setSize(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:setSize",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_setSize'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_setText(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_setText'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ExRichText:setText");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_setText'", nullptr);
            return 0;
        }
        cobj->setText(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:setText",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_setText'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_appendText(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ExRichText*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ExRichText_appendText'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ExRichText:appendText");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_appendText'", nullptr);
            return 0;
        }
        cobj->appendText(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:appendText",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_appendText'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ExRichText_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"ExRichText",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_create'", nullptr);
            return 0;
        }
        ExRichText* ret = ExRichText::create();
        object_to_luaval<ExRichText>(tolua_S, "ExRichText",(ExRichText*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "ExRichText:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_ExRichText_constructor(lua_State* tolua_S)
{
    int argc = 0;
    ExRichText* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ExRichText_constructor'", nullptr);
            return 0;
        }
        cobj = new ExRichText();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"ExRichText");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ExRichText:ExRichText",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ExRichText_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_ExRichText_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (ExRichText)");
    return 0;
}

int lua_register_mgame_ExRichText(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"ExRichText");
    tolua_cclass(tolua_S,"ExRichText","ExRichText","ccui.Widget",nullptr);

    tolua_beginmodule(tolua_S,"ExRichText");
        tolua_function(tolua_S,"new",lua_mgame_ExRichText_constructor);
        tolua_function(tolua_S,"setAnchorPoint",lua_mgame_ExRichText_setAnchorPoint);
        tolua_function(tolua_S,"ignoreContentAdaptWithSize",lua_mgame_ExRichText_ignoreContentAdaptWithSize);
        tolua_function(tolua_S,"setString",lua_mgame_ExRichText_setString);
        tolua_function(tolua_S,"setVerticalSpace",lua_mgame_ExRichText_setVerticalSpace);
        tolua_function(tolua_S,"getSize",lua_mgame_ExRichText_getSize);
        tolua_function(tolua_S,"init",lua_mgame_ExRichText_init);
        tolua_function(tolua_S,"getLineNum",lua_mgame_ExRichText_getLineNum);
        tolua_function(tolua_S,"setLimitWidth",lua_mgame_ExRichText_setLimitWidth);
        tolua_function(tolua_S,"setSize",lua_mgame_ExRichText_setSize);
        tolua_function(tolua_S,"setText",lua_mgame_ExRichText_setText);
        tolua_function(tolua_S,"appendText",lua_mgame_ExRichText_appendText);
        tolua_function(tolua_S,"create", lua_mgame_ExRichText_create);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(ExRichText).name();
    g_luaType[typeName] = "ExRichText";
    g_typeCast["ExRichText"] = "ExRichText";
    return 1;
}

int lua_mgame_GuideManager_setExtraCondition(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setExtraCondition'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:setExtraCondition");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setExtraCondition'", nullptr);
            return 0;
        }
        cobj->setExtraCondition(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setExtraCondition",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setExtraCondition'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setCloseGuide(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setCloseGuide'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "GuideManager:setCloseGuide");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setCloseGuide'", nullptr);
            return 0;
        }
        cobj->setCloseGuide(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setCloseGuide",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setCloseGuide'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_resetGuideDragFlag(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_resetGuideDragFlag'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:resetGuideDragFlag");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_resetGuideDragFlag'", nullptr);
            return 0;
        }
        cobj->resetGuideDragFlag(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:resetGuideDragFlag",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_resetGuideDragFlag'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setCurGuideGroup(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setCurGuideGroup'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:setCurGuideGroup");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setCurGuideGroup'", nullptr);
            return 0;
        }
        cobj->setCurGuideGroup(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setCurGuideGroup",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setCurGuideGroup'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getDragCondition(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getDragCondition'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getDragCondition'", nullptr);
            return 0;
        }
        int ret = cobj->getDragCondition();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getDragCondition",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getDragCondition'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkOpenSoldierControl(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkOpenSoldierControl'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:checkOpenSoldierControl");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkOpenSoldierControl'", nullptr);
            return 0;
        }
        bool ret = cobj->checkOpenSoldierControl(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkOpenSoldierControl",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkOpenSoldierControl'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_rollbackRookieGuide(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_rollbackRookieGuide'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_rollbackRookieGuide'", nullptr);
            return 0;
        }
        cobj->rollbackRookieGuide();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:rollbackRookieGuide",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_rollbackRookieGuide'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getCurGuideData(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getCurGuideData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getCurGuideData'", nullptr);
            return 0;
        }
        const GuideData* ret = cobj->getCurGuideData();
        object_to_luaval<GuideData>(tolua_S, "GuideData",(GuideData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getCurGuideData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getCurGuideData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getExtraCondition2(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getExtraCondition2'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getExtraCondition2'", nullptr);
            return 0;
        }
        int ret = cobj->getExtraCondition2();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getExtraCondition2",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getExtraCondition2'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_unRegistGuideMessage(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_unRegistGuideMessage'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_unRegistGuideMessage'", nullptr);
            return 0;
        }
        bool ret = cobj->unRegistGuideMessage();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "GuideManager:unRegistGuideMessage");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_unRegistGuideMessage'", nullptr);
            return 0;
        }
        bool ret = cobj->unRegistGuideMessage(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    if (argc == 2) 
    {
        bool arg0;
        int arg1;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "GuideManager:unRegistGuideMessage");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "GuideManager:unRegistGuideMessage");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_unRegistGuideMessage'", nullptr);
            return 0;
        }
        bool ret = cobj->unRegistGuideMessage(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:unRegistGuideMessage",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_unRegistGuideMessage'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getCloseGuide(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getCloseGuide'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getCloseGuide'", nullptr);
            return 0;
        }
        bool ret = cobj->getCloseGuide();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getCloseGuide",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getCloseGuide'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getGuideLock(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getGuideLock'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getGuideLock'", nullptr);
            return 0;
        }
        bool ret = cobj->getGuideLock();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getGuideLock",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getGuideLock'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getOpenRookieCamp(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getOpenRookieCamp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getOpenRookieCamp'", nullptr);
            return 0;
        }
        bool ret = cobj->getOpenRookieCamp();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getOpenRookieCamp",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getOpenRookieCamp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkHaveGateGuide(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkHaveGateGuide'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:checkHaveGateGuide");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkHaveGateGuide'", nullptr);
            return 0;
        }
        bool ret = cobj->checkHaveGateGuide(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkHaveGateGuide",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkHaveGateGuide'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkGuideFinishByGroup(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkGuideFinishByGroup'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:checkGuideFinishByGroup");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkGuideFinishByGroup'", nullptr);
            return 0;
        }
        bool ret = cobj->checkGuideFinishByGroup(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkGuideFinishByGroup",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkGuideFinishByGroup'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkOpenPropControl(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkOpenPropControl'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:checkOpenPropControl");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkOpenPropControl'", nullptr);
            return 0;
        }
        bool ret = cobj->checkOpenPropControl(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkOpenPropControl",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkOpenPropControl'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_initGuideData(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_initGuideData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_initGuideData'", nullptr);
            return 0;
        }
        cobj->initGuideData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:initGuideData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_initGuideData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setDragCondition(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setDragCondition'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:setDragCondition");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setDragCondition'", nullptr);
            return 0;
        }
        cobj->setDragCondition(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setDragCondition",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setDragCondition'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_init(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_init'", nullptr);
            return 0;
        }
        bool ret = cobj->init();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getExtraCondition(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getExtraCondition'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getExtraCondition'", nullptr);
            return 0;
        }
        int ret = cobj->getExtraCondition();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getExtraCondition",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getExtraCondition'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_registGuideMessage(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_registGuideMessage'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 5) 
    {
        int arg0;
        int arg1;
        int arg2;
        cocos2d::Node* arg3;
        cocos2d::Node* arg4;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:registGuideMessage");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "GuideManager:registGuideMessage");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "GuideManager:registGuideMessage");

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 5, "cc.Node",&arg3);

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 6, "cc.Node",&arg4);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_registGuideMessage'", nullptr);
            return 0;
        }
        bool ret = cobj->registGuideMessage(arg0, arg1, arg2, arg3, arg4);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    if (argc == 6) 
    {
        int arg0;
        int arg1;
        int arg2;
        cocos2d::Node* arg3;
        cocos2d::Node* arg4;
        bool arg5;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:registGuideMessage");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "GuideManager:registGuideMessage");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "GuideManager:registGuideMessage");

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 5, "cc.Node",&arg3);

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 6, "cc.Node",&arg4);

        ok &= luaval_to_boolean(tolua_S, 7,&arg5, "GuideManager:registGuideMessage");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_registGuideMessage'", nullptr);
            return 0;
        }
        bool ret = cobj->registGuideMessage(arg0, arg1, arg2, arg3, arg4, arg5);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    if (argc == 7) 
    {
        int arg0;
        int arg1;
        int arg2;
        cocos2d::Node* arg3;
        cocos2d::Node* arg4;
        bool arg5;
        cocos2d::Point arg6;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:registGuideMessage");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "GuideManager:registGuideMessage");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "GuideManager:registGuideMessage");

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 5, "cc.Node",&arg3);

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 6, "cc.Node",&arg4);

        ok &= luaval_to_boolean(tolua_S, 7,&arg5, "GuideManager:registGuideMessage");

        ok &= luaval_to_point(tolua_S, 8, &arg6, "GuideManager:registGuideMessage");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_registGuideMessage'", nullptr);
            return 0;
        }
        bool ret = cobj->registGuideMessage(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:registGuideMessage",argc, 5);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_registGuideMessage'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkRookieFlag(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkRookieFlag'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkRookieFlag'", nullptr);
            return 0;
        }
        bool ret = cobj->checkRookieFlag();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkRookieFlag",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkRookieFlag'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setGuideLock(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setGuideLock'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "GuideManager:setGuideLock");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setGuideLock'", nullptr);
            return 0;
        }
        cobj->setGuideLock(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setGuideLock",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setGuideLock'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getIsRunning(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getIsRunning'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getIsRunning'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsRunning();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getIsRunning",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getIsRunning'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkIsReady(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkIsReady'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkIsReady'", nullptr);
            return 0;
        }
        bool ret = cobj->checkIsReady();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkIsReady",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkIsReady'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getCurGuideGroup(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getCurGuideGroup'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getCurGuideGroup'", nullptr);
            return 0;
        }
        int ret = cobj->getCurGuideGroup();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getCurGuideGroup",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getCurGuideGroup'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getCurGuideID(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getCurGuideID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getCurGuideID'", nullptr);
            return 0;
        }
        int ret = cobj->getCurGuideID();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getCurGuideID",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getCurGuideID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getGuideDataByGroup(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getGuideDataByGroup'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:getGuideDataByGroup");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getGuideDataByGroup'", nullptr);
            return 0;
        }
        const GuideData* ret = cobj->getGuideDataByGroup(arg0);
        object_to_luaval<GuideData>(tolua_S, "GuideData",(GuideData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getGuideDataByGroup",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getGuideDataByGroup'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_update(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "GuideManager:update");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_update'", nullptr);
            return 0;
        }
        cobj->update(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:update",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getGuideLayer(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getGuideLayer'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getGuideLayer'", nullptr);
            return 0;
        }
        cocos2d::Layer* ret = cobj->getGuideLayer();
        object_to_luaval<cocos2d::Layer>(tolua_S, "cc.Layer",(cocos2d::Layer*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getGuideLayer",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getGuideLayer'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setCurGuideGroupFinish(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setCurGuideGroupFinish'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setCurGuideGroupFinish'", nullptr);
            return 0;
        }
        cobj->setCurGuideGroupFinish();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setCurGuideGroupFinish",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setCurGuideGroupFinish'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_rollbackGuide(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_rollbackGuide'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_rollbackGuide'", nullptr);
            return 0;
        }
        cobj->rollbackGuide();
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "GuideManager:rollbackGuide");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_rollbackGuide'", nullptr);
            return 0;
        }
        cobj->rollbackGuide(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:rollbackGuide",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_rollbackGuide'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkOpeartor(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkOpeartor'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:checkOpeartor");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkOpeartor'", nullptr);
            return 0;
        }
        bool ret = cobj->checkOpeartor(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkOpeartor",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkOpeartor'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_saveGuideData(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_saveGuideData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:saveGuideData");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_saveGuideData'", nullptr);
            return 0;
        }
        cobj->saveGuideData(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:saveGuideData",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_saveGuideData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getIsRookie(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getIsRookie'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getIsRookie'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsRookie();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getIsRookie",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getIsRookie'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkNeedPower(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkNeedPower'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:checkNeedPower");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkNeedPower'", nullptr);
            return 0;
        }
        bool ret = cobj->checkNeedPower(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkNeedPower",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkNeedPower'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkGuideFinishByID(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkGuideFinishByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:checkGuideFinishByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkGuideFinishByID'", nullptr);
            return 0;
        }
        bool ret = cobj->checkGuideFinishByID(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkGuideFinishByID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkGuideFinishByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setCurGuideID(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setCurGuideID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:setCurGuideID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setCurGuideID'", nullptr);
            return 0;
        }
        cobj->setCurGuideID(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setCurGuideID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setCurGuideID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setOpenRookieCamp(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setOpenRookieCamp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "GuideManager:setOpenRookieCamp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setOpenRookieCamp'", nullptr);
            return 0;
        }
        cobj->setOpenRookieCamp(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setOpenRookieCamp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setOpenRookieCamp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setGroupFinishByID(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setGroupFinishByID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:setGroupFinishByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setGroupFinishByID'", nullptr);
            return 0;
        }
        cobj->setGroupFinishByID(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 2) 
    {
        int arg0;
        bool arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:setGroupFinishByID");

        ok &= luaval_to_boolean(tolua_S, 3,&arg1, "GuideManager:setGroupFinishByID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setGroupFinishByID'", nullptr);
            return 0;
        }
        cobj->setGroupFinishByID(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setGroupFinishByID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setGroupFinishByID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_clearGuideData(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_clearGuideData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_clearGuideData'", nullptr);
            return 0;
        }
        cobj->clearGuideData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:clearGuideData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_clearGuideData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getStopDragFlag(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getStopDragFlag'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getStopDragFlag'", nullptr);
            return 0;
        }
        bool ret = cobj->getStopDragFlag();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getStopDragFlag",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getStopDragFlag'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setIsRookie(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setIsRookie'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "GuideManager:setIsRookie");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setIsRookie'", nullptr);
            return 0;
        }
        cobj->setIsRookie(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setIsRookie",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setIsRookie'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkDragOperator(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkDragOperator'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkDragOperator'", nullptr);
            return 0;
        }
        bool ret = cobj->checkDragOperator();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkDragOperator",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkDragOperator'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setStopDragFlag(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setStopDragFlag'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "GuideManager:setStopDragFlag");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setStopDragFlag'", nullptr);
            return 0;
        }
        cobj->setStopDragFlag(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setStopDragFlag",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setStopDragFlag'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_checkGuideTypeFinished(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_checkGuideTypeFinished'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:checkGuideTypeFinished");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_checkGuideTypeFinished'", nullptr);
            return 0;
        }
        bool ret = cobj->checkGuideTypeFinished(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:checkGuideTypeFinished",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_checkGuideTypeFinished'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_getGuideDataByGuideID(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_getGuideDataByGuideID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:getGuideDataByGuideID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_getGuideDataByGuideID'", nullptr);
            return 0;
        }
        const GuideData* ret = cobj->getGuideDataByGuideID(arg0);
        object_to_luaval<GuideData>(tolua_S, "GuideData",(GuideData*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:getGuideDataByGuideID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_getGuideDataByGuideID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_setExtraCondition2(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GuideManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GuideManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GuideManager_setExtraCondition2'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GuideManager:setExtraCondition2");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_setExtraCondition2'", nullptr);
            return 0;
        }
        cobj->setExtraCondition2(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:setExtraCondition2",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_setExtraCondition2'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GuideManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    GuideManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GuideManager_constructor'", nullptr);
            return 0;
        }
        cobj = new GuideManager();
        tolua_pushusertype(tolua_S,(void*)cobj,"GuideManager");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GuideManager:GuideManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GuideManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_GuideManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (GuideManager)");
    return 0;
}

int lua_register_mgame_GuideManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"GuideManager");
    tolua_cclass(tolua_S,"GuideManager","GuideManager","MessageHandler",nullptr);

    tolua_beginmodule(tolua_S,"GuideManager");
        tolua_function(tolua_S,"new",lua_mgame_GuideManager_constructor);
        tolua_function(tolua_S,"setExtraCondition",lua_mgame_GuideManager_setExtraCondition);
        tolua_function(tolua_S,"setCloseGuide",lua_mgame_GuideManager_setCloseGuide);
        tolua_function(tolua_S,"resetGuideDragFlag",lua_mgame_GuideManager_resetGuideDragFlag);
        tolua_function(tolua_S,"setCurGuideGroup",lua_mgame_GuideManager_setCurGuideGroup);
        tolua_function(tolua_S,"getDragCondition",lua_mgame_GuideManager_getDragCondition);
        tolua_function(tolua_S,"checkOpenSoldierControl",lua_mgame_GuideManager_checkOpenSoldierControl);
        tolua_function(tolua_S,"rollbackRookieGuide",lua_mgame_GuideManager_rollbackRookieGuide);
        tolua_function(tolua_S,"getCurGuideData",lua_mgame_GuideManager_getCurGuideData);
        tolua_function(tolua_S,"getExtraCondition2",lua_mgame_GuideManager_getExtraCondition2);
        tolua_function(tolua_S,"unRegistGuideMessage",lua_mgame_GuideManager_unRegistGuideMessage);
        tolua_function(tolua_S,"getCloseGuide",lua_mgame_GuideManager_getCloseGuide);
        tolua_function(tolua_S,"getGuideLock",lua_mgame_GuideManager_getGuideLock);
        tolua_function(tolua_S,"getOpenRookieCamp",lua_mgame_GuideManager_getOpenRookieCamp);
        tolua_function(tolua_S,"checkHaveGateGuide",lua_mgame_GuideManager_checkHaveGateGuide);
        tolua_function(tolua_S,"checkGuideFinishByGroup",lua_mgame_GuideManager_checkGuideFinishByGroup);
        tolua_function(tolua_S,"checkOpenPropControl",lua_mgame_GuideManager_checkOpenPropControl);
        tolua_function(tolua_S,"initGuideData",lua_mgame_GuideManager_initGuideData);
        tolua_function(tolua_S,"setDragCondition",lua_mgame_GuideManager_setDragCondition);
        tolua_function(tolua_S,"init",lua_mgame_GuideManager_init);
        tolua_function(tolua_S,"getExtraCondition",lua_mgame_GuideManager_getExtraCondition);
        tolua_function(tolua_S,"registGuideMessage",lua_mgame_GuideManager_registGuideMessage);
        tolua_function(tolua_S,"checkRookieFlag",lua_mgame_GuideManager_checkRookieFlag);
        tolua_function(tolua_S,"setGuideLock",lua_mgame_GuideManager_setGuideLock);
        tolua_function(tolua_S,"getIsRunning",lua_mgame_GuideManager_getIsRunning);
        tolua_function(tolua_S,"checkIsReady",lua_mgame_GuideManager_checkIsReady);
        tolua_function(tolua_S,"getCurGuideGroup",lua_mgame_GuideManager_getCurGuideGroup);
        tolua_function(tolua_S,"getCurGuideID",lua_mgame_GuideManager_getCurGuideID);
        tolua_function(tolua_S,"getGuideDataByGroup",lua_mgame_GuideManager_getGuideDataByGroup);
        tolua_function(tolua_S,"update",lua_mgame_GuideManager_update);
        tolua_function(tolua_S,"getGuideLayer",lua_mgame_GuideManager_getGuideLayer);
        tolua_function(tolua_S,"setCurGuideGroupFinish",lua_mgame_GuideManager_setCurGuideGroupFinish);
        tolua_function(tolua_S,"rollbackGuide",lua_mgame_GuideManager_rollbackGuide);
        tolua_function(tolua_S,"checkOpeartor",lua_mgame_GuideManager_checkOpeartor);
        tolua_function(tolua_S,"saveGuideData",lua_mgame_GuideManager_saveGuideData);
        tolua_function(tolua_S,"getIsRookie",lua_mgame_GuideManager_getIsRookie);
        tolua_function(tolua_S,"checkNeedPower",lua_mgame_GuideManager_checkNeedPower);
        tolua_function(tolua_S,"checkGuideFinishByID",lua_mgame_GuideManager_checkGuideFinishByID);
        tolua_function(tolua_S,"setCurGuideID",lua_mgame_GuideManager_setCurGuideID);
        tolua_function(tolua_S,"setOpenRookieCamp",lua_mgame_GuideManager_setOpenRookieCamp);
        tolua_function(tolua_S,"setGroupFinishByID",lua_mgame_GuideManager_setGroupFinishByID);
        tolua_function(tolua_S,"clearGuideData",lua_mgame_GuideManager_clearGuideData);
        tolua_function(tolua_S,"getStopDragFlag",lua_mgame_GuideManager_getStopDragFlag);
        tolua_function(tolua_S,"setIsRookie",lua_mgame_GuideManager_setIsRookie);
        tolua_function(tolua_S,"checkDragOperator",lua_mgame_GuideManager_checkDragOperator);
        tolua_function(tolua_S,"setStopDragFlag",lua_mgame_GuideManager_setStopDragFlag);
        tolua_function(tolua_S,"checkGuideTypeFinished",lua_mgame_GuideManager_checkGuideTypeFinished);
        tolua_function(tolua_S,"getGuideDataByGuideID",lua_mgame_GuideManager_getGuideDataByGuideID);
        tolua_function(tolua_S,"setExtraCondition2",lua_mgame_GuideManager_setExtraCondition2);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(GuideManager).name();
    g_luaType[typeName] = "GuideManager";
    g_typeCast["GuideManager"] = "GuideManager";
    return 1;
}

int lua_mgame_ResManager_loadResByPageType(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_loadResByPageType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ResManager:loadResByPageType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_loadResByPageType'", nullptr);
            return 0;
        }
        cobj->loadResByPageType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 2) 
    {
        int arg0;
        bool arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ResManager:loadResByPageType");

        ok &= luaval_to_boolean(tolua_S, 3,&arg1, "ResManager:loadResByPageType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_loadResByPageType'", nullptr);
            return 0;
        }
        cobj->loadResByPageType(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:loadResByPageType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_loadResByPageType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_setUpdateResPath(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_setUpdateResPath'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_setUpdateResPath'", nullptr);
            return 0;
        }
        cobj->setUpdateResPath();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:setUpdateResPath",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_setUpdateResPath'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_loadCommonResCallback(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_loadCommonResCallback'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::EventCustom* arg0;

        ok &= luaval_to_object<cocos2d::EventCustom>(tolua_S, 2, "cc.EventCustom",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_loadCommonResCallback'", nullptr);
            return 0;
        }
        cobj->loadCommonResCallback(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:loadCommonResCallback",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_loadCommonResCallback'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_loadCommonRes(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_loadCommonRes'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_loadCommonRes'", nullptr);
            return 0;
        }
        cobj->loadCommonRes();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:loadCommonRes",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_loadCommonRes'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_purgeResByPageType(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_purgeResByPageType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ResManager:purgeResByPageType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_purgeResByPageType'", nullptr);
            return 0;
        }
        cobj->purgeResByPageType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:purgeResByPageType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_purgeResByPageType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_asyncLoadCsvData(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_asyncLoadCsvData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_asyncLoadCsvData'", nullptr);
            return 0;
        }
        cobj->asyncLoadCsvData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:asyncLoadCsvData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_asyncLoadCsvData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_loadAsync(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_loadAsync'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_loadAsync'", nullptr);
            return 0;
        }
        cobj->loadAsync();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:loadAsync",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_loadAsync'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_syncLoadLua(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_syncLoadLua'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_syncLoadLua'", nullptr);
            return 0;
        }
        cobj->syncLoadLua();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:syncLoadLua",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_syncLoadLua'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_addResourcesTask(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_addResourcesTask'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "ResManager:addResourcesTask");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_addResourcesTask'", nullptr);
            return 0;
        }
        cobj->addResourcesTask(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:addResourcesTask",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_addResourcesTask'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_update(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "ResManager:update");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_update'", nullptr);
            return 0;
        }
        cobj->update(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:update",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_setResourcePath(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_setResourcePath'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_setResourcePath'", nullptr);
            return 0;
        }
        cobj->setResourcePath();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:setResourcePath",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_setResourcePath'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_init(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_init'", nullptr);
            return 0;
        }
        cobj->init();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_removeAramaturFromeParent(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_removeAramaturFromeParent'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_removeAramaturFromeParent'", nullptr);
            return 0;
        }
        cobj->removeAramaturFromeParent();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:removeAramaturFromeParent",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_removeAramaturFromeParent'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_getAramatur(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_getAramatur'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "ResManager:getAramatur");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_getAramatur'", nullptr);
            return 0;
        }
        cocostudio::Armature* ret = cobj->getAramatur(arg0);
        object_to_luaval<cocostudio::Armature>(tolua_S, "ccs.Armature",(cocostudio::Armature*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:getAramatur",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_getAramatur'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_getProgress(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_getProgress'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_getProgress'", nullptr);
            return 0;
        }
        double ret = cobj->getProgress();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:getProgress",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_getProgress'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_syncLoadData(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_syncLoadData'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_syncLoadData'", nullptr);
            return 0;
        }
        cobj->syncLoadData();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:syncLoadData",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_syncLoadData'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_doLoadOver(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"ResManager",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (ResManager*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_ResManager_doLoadOver'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_doLoadOver'", nullptr);
            return 0;
        }
        cobj->doLoadOver();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:doLoadOver",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_doLoadOver'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_ResManager_constructor(lua_State* tolua_S)
{
    int argc = 0;
    ResManager* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_ResManager_constructor'", nullptr);
            return 0;
        }
        cobj = new ResManager();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"ResManager");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "ResManager:ResManager",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_ResManager_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_ResManager_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (ResManager)");
    return 0;
}

int lua_register_mgame_ResManager(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"ResManager");
    tolua_cclass(tolua_S,"ResManager","ResManager","cc.Ref",nullptr);

    tolua_beginmodule(tolua_S,"ResManager");
        tolua_function(tolua_S,"new",lua_mgame_ResManager_constructor);
        tolua_function(tolua_S,"loadResByPageType",lua_mgame_ResManager_loadResByPageType);
        tolua_function(tolua_S,"setUpdateResPath",lua_mgame_ResManager_setUpdateResPath);
        tolua_function(tolua_S,"loadCommonResCallback",lua_mgame_ResManager_loadCommonResCallback);
        tolua_function(tolua_S,"loadCommonRes",lua_mgame_ResManager_loadCommonRes);
        tolua_function(tolua_S,"purgeResByPageType",lua_mgame_ResManager_purgeResByPageType);
        tolua_function(tolua_S,"asyncLoadCsvData",lua_mgame_ResManager_asyncLoadCsvData);
        tolua_function(tolua_S,"loadAsync",lua_mgame_ResManager_loadAsync);
        tolua_function(tolua_S,"syncLoadLua",lua_mgame_ResManager_syncLoadLua);
        tolua_function(tolua_S,"addResourcesTask",lua_mgame_ResManager_addResourcesTask);
        tolua_function(tolua_S,"update",lua_mgame_ResManager_update);
        tolua_function(tolua_S,"setResourcePath",lua_mgame_ResManager_setResourcePath);
        tolua_function(tolua_S,"init",lua_mgame_ResManager_init);
        tolua_function(tolua_S,"removeAramaturFromeParent",lua_mgame_ResManager_removeAramaturFromeParent);
        tolua_function(tolua_S,"getAramatur",lua_mgame_ResManager_getAramatur);
        tolua_function(tolua_S,"getProgress",lua_mgame_ResManager_getProgress);
        tolua_function(tolua_S,"syncLoadData",lua_mgame_ResManager_syncLoadData);
        tolua_function(tolua_S,"doLoadOver",lua_mgame_ResManager_doLoadOver);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(ResManager).name();
    g_luaType[typeName] = "ResManager";
    g_typeCast["ResManager"] = "ResManager";
    return 1;
}

int lua_mgame_FuncForLua_ConvertToWidget(lua_State* tolua_S)
{
    int argc = 0;
    FuncForLua* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"FuncForLua",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (FuncForLua*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_FuncForLua_ConvertToWidget'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Node* arg0;

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 2, "cc.Node",&arg0);
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_FuncForLua_ConvertToWidget'", nullptr);
            return 0;
        }
        bool ret = cobj->ConvertToWidget(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "FuncForLua:ConvertToWidget",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_FuncForLua_ConvertToWidget'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_FuncForLua_constructor(lua_State* tolua_S)
{
    int argc = 0;
    FuncForLua* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_FuncForLua_constructor'", nullptr);
            return 0;
        }
        cobj = new FuncForLua();
        tolua_pushusertype(tolua_S,(void*)cobj,"FuncForLua");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "FuncForLua:FuncForLua",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_FuncForLua_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_FuncForLua_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (FuncForLua)");
    return 0;
}

int lua_register_mgame_FuncForLua(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"FuncForLua");
    tolua_cclass(tolua_S,"FuncForLua","FuncForLua","",nullptr);

    tolua_beginmodule(tolua_S,"FuncForLua");
        tolua_function(tolua_S,"new",lua_mgame_FuncForLua_constructor);
        tolua_function(tolua_S,"ConvertToWidget",lua_mgame_FuncForLua_ConvertToWidget);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(FuncForLua).name();
    g_luaType[typeName] = "FuncForLua";
    g_typeCast["FuncForLua"] = "FuncForLua";
    return 1;
}

int lua_mgame_LuaProxy_getInstance(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"LuaProxy",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_LuaProxy_getInstance'", nullptr);
            return 0;
        }
        LuaProxy* ret = LuaProxy::getInstance();
        object_to_luaval<LuaProxy>(tolua_S, "LuaProxy",(LuaProxy*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "LuaProxy:getInstance",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_LuaProxy_getInstance'.",&tolua_err);
#endif
    return 0;
}
static int lua_mgame_LuaProxy_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (LuaProxy)");
    return 0;
}

int lua_register_mgame_LuaProxy(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"LuaProxy");
    tolua_cclass(tolua_S,"LuaProxy","LuaProxy","BaseProxy",nullptr);

    tolua_beginmodule(tolua_S,"LuaProxy");
        tolua_function(tolua_S,"getInstance", lua_mgame_LuaProxy_getInstance);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(LuaProxy).name();
    g_luaType[typeName] = "LuaProxy";
    g_typeCast["LuaProxy"] = "LuaProxy";
    return 1;
}

int lua_mgame_GiftAwardDialog_extraWork(lua_State* tolua_S)
{
    int argc = 0;
    GiftAwardDialog* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAwardDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAwardDialog*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAwardDialog_extraWork'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_extraWork'", nullptr);
            return 0;
        }
        cobj->extraWork();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAwardDialog:extraWork",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAwardDialog_extraWork'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAwardDialog_playAllItemAni2(lua_State* tolua_S)
{
    int argc = 0;
    GiftAwardDialog* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAwardDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAwardDialog*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAwardDialog_playAllItemAni2'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_playAllItemAni2'", nullptr);
            return 0;
        }
        cobj->playAllItemAni2();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAwardDialog:playAllItemAni2",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAwardDialog_playAllItemAni2'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAwardDialog_init(lua_State* tolua_S)
{
    int argc = 0;
    GiftAwardDialog* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAwardDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAwardDialog*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAwardDialog_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_init'", nullptr);
            return 0;
        }
        bool ret = cobj->init();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAwardDialog:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAwardDialog_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAwardDialog_clearGuideCallback(lua_State* tolua_S)
{
    int argc = 0;
    GiftAwardDialog* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"GiftAwardDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (GiftAwardDialog*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_GiftAwardDialog_clearGuideCallback'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_clearGuideCallback'", nullptr);
            return 0;
        }
        cobj->clearGuideCallback();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAwardDialog:clearGuideCallback",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAwardDialog_clearGuideCallback'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_GiftAwardDialog_showDialogByChests(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GiftAwardDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        std::string arg0;
        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "GiftAwardDialog:showDialogByChests");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_showDialogByChests'", nullptr);
            return 0;
        }
        GiftAwardDialog* ret = GiftAwardDialog::showDialogByChests(arg0);
        object_to_luaval<GiftAwardDialog>(tolua_S, "GiftAwardDialog",(GiftAwardDialog*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GiftAwardDialog:showDialogByChests",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAwardDialog_showDialogByChests'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GiftAwardDialog_create(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GiftAwardDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 0)
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_create'", nullptr);
            return 0;
        }
        GiftAwardDialog* ret = GiftAwardDialog::create();
        object_to_luaval<GiftAwardDialog>(tolua_S, "GiftAwardDialog",(GiftAwardDialog*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GiftAwardDialog:create",argc, 0);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAwardDialog_create'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GiftAwardDialog_showDialogByGiftIds(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GiftAwardDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 2)
    {
        int arg0;
        int arg1;
        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GiftAwardDialog:showDialogByGiftIds");
        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "GiftAwardDialog:showDialogByGiftIds");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_showDialogByGiftIds'", nullptr);
            return 0;
        }
        GiftAwardDialog* ret = GiftAwardDialog::showDialogByGiftIds(arg0, arg1);
        object_to_luaval<GiftAwardDialog>(tolua_S, "GiftAwardDialog",(GiftAwardDialog*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GiftAwardDialog:showDialogByGiftIds",argc, 2);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAwardDialog_showDialogByGiftIds'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GiftAwardDialog_showDialogByGiftId(lua_State* tolua_S)
{
    int argc = 0;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertable(tolua_S,1,"GiftAwardDialog",0,&tolua_err)) goto tolua_lerror;
#endif

    argc = lua_gettop(tolua_S) - 1;

    if (argc == 1)
    {
        int arg0;
        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GiftAwardDialog:showDialogByGiftId");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_showDialogByGiftId'", nullptr);
            return 0;
        }
        GiftAwardDialog* ret = GiftAwardDialog::showDialogByGiftId(arg0);
        object_to_luaval<GiftAwardDialog>(tolua_S, "GiftAwardDialog",(GiftAwardDialog*)ret);
        return 1;
    }
    if (argc == 2)
    {
        int arg0;
        bool arg1;
        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "GiftAwardDialog:showDialogByGiftId");
        ok &= luaval_to_boolean(tolua_S, 3,&arg1, "GiftAwardDialog:showDialogByGiftId");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_showDialogByGiftId'", nullptr);
            return 0;
        }
        GiftAwardDialog* ret = GiftAwardDialog::showDialogByGiftId(arg0, arg1);
        object_to_luaval<GiftAwardDialog>(tolua_S, "GiftAwardDialog",(GiftAwardDialog*)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d\n ", "GiftAwardDialog:showDialogByGiftId",argc, 1);
    return 0;
#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAwardDialog_showDialogByGiftId'.",&tolua_err);
#endif
    return 0;
}
int lua_mgame_GiftAwardDialog_constructor(lua_State* tolua_S)
{
    int argc = 0;
    GiftAwardDialog* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_GiftAwardDialog_constructor'", nullptr);
            return 0;
        }
        cobj = new GiftAwardDialog();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"GiftAwardDialog");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "GiftAwardDialog:GiftAwardDialog",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_GiftAwardDialog_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_GiftAwardDialog_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (GiftAwardDialog)");
    return 0;
}

int lua_register_mgame_GiftAwardDialog(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"GiftAwardDialog");
    tolua_cclass(tolua_S,"GiftAwardDialog","GiftAwardDialog","Window",nullptr);

    tolua_beginmodule(tolua_S,"GiftAwardDialog");
        tolua_function(tolua_S,"new",lua_mgame_GiftAwardDialog_constructor);
        tolua_function(tolua_S,"extraWork",lua_mgame_GiftAwardDialog_extraWork);
        tolua_function(tolua_S,"playAllItemAni2",lua_mgame_GiftAwardDialog_playAllItemAni2);
        tolua_function(tolua_S,"init",lua_mgame_GiftAwardDialog_init);
        tolua_function(tolua_S,"clearGuideCallback",lua_mgame_GiftAwardDialog_clearGuideCallback);
        tolua_function(tolua_S,"showDialogByChests", lua_mgame_GiftAwardDialog_showDialogByChests);
        tolua_function(tolua_S,"create", lua_mgame_GiftAwardDialog_create);
        tolua_function(tolua_S,"showDialogByGiftIds", lua_mgame_GiftAwardDialog_showDialogByGiftIds);
        tolua_function(tolua_S,"showDialogByGiftId", lua_mgame_GiftAwardDialog_showDialogByGiftId);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(GiftAwardDialog).name();
    g_luaType[typeName] = "GiftAwardDialog";
    g_typeCast["GiftAwardDialog"] = "GiftAwardDialog";
    return 1;
}

int lua_mgame_BackPackControl_setShowType(lua_State* tolua_S)
{
    int argc = 0;
    BackPackControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BackPackControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BackPackControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BackPackControl_setShowType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BackPackControl:setShowType");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BackPackControl_setShowType'", nullptr);
            return 0;
        }
        cobj->setShowType(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BackPackControl:setShowType",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BackPackControl_setShowType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BackPackControl_getSelectStuffID(lua_State* tolua_S)
{
    int argc = 0;
    BackPackControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BackPackControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BackPackControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BackPackControl_getSelectStuffID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BackPackControl_getSelectStuffID'", nullptr);
            return 0;
        }
        int ret = cobj->getSelectStuffID();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BackPackControl:getSelectStuffID",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BackPackControl_getSelectStuffID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BackPackControl_getShowType(lua_State* tolua_S)
{
    int argc = 0;
    BackPackControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BackPackControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BackPackControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BackPackControl_getShowType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BackPackControl_getShowType'", nullptr);
            return 0;
        }
        int ret = cobj->getShowType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BackPackControl:getShowType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BackPackControl_getShowType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BackPackControl_setSelectStuffID(lua_State* tolua_S)
{
    int argc = 0;
    BackPackControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"BackPackControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (BackPackControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_BackPackControl_setSelectStuffID'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "BackPackControl:setSelectStuffID");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BackPackControl_setSelectStuffID'", nullptr);
            return 0;
        }
        cobj->setSelectStuffID(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BackPackControl:setSelectStuffID",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BackPackControl_setSelectStuffID'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_BackPackControl_constructor(lua_State* tolua_S)
{
    int argc = 0;
    BackPackControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_BackPackControl_constructor'", nullptr);
            return 0;
        }
        cobj = new BackPackControl();
        tolua_pushusertype(tolua_S,(void*)cobj,"BackPackControl");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "BackPackControl:BackPackControl",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_BackPackControl_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_BackPackControl_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (BackPackControl)");
    return 0;
}

int lua_register_mgame_BackPackControl(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"BackPackControl");
    tolua_cclass(tolua_S,"BackPackControl","BackPackControl","",nullptr);

    tolua_beginmodule(tolua_S,"BackPackControl");
        tolua_function(tolua_S,"new",lua_mgame_BackPackControl_constructor);
        tolua_function(tolua_S,"setShowType",lua_mgame_BackPackControl_setShowType);
        tolua_function(tolua_S,"getSelectStuffID",lua_mgame_BackPackControl_getSelectStuffID);
        tolua_function(tolua_S,"getShowType",lua_mgame_BackPackControl_getShowType);
        tolua_function(tolua_S,"setSelectStuffID",lua_mgame_BackPackControl_setSelectStuffID);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(BackPackControl).name();
    g_luaType[typeName] = "BackPackControl";
    g_typeCast["BackPackControl"] = "BackPackControl";
    return 1;
}

int lua_mgame_PropsControl_doCookingSolider(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_doCookingSolider'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        cocos2d::Vec2 arg0;
        eCampType arg1;

        ok &= luaval_to_vec2(tolua_S, 2, &arg0, "PropsControl:doCookingSolider");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:doCookingSolider");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doCookingSolider'", nullptr);
            return 0;
        }
        cobj->doCookingSolider(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:doCookingSolider",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_doCookingSolider'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_doExchange(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_doExchange'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        eCampType arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:doExchange");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:doExchange");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doExchange'", nullptr);
            return 0;
        }
        cobj->doExchange(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:doExchange",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_doExchange'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_chechCdTimeOver(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_chechCdTimeOver'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_chechCdTimeOver'", nullptr);
            return 0;
        }
        cobj->chechCdTimeOver();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:chechCdTimeOver",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_chechCdTimeOver'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_getSelectPropNum(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_getSelectPropNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_getSelectPropNum'", nullptr);
            return 0;
        }
        int ret = cobj->getSelectPropNum();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:getSelectPropNum",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_getSelectPropNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_doAddTime(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_doAddTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eCampType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:doAddTime");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doAddTime'", nullptr);
            return 0;
        }
        cobj->doAddTime(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:doAddTime",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_doAddTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_setProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_setProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:setProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_setProp'", nullptr);
            return 0;
        }
        bool ret = cobj->setProp(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    if (argc == 2) 
    {
        int arg0;
        bool arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:setProp");

        ok &= luaval_to_boolean(tolua_S, 3,&arg1, "PropsControl:setProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_setProp'", nullptr);
            return 0;
        }
        bool ret = cobj->setProp(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:setProp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_setProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_checkIsCdTime(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_checkIsCdTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:checkIsCdTime");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_checkIsCdTime'", nullptr);
            return 0;
        }
        bool ret = cobj->checkIsCdTime(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:checkIsCdTime",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_checkIsCdTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_updatePropItemShow(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_updatePropItemShow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_updatePropItemShow'", nullptr);
            return 0;
        }
        cobj->updatePropItemShow();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:updatePropItemShow",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_updatePropItemShow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_doInvisibility(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_doInvisibility'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        eCampType arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:doInvisibility");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:doInvisibility");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doInvisibility'", nullptr);
            return 0;
        }
        cobj->doInvisibility(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:doInvisibility",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_doInvisibility'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_stopPropTipsAni(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_stopPropTipsAni'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_stopPropTipsAni'", nullptr);
            return 0;
        }
        cobj->stopPropTipsAni();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:stopPropTipsAni",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_stopPropTipsAni'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_clearGuideProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_clearGuideProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_clearGuideProp'", nullptr);
            return 0;
        }
        cobj->clearGuideProp();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:clearGuideProp",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_clearGuideProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_initGuideProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_initGuideProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        cocos2d::Node* arg0;
        int arg1;

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 2, "cc.Node",&arg0);

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:initGuideProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_initGuideProp'", nullptr);
            return 0;
        }
        cobj->initGuideProp(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:initGuideProp",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_initGuideProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_cleanCdTime(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;
#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif

#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif
    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);
#if COCOS2D_DEBUG >= 1
    if (!cobj)
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_cleanCdTime'", nullptr);
        return 0;
    }
#endif
    argc = lua_gettop(tolua_S)-1;
    do{
        if (argc == 0) {
            cobj->cleanCdTime();
            lua_settop(tolua_S, 1);
            return 1;
        }
    }while(0);
    ok  = true;
    do{
        if (argc == 1) {
            int arg0;
            ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:cleanCdTime");

            if (!ok) { break; }
            cobj->cleanCdTime(arg0);
            lua_settop(tolua_S, 1);
            return 1;
        }
    }while(0);
    ok  = true;
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n",  "PropsControl:cleanCdTime",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_cleanCdTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_doOil(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_doOil'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        cocos2d::Vec2 arg0;
        eCampType arg1;

        ok &= luaval_to_vec2(tolua_S, 2, &arg0, "PropsControl:doOil");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:doOil");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doOil'", nullptr);
            return 0;
        }
        cobj->doOil(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:doOil",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_doOil'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_propEvetCancel(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_propEvetCancel'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_propEvetCancel'", nullptr);
            return 0;
        }
        cobj->propEvetCancel();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:propEvetCancel",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_propEvetCancel'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_getCurPropType(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_getCurPropType'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_getCurPropType'", nullptr);
            return 0;
        }
        int ret = (int)cobj->getCurPropType();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:getCurPropType",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_getCurPropType'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_isPropIng(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_isPropIng'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_isPropIng'", nullptr);
            return 0;
        }
        bool ret = cobj->isPropIng();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:isPropIng",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_isPropIng'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_sendUsePropRqst(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_sendUsePropRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:sendUsePropRqst");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:sendUsePropRqst");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_sendUsePropRqst'", nullptr);
            return 0;
        }
        cobj->sendUsePropRqst(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:sendUsePropRqst",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_sendUsePropRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_init(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_init'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_init'", nullptr);
            return 0;
        }
        cobj->init();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:init",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_init'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_doUseGuideProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_doUseGuideProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Point arg0;

        ok &= luaval_to_point(tolua_S, 2, &arg0, "PropsControl:doUseGuideProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doUseGuideProp'", nullptr);
            return 0;
        }
        cobj->doUseGuideProp(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:doUseGuideProp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_doUseGuideProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_updatePropTips(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_updatePropTips'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_updatePropTips'", nullptr);
            return 0;
        }
        cobj->updatePropTips();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:updatePropTips",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_updatePropTips'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_setTouchPos(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_setTouchPos'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        cocos2d::Vec2 arg0;

        ok &= luaval_to_vec2(tolua_S, 2, &arg0, "PropsControl:setTouchPos");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_setTouchPos'", nullptr);
            return 0;
        }
        cobj->setTouchPos(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:setTouchPos",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_setTouchPos'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_checkPropInLevel(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_checkPropInLevel'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        ePropPos arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:checkPropInLevel");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_checkPropInLevel'", nullptr);
            return 0;
        }
        bool ret = cobj->checkPropInLevel(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:checkPropInLevel",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_checkPropInLevel'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_doFreeze(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_doFreeze'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        eCampType arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:doFreeze");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doFreeze'", nullptr);
            return 0;
        }
        cobj->doFreeze(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:doFreeze",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_doFreeze'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_textCallBack(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_textCallBack'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_textCallBack'", nullptr);
            return 0;
        }
        cobj->textCallBack();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:textCallBack",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_textCallBack'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_getCurPropId(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_getCurPropId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_getCurPropId'", nullptr);
            return 0;
        }
        int ret = cobj->getCurPropId();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:getCurPropId",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_getCurPropId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_addGuideProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_addGuideProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:addGuideProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_addGuideProp'", nullptr);
            return 0;
        }
        cobj->addGuideProp(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:addGuideProp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_addGuideProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_showNoticeText(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_showNoticeText'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        std::string arg0;

        ok &= luaval_to_std_string(tolua_S, 2,&arg0, "PropsControl:showNoticeText");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_showNoticeText'", nullptr);
            return 0;
        }
        cobj->showNoticeText(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:showNoticeText",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_showNoticeText'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_initNeedTipProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_initNeedTipProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_initNeedTipProp'", nullptr);
            return 0;
        }
        cobj->initNeedTipProp();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:initNeedTipProp",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_initNeedTipProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_hasPropInLevel(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_hasPropInLevel'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_hasPropInLevel'", nullptr);
            return 0;
        }
        bool ret = cobj->hasPropInLevel();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:hasPropInLevel",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_hasPropInLevel'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_sendBuyPropRqst(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_sendBuyPropRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 3) 
    {
        int arg0;
        int arg1;
        int arg2;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:sendBuyPropRqst");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:sendBuyPropRqst");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "PropsControl:sendBuyPropRqst");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_sendBuyPropRqst'", nullptr);
            return 0;
        }
        cobj->sendBuyPropRqst(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:sendBuyPropRqst",argc, 3);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_sendBuyPropRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_update(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_update'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_update'", nullptr);
            return 0;
        }
        cobj->update();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:update",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_update'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_hideOtherItem(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_hideOtherItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:hideOtherItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_hideOtherItem'", nullptr);
            return 0;
        }
        cobj->hideOtherItem(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:hideOtherItem",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_hideOtherItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_getSelectGuideProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_getSelectGuideProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_getSelectGuideProp'", nullptr);
            return 0;
        }
        int ret = cobj->getSelectGuideProp();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:getSelectGuideProp",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_getSelectGuideProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_showOrHideAimEffect(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_showOrHideAimEffect'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "PropsControl:showOrHideAimEffect");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_showOrHideAimEffect'", nullptr);
            return 0;
        }
        cobj->showOrHideAimEffect(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:showOrHideAimEffect",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_showOrHideAimEffect'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_getExchange(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_getExchange'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_getExchange'", nullptr);
            return 0;
        }
        bool ret = cobj->getExchange();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:getExchange",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_getExchange'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_addPropItem(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_addPropItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:addPropItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_addPropItem'", nullptr);
            return 0;
        }
        cobj->addPropItem(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:addPropItem",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_addPropItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_initSaveProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_initSaveProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_initSaveProp'", nullptr);
            return 0;
        }
        cobj->initSaveProp();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:initSaveProp",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_initSaveProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_updatePropItem(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_updatePropItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:updatePropItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_updatePropItem'", nullptr);
            return 0;
        }
        cobj->updatePropItem(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:updatePropItem",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_updatePropItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_getTouchPos(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_getTouchPos'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_getTouchPos'", nullptr);
            return 0;
        }
        cocos2d::Vec2 ret = cobj->getTouchPos();
        vec2_to_luaval(tolua_S, ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:getTouchPos",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_getTouchPos'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_initPropCd(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_initPropCd'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_initPropCd'", nullptr);
            return 0;
        }
        cobj->initPropCd();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:initPropCd",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_initPropCd'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_setSelectGuideProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_setSelectGuideProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:setSelectGuideProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_setSelectGuideProp'", nullptr);
            return 0;
        }
        cobj->setSelectGuideProp(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:setSelectGuideProp",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_setSelectGuideProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_prePropEvet(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_prePropEvet'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_prePropEvet'", nullptr);
            return 0;
        }
        cobj->prePropEvet();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:prePropEvet",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_prePropEvet'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_getPosPropId(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_getPosPropId'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        ePropPos arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:getPosPropId");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_getPosPropId'", nullptr);
            return 0;
        }
        int ret = cobj->getPosPropId(arg0);
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:getPosPropId",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_getPosPropId'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_sendOpenChestRqst(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_sendOpenChestRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:sendOpenChestRqst");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:sendOpenChestRqst");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_sendOpenChestRqst'", nullptr);
            return 0;
        }
        cobj->sendOpenChestRqst(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:sendOpenChestRqst",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_sendOpenChestRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_removePropItem(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_removePropItem'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:removePropItem");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_removePropItem'", nullptr);
            return 0;
        }
        cobj->removePropItem(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:removePropItem",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_removePropItem'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_setExchange(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_setExchange'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "PropsControl:setExchange");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_setExchange'", nullptr);
            return 0;
        }
        cobj->setExchange(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:setExchange",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_setExchange'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_setPropItemShow(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_setPropItemShow'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "PropsControl:setPropItemShow");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_setPropItemShow'", nullptr);
            return 0;
        }
        cobj->setPropItemShow(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:setPropItemShow",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_setPropItemShow'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_getUsePropNum(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_getUsePropNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_getUsePropNum'", nullptr);
            return 0;
        }
        int ret = cobj->getUsePropNum();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:getUsePropNum",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_getUsePropNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_doFullPeopol(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_doFullPeopol'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        eCampType arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:doFullPeopol");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:doFullPeopol");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doFullPeopol'", nullptr);
            return 0;
        }
        cobj->doFullPeopol(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:doFullPeopol",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_doFullPeopol'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_initPvpProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_initPvpProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_initPvpProp'", nullptr);
            return 0;
        }
        cobj->initPvpProp();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:initPvpProp",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_initPvpProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_clean(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_clean'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_clean'", nullptr);
            return 0;
        }
        cobj->clean();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:clean",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_clean'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_doProp(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_doProp'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        cocos2d::Vec2 arg0;
        eCampType arg1;

        ok &= luaval_to_vec2(tolua_S, 2, &arg0, "PropsControl:doProp");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:doProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doProp'", nullptr);
            return 0;
        }
        bool ret = cobj->doProp(arg0, arg1);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    if (argc == 3) 
    {
        cocos2d::Vec2 arg0;
        eCampType arg1;
        bool arg2;

        ok &= luaval_to_vec2(tolua_S, 2, &arg0, "PropsControl:doProp");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "PropsControl:doProp");

        ok &= luaval_to_boolean(tolua_S, 4,&arg2, "PropsControl:doProp");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_doProp'", nullptr);
            return 0;
        }
        bool ret = cobj->doProp(arg0, arg1, arg2);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:doProp",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_doProp'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_setCdTime(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"PropsControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (PropsControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_PropsControl_setCdTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "PropsControl:setCdTime");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_setCdTime'", nullptr);
            return 0;
        }
        cobj->setCdTime(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:setCdTime",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_setCdTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_PropsControl_constructor(lua_State* tolua_S)
{
    int argc = 0;
    PropsControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_PropsControl_constructor'", nullptr);
            return 0;
        }
        cobj = new PropsControl();
        tolua_pushusertype(tolua_S,(void*)cobj,"PropsControl");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "PropsControl:PropsControl",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_PropsControl_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_PropsControl_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (PropsControl)");
    return 0;
}

int lua_register_mgame_PropsControl(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"PropsControl");
    tolua_cclass(tolua_S,"PropsControl","PropsControl","MessageHandler",nullptr);

    tolua_beginmodule(tolua_S,"PropsControl");
        tolua_function(tolua_S,"new",lua_mgame_PropsControl_constructor);
        tolua_function(tolua_S,"doCookingSolider",lua_mgame_PropsControl_doCookingSolider);
        tolua_function(tolua_S,"doExchange",lua_mgame_PropsControl_doExchange);
        tolua_function(tolua_S,"chechCdTimeOver",lua_mgame_PropsControl_chechCdTimeOver);
        tolua_function(tolua_S,"getSelectPropNum",lua_mgame_PropsControl_getSelectPropNum);
        tolua_function(tolua_S,"doAddTime",lua_mgame_PropsControl_doAddTime);
        tolua_function(tolua_S,"setProp",lua_mgame_PropsControl_setProp);
        tolua_function(tolua_S,"checkIsCdTime",lua_mgame_PropsControl_checkIsCdTime);
        tolua_function(tolua_S,"updatePropItemShow",lua_mgame_PropsControl_updatePropItemShow);
        tolua_function(tolua_S,"doInvisibility",lua_mgame_PropsControl_doInvisibility);
        tolua_function(tolua_S,"stopPropTipsAni",lua_mgame_PropsControl_stopPropTipsAni);
        tolua_function(tolua_S,"clearGuideProp",lua_mgame_PropsControl_clearGuideProp);
        tolua_function(tolua_S,"initGuideProp",lua_mgame_PropsControl_initGuideProp);
        tolua_function(tolua_S,"cleanCdTime",lua_mgame_PropsControl_cleanCdTime);
        tolua_function(tolua_S,"doOil",lua_mgame_PropsControl_doOil);
        tolua_function(tolua_S,"propEvetCancel",lua_mgame_PropsControl_propEvetCancel);
        tolua_function(tolua_S,"getCurPropType",lua_mgame_PropsControl_getCurPropType);
        tolua_function(tolua_S,"isPropIng",lua_mgame_PropsControl_isPropIng);
        tolua_function(tolua_S,"sendUsePropRqst",lua_mgame_PropsControl_sendUsePropRqst);
        tolua_function(tolua_S,"init",lua_mgame_PropsControl_init);
        tolua_function(tolua_S,"doUseGuideProp",lua_mgame_PropsControl_doUseGuideProp);
        tolua_function(tolua_S,"updatePropTips",lua_mgame_PropsControl_updatePropTips);
        tolua_function(tolua_S,"setTouchPos",lua_mgame_PropsControl_setTouchPos);
        tolua_function(tolua_S,"checkPropInLevel",lua_mgame_PropsControl_checkPropInLevel);
        tolua_function(tolua_S,"doFreeze",lua_mgame_PropsControl_doFreeze);
        tolua_function(tolua_S,"textCallBack",lua_mgame_PropsControl_textCallBack);
        tolua_function(tolua_S,"getCurPropId",lua_mgame_PropsControl_getCurPropId);
        tolua_function(tolua_S,"addGuideProp",lua_mgame_PropsControl_addGuideProp);
        tolua_function(tolua_S,"showNoticeText",lua_mgame_PropsControl_showNoticeText);
        tolua_function(tolua_S,"initNeedTipProp",lua_mgame_PropsControl_initNeedTipProp);
        tolua_function(tolua_S,"hasPropInLevel",lua_mgame_PropsControl_hasPropInLevel);
        tolua_function(tolua_S,"sendBuyPropRqst",lua_mgame_PropsControl_sendBuyPropRqst);
        tolua_function(tolua_S,"update",lua_mgame_PropsControl_update);
        tolua_function(tolua_S,"hideOtherItem",lua_mgame_PropsControl_hideOtherItem);
        tolua_function(tolua_S,"getSelectGuideProp",lua_mgame_PropsControl_getSelectGuideProp);
        tolua_function(tolua_S,"showOrHideAimEffect",lua_mgame_PropsControl_showOrHideAimEffect);
        tolua_function(tolua_S,"getExchange",lua_mgame_PropsControl_getExchange);
        tolua_function(tolua_S,"addPropItem",lua_mgame_PropsControl_addPropItem);
        tolua_function(tolua_S,"initSaveProp",lua_mgame_PropsControl_initSaveProp);
        tolua_function(tolua_S,"updatePropItem",lua_mgame_PropsControl_updatePropItem);
        tolua_function(tolua_S,"getTouchPos",lua_mgame_PropsControl_getTouchPos);
        tolua_function(tolua_S,"initPropCd",lua_mgame_PropsControl_initPropCd);
        tolua_function(tolua_S,"setSelectGuideProp",lua_mgame_PropsControl_setSelectGuideProp);
        tolua_function(tolua_S,"prePropEvet",lua_mgame_PropsControl_prePropEvet);
        tolua_function(tolua_S,"getPosPropId",lua_mgame_PropsControl_getPosPropId);
        tolua_function(tolua_S,"sendOpenChestRqst",lua_mgame_PropsControl_sendOpenChestRqst);
        tolua_function(tolua_S,"removePropItem",lua_mgame_PropsControl_removePropItem);
        tolua_function(tolua_S,"setExchange",lua_mgame_PropsControl_setExchange);
        tolua_function(tolua_S,"setPropItemShow",lua_mgame_PropsControl_setPropItemShow);
        tolua_function(tolua_S,"getUsePropNum",lua_mgame_PropsControl_getUsePropNum);
        tolua_function(tolua_S,"doFullPeopol",lua_mgame_PropsControl_doFullPeopol);
        tolua_function(tolua_S,"initPvpProp",lua_mgame_PropsControl_initPvpProp);
        tolua_function(tolua_S,"clean",lua_mgame_PropsControl_clean);
        tolua_function(tolua_S,"doProp",lua_mgame_PropsControl_doProp);
        tolua_function(tolua_S,"setCdTime",lua_mgame_PropsControl_setCdTime);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(PropsControl).name();
    g_luaType[typeName] = "PropsControl";
    g_typeCast["PropsControl"] = "PropsControl";
    return 1;
}

int lua_mgame_SevenGoalControl_sendRetriveSevenGoalRqst(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_sendRetriveSevenGoalRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "SevenGoalControl:sendRetriveSevenGoalRqst");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_sendRetriveSevenGoalRqst'", nullptr);
            return 0;
        }
        cobj->sendRetriveSevenGoalRqst(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:sendRetriveSevenGoalRqst",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_sendRetriveSevenGoalRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_getNowNum(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_getNowNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_getNowNum'", nullptr);
            return 0;
        }
        int ret = cobj->getNowNum();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:getNowNum",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_getNowNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_setNowNum(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_setNowNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "SevenGoalControl:setNowNum");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_setNowNum'", nullptr);
            return 0;
        }
        cobj->setNowNum(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:setNowNum",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_setNowNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_setSevenGoalNodeState(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_setSevenGoalNodeState'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_setSevenGoalNodeState'", nullptr);
            return 0;
        }
        cobj->setSevenGoalNodeState();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:setSevenGoalNodeState",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_setSevenGoalNodeState'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_setIsRetrived(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_setIsRetrived'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "SevenGoalControl:setIsRetrived");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_setIsRetrived'", nullptr);
            return 0;
        }
        cobj->setIsRetrived(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:setIsRetrived",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_setIsRetrived'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_getNextNum(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_getNextNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_getNextNum'", nullptr);
            return 0;
        }
        int ret = cobj->getNextNum();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:getNextNum",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_getNextNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_sendGetSevenGoalListRqst(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_sendGetSevenGoalListRqst'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_sendGetSevenGoalListRqst'", nullptr);
            return 0;
        }
        cobj->sendGetSevenGoalListRqst();
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:sendGetSevenGoalListRqst",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_sendGetSevenGoalListRqst'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_setNextNum(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_setNextNum'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "SevenGoalControl:setNextNum");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_setNextNum'", nullptr);
            return 0;
        }
        cobj->setNextNum(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:setNextNum",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_setNextNum'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_getNowDay(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_getNowDay'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_getNowDay'", nullptr);
            return 0;
        }
        int ret = cobj->getNowDay();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:getNowDay",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_getNowDay'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_getIsRetrived(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_getIsRetrived'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_getIsRetrived'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsRetrived();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:getIsRetrived",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_getIsRetrived'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_setNowDay(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"SevenGoalControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (SevenGoalControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_SevenGoalControl_setNowDay'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "SevenGoalControl:setNowDay");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_setNowDay'", nullptr);
            return 0;
        }
        cobj->setNowDay(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:setNowDay",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_setNowDay'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_SevenGoalControl_constructor(lua_State* tolua_S)
{
    int argc = 0;
    SevenGoalControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_SevenGoalControl_constructor'", nullptr);
            return 0;
        }
        cobj = new SevenGoalControl();
        tolua_pushusertype(tolua_S,(void*)cobj,"SevenGoalControl");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "SevenGoalControl:SevenGoalControl",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_SevenGoalControl_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_SevenGoalControl_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (SevenGoalControl)");
    return 0;
}

int lua_register_mgame_SevenGoalControl(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"SevenGoalControl");
    tolua_cclass(tolua_S,"SevenGoalControl","SevenGoalControl","",nullptr);

    tolua_beginmodule(tolua_S,"SevenGoalControl");
        tolua_function(tolua_S,"new",lua_mgame_SevenGoalControl_constructor);
        tolua_function(tolua_S,"sendRetriveSevenGoalRqst",lua_mgame_SevenGoalControl_sendRetriveSevenGoalRqst);
        tolua_function(tolua_S,"getNowNum",lua_mgame_SevenGoalControl_getNowNum);
        tolua_function(tolua_S,"setNowNum",lua_mgame_SevenGoalControl_setNowNum);
        tolua_function(tolua_S,"setSevenGoalNodeState",lua_mgame_SevenGoalControl_setSevenGoalNodeState);
        tolua_function(tolua_S,"setIsRetrived",lua_mgame_SevenGoalControl_setIsRetrived);
        tolua_function(tolua_S,"getNextNum",lua_mgame_SevenGoalControl_getNextNum);
        tolua_function(tolua_S,"sendGetSevenGoalListRqst",lua_mgame_SevenGoalControl_sendGetSevenGoalListRqst);
        tolua_function(tolua_S,"setNextNum",lua_mgame_SevenGoalControl_setNextNum);
        tolua_function(tolua_S,"getNowDay",lua_mgame_SevenGoalControl_getNowDay);
        tolua_function(tolua_S,"getIsRetrived",lua_mgame_SevenGoalControl_getIsRetrived);
        tolua_function(tolua_S,"setNowDay",lua_mgame_SevenGoalControl_setNowDay);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(SevenGoalControl).name();
    g_luaType[typeName] = "SevenGoalControl";
    g_typeCast["SevenGoalControl"] = "SevenGoalControl";
    return 1;
}

int lua_mgame_WinnerControl_getIsGet(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_getIsGet'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_getIsGet'", nullptr);
            return 0;
        }
        bool ret = cobj->getIsGet();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:getIsGet",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_getIsGet'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_getWinnerRoadOpen(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_getWinnerRoadOpen'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_getWinnerRoadOpen'", nullptr);
            return 0;
        }
        bool ret = cobj->getWinnerRoadOpen();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:getWinnerRoadOpen",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_getWinnerRoadOpen'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_getBtnRefresh(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_getBtnRefresh'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_getBtnRefresh'", nullptr);
            return 0;
        }
        bool ret = cobj->getBtnRefresh();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:getBtnRefresh",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_getBtnRefresh'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_setWinnerRoadOpen(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_setWinnerRoadOpen'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        unsigned long long arg0;

        #pragma warning NO CONVERSION TO NATIVE FOR unsigned long long
		ok = false;
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_setWinnerRoadOpen'", nullptr);
            return 0;
        }
        cobj->setWinnerRoadOpen(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:setWinnerRoadOpen",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_setWinnerRoadOpen'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_sendWinnerTip(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_sendWinnerTip'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        int arg0;
        int arg1;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "WinnerControl:sendWinnerTip");

        ok &= luaval_to_int32(tolua_S, 3,(int *)&arg1, "WinnerControl:sendWinnerTip");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_sendWinnerTip'", nullptr);
            return 0;
        }
        cobj->sendWinnerTip(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:sendWinnerTip",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_sendWinnerTip'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_sendTaskComplete(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_sendTaskComplete'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "WinnerControl:sendTaskComplete");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_sendTaskComplete'", nullptr);
            return 0;
        }
        cobj->sendTaskComplete(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:sendTaskComplete",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_sendTaskComplete'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_checkCanOpen(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_checkCanOpen'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "WinnerControl:checkCanOpen");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_checkCanOpen'", nullptr);
            return 0;
        }
        bool ret = cobj->checkCanOpen(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:checkCanOpen",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_checkCanOpen'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_getWinnerActOpen(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_getWinnerActOpen'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "WinnerControl:getWinnerActOpen");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_getWinnerActOpen'", nullptr);
            return 0;
        }
        bool ret = cobj->getWinnerActOpen(arg0);
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:getWinnerActOpen",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_getWinnerActOpen'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_getCanGet(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_getCanGet'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_getCanGet'", nullptr);
            return 0;
        }
        bool ret = cobj->getCanGet();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:getCanGet",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_getCanGet'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_setWinnerCount(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_setWinnerCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "WinnerControl:setWinnerCount");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_setWinnerCount'", nullptr);
            return 0;
        }
        cobj->setWinnerCount(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:setWinnerCount",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_setWinnerCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_getGetWinnerCount(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_getGetWinnerCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_getGetWinnerCount'", nullptr);
            return 0;
        }
        int ret = cobj->getGetWinnerCount();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:getGetWinnerCount",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_getGetWinnerCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_setGetWinnerCount(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_setGetWinnerCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        int arg0;

        ok &= luaval_to_int32(tolua_S, 2,(int *)&arg0, "WinnerControl:setGetWinnerCount");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_setGetWinnerCount'", nullptr);
            return 0;
        }
        cobj->setGetWinnerCount(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:setGetWinnerCount",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_setGetWinnerCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_getWinnerCount(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_getWinnerCount'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_getWinnerCount'", nullptr);
            return 0;
        }
        int ret = cobj->getWinnerCount();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:getWinnerCount",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_getWinnerCount'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_setBtnRefresh(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_setBtnRefresh'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "WinnerControl:setBtnRefresh");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_setBtnRefresh'", nullptr);
            return 0;
        }
        cobj->setBtnRefresh(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:setBtnRefresh",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_setBtnRefresh'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_setIsGet(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"WinnerControl",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (WinnerControl*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_WinnerControl_setIsGet'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "WinnerControl:setIsGet");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_setIsGet'", nullptr);
            return 0;
        }
        cobj->setIsGet(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:setIsGet",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_setIsGet'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_WinnerControl_constructor(lua_State* tolua_S)
{
    int argc = 0;
    WinnerControl* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_WinnerControl_constructor'", nullptr);
            return 0;
        }
        cobj = new WinnerControl();
        tolua_pushusertype(tolua_S,(void*)cobj,"WinnerControl");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "WinnerControl:WinnerControl",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_WinnerControl_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_WinnerControl_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (WinnerControl)");
    return 0;
}

int lua_register_mgame_WinnerControl(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"WinnerControl");
    tolua_cclass(tolua_S,"WinnerControl","WinnerControl","",nullptr);

    tolua_beginmodule(tolua_S,"WinnerControl");
        tolua_function(tolua_S,"new",lua_mgame_WinnerControl_constructor);
        tolua_function(tolua_S,"getIsGet",lua_mgame_WinnerControl_getIsGet);
        tolua_function(tolua_S,"getWinnerRoadOpen",lua_mgame_WinnerControl_getWinnerRoadOpen);
        tolua_function(tolua_S,"getBtnRefresh",lua_mgame_WinnerControl_getBtnRefresh);
        tolua_function(tolua_S,"setWinnerRoadOpen",lua_mgame_WinnerControl_setWinnerRoadOpen);
        tolua_function(tolua_S,"sendWinnerTip",lua_mgame_WinnerControl_sendWinnerTip);
        tolua_function(tolua_S,"sendTaskComplete",lua_mgame_WinnerControl_sendTaskComplete);
        tolua_function(tolua_S,"checkCanOpen",lua_mgame_WinnerControl_checkCanOpen);
        tolua_function(tolua_S,"getWinnerActOpen",lua_mgame_WinnerControl_getWinnerActOpen);
        tolua_function(tolua_S,"getCanGet",lua_mgame_WinnerControl_getCanGet);
        tolua_function(tolua_S,"setWinnerCount",lua_mgame_WinnerControl_setWinnerCount);
        tolua_function(tolua_S,"getGetWinnerCount",lua_mgame_WinnerControl_getGetWinnerCount);
        tolua_function(tolua_S,"setGetWinnerCount",lua_mgame_WinnerControl_setGetWinnerCount);
        tolua_function(tolua_S,"getWinnerCount",lua_mgame_WinnerControl_getWinnerCount);
        tolua_function(tolua_S,"setBtnRefresh",lua_mgame_WinnerControl_setBtnRefresh);
        tolua_function(tolua_S,"setIsGet",lua_mgame_WinnerControl_setIsGet);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(WinnerControl).name();
    g_luaType[typeName] = "WinnerControl";
    g_typeCast["WinnerControl"] = "WinnerControl";
    return 1;
}

int lua_mgame_HeadIconUtils_changeIcon(lua_State* tolua_S)
{
    int argc = 0;
    HeadIconUtils* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"HeadIconUtils",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (HeadIconUtils*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_HeadIconUtils_changeIcon'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 2) 
    {
        cocos2d::Node* arg0;
        std::string arg1;

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 2, "cc.Node",&arg0);

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "HeadIconUtils:changeIcon");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_HeadIconUtils_changeIcon'", nullptr);
            return 0;
        }
        cobj->changeIcon(arg0, arg1);
        lua_settop(tolua_S, 1);
        return 1;
    }
    if (argc == 3) 
    {
        cocos2d::Node* arg0;
        std::string arg1;
        int arg2;

        ok &= luaval_to_object<cocos2d::Node>(tolua_S, 2, "cc.Node",&arg0);

        ok &= luaval_to_std_string(tolua_S, 3,&arg1, "HeadIconUtils:changeIcon");

        ok &= luaval_to_int32(tolua_S, 4,(int *)&arg2, "HeadIconUtils:changeIcon");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_HeadIconUtils_changeIcon'", nullptr);
            return 0;
        }
        cobj->changeIcon(arg0, arg1, arg2);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "HeadIconUtils:changeIcon",argc, 2);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_HeadIconUtils_changeIcon'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_HeadIconUtils_constructor(lua_State* tolua_S)
{
    int argc = 0;
    HeadIconUtils* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_HeadIconUtils_constructor'", nullptr);
            return 0;
        }
        cobj = new HeadIconUtils();
        cobj->autorelease();
        int ID =  (int)cobj->_ID ;
        int* luaID =  &cobj->_luaID ;
        toluafix_pushusertype_ccobject(tolua_S, ID, luaID, (void*)cobj,"HeadIconUtils");
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "HeadIconUtils:HeadIconUtils",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_HeadIconUtils_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_HeadIconUtils_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (HeadIconUtils)");
    return 0;
}

int lua_register_mgame_HeadIconUtils(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"HeadIconUtils");
    tolua_cclass(tolua_S,"HeadIconUtils","HeadIconUtils","cc.Node",nullptr);

    tolua_beginmodule(tolua_S,"HeadIconUtils");
        tolua_function(tolua_S,"new",lua_mgame_HeadIconUtils_constructor);
        tolua_function(tolua_S,"changeIcon",lua_mgame_HeadIconUtils_changeIcon);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(HeadIconUtils).name();
    g_luaType[typeName] = "HeadIconUtils";
    g_typeCast["HeadIconUtils"] = "HeadIconUtils";
    return 1;
}

int lua_mgame_topRankModel_Cpp_setTimeStar(lua_State* tolua_S)
{
    int argc = 0;
    topRankModel_Cpp* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"topRankModel_Cpp",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (topRankModel_Cpp*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_topRankModel_Cpp_setTimeStar'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "topRankModel_Cpp:setTimeStar");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_topRankModel_Cpp_setTimeStar'", nullptr);
            return 0;
        }
        cobj->setTimeStar(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "topRankModel_Cpp:setTimeStar",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_topRankModel_Cpp_setTimeStar'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_topRankModel_Cpp_setTimeWinStreak(lua_State* tolua_S)
{
    int argc = 0;
    topRankModel_Cpp* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"topRankModel_Cpp",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (topRankModel_Cpp*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_topRankModel_Cpp_setTimeWinStreak'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "topRankModel_Cpp:setTimeWinStreak");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_topRankModel_Cpp_setTimeWinStreak'", nullptr);
            return 0;
        }
        cobj->setTimeWinStreak(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "topRankModel_Cpp:setTimeWinStreak",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_topRankModel_Cpp_setTimeWinStreak'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_topRankModel_Cpp_setTimeWin(lua_State* tolua_S)
{
    int argc = 0;
    topRankModel_Cpp* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"topRankModel_Cpp",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (topRankModel_Cpp*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_topRankModel_Cpp_setTimeWin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        double arg0;

        ok &= luaval_to_number(tolua_S, 2,&arg0, "topRankModel_Cpp:setTimeWin");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_topRankModel_Cpp_setTimeWin'", nullptr);
            return 0;
        }
        cobj->setTimeWin(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "topRankModel_Cpp:setTimeWin",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_topRankModel_Cpp_setTimeWin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_topRankModel_Cpp_getForceUpdateTime(lua_State* tolua_S)
{
    int argc = 0;
    topRankModel_Cpp* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"topRankModel_Cpp",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (topRankModel_Cpp*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_topRankModel_Cpp_getForceUpdateTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_topRankModel_Cpp_getForceUpdateTime'", nullptr);
            return 0;
        }
        bool ret = cobj->getForceUpdateTime();
        tolua_pushboolean(tolua_S,(bool)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "topRankModel_Cpp:getForceUpdateTime",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_topRankModel_Cpp_getForceUpdateTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_topRankModel_Cpp_getTimeWin(lua_State* tolua_S)
{
    int argc = 0;
    topRankModel_Cpp* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"topRankModel_Cpp",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (topRankModel_Cpp*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_topRankModel_Cpp_getTimeWin'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_topRankModel_Cpp_getTimeWin'", nullptr);
            return 0;
        }
        double ret = cobj->getTimeWin();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "topRankModel_Cpp:getTimeWin",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_topRankModel_Cpp_getTimeWin'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_topRankModel_Cpp_setForceUpdateTime(lua_State* tolua_S)
{
    int argc = 0;
    topRankModel_Cpp* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"topRankModel_Cpp",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (topRankModel_Cpp*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_topRankModel_Cpp_setForceUpdateTime'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 1) 
    {
        bool arg0;

        ok &= luaval_to_boolean(tolua_S, 2,&arg0, "topRankModel_Cpp:setForceUpdateTime");
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_topRankModel_Cpp_setForceUpdateTime'", nullptr);
            return 0;
        }
        cobj->setForceUpdateTime(arg0);
        lua_settop(tolua_S, 1);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "topRankModel_Cpp:setForceUpdateTime",argc, 1);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_topRankModel_Cpp_setForceUpdateTime'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_topRankModel_Cpp_getTimeWinStreak(lua_State* tolua_S)
{
    int argc = 0;
    topRankModel_Cpp* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"topRankModel_Cpp",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (topRankModel_Cpp*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_topRankModel_Cpp_getTimeWinStreak'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_topRankModel_Cpp_getTimeWinStreak'", nullptr);
            return 0;
        }
        double ret = cobj->getTimeWinStreak();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "topRankModel_Cpp:getTimeWinStreak",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_topRankModel_Cpp_getTimeWinStreak'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_topRankModel_Cpp_getTimeStar(lua_State* tolua_S)
{
    int argc = 0;
    topRankModel_Cpp* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif


#if COCOS2D_DEBUG >= 1
    if (!tolua_isusertype(tolua_S,1,"topRankModel_Cpp",0,&tolua_err)) goto tolua_lerror;
#endif

    cobj = (topRankModel_Cpp*)tolua_tousertype(tolua_S,1,0);

#if COCOS2D_DEBUG >= 1
    if (!cobj) 
    {
        tolua_error(tolua_S,"invalid 'cobj' in function 'lua_mgame_topRankModel_Cpp_getTimeStar'", nullptr);
        return 0;
    }
#endif

    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_topRankModel_Cpp_getTimeStar'", nullptr);
            return 0;
        }
        double ret = cobj->getTimeStar();
        tolua_pushnumber(tolua_S,(lua_Number)ret);
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "topRankModel_Cpp:getTimeStar",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_topRankModel_Cpp_getTimeStar'.",&tolua_err);
#endif

    return 0;
}
int lua_mgame_topRankModel_Cpp_constructor(lua_State* tolua_S)
{
    int argc = 0;
    topRankModel_Cpp* cobj = nullptr;
    bool ok  = true;

#if COCOS2D_DEBUG >= 1
    tolua_Error tolua_err;
#endif



    argc = lua_gettop(tolua_S)-1;
    if (argc == 0) 
    {
        if(!ok)
        {
            tolua_error(tolua_S,"invalid arguments in function 'lua_mgame_topRankModel_Cpp_constructor'", nullptr);
            return 0;
        }
        cobj = new topRankModel_Cpp();
        tolua_pushusertype(tolua_S,(void*)cobj,"topRankModel_Cpp");
        tolua_register_gc(tolua_S,lua_gettop(tolua_S));
        return 1;
    }
    luaL_error(tolua_S, "%s has wrong number of arguments: %d, was expecting %d \n", "topRankModel_Cpp:topRankModel_Cpp",argc, 0);
    return 0;

#if COCOS2D_DEBUG >= 1
    tolua_error(tolua_S,"#ferror in function 'lua_mgame_topRankModel_Cpp_constructor'.",&tolua_err);
#endif

    return 0;
}

static int lua_mgame_topRankModel_Cpp_finalize(lua_State* tolua_S)
{
    printf("luabindings: finalizing LUA object (topRankModel_Cpp)");
    return 0;
}

int lua_register_mgame_topRankModel_Cpp(lua_State* tolua_S)
{
    tolua_usertype(tolua_S,"topRankModel_Cpp");
    tolua_cclass(tolua_S,"topRankModel_Cpp","topRankModel_Cpp","",nullptr);

    tolua_beginmodule(tolua_S,"topRankModel_Cpp");
        tolua_function(tolua_S,"new",lua_mgame_topRankModel_Cpp_constructor);
        tolua_function(tolua_S,"setTimeStar",lua_mgame_topRankModel_Cpp_setTimeStar);
        tolua_function(tolua_S,"setTimeWinStreak",lua_mgame_topRankModel_Cpp_setTimeWinStreak);
        tolua_function(tolua_S,"setTimeWin",lua_mgame_topRankModel_Cpp_setTimeWin);
        tolua_function(tolua_S,"getForceUpdateTime",lua_mgame_topRankModel_Cpp_getForceUpdateTime);
        tolua_function(tolua_S,"getTimeWin",lua_mgame_topRankModel_Cpp_getTimeWin);
        tolua_function(tolua_S,"setForceUpdateTime",lua_mgame_topRankModel_Cpp_setForceUpdateTime);
        tolua_function(tolua_S,"getTimeWinStreak",lua_mgame_topRankModel_Cpp_getTimeWinStreak);
        tolua_function(tolua_S,"getTimeStar",lua_mgame_topRankModel_Cpp_getTimeStar);
    tolua_endmodule(tolua_S);
    std::string typeName = typeid(topRankModel_Cpp).name();
    g_luaType[typeName] = "topRankModel_Cpp";
    g_typeCast["topRankModel_Cpp"] = "topRankModel_Cpp";
    return 1;
}
TOLUA_API int register_all_mgame(lua_State* tolua_S)
{
	tolua_open(tolua_S);
	
	tolua_module(tolua_S,nullptr,0);
	tolua_beginmodule(tolua_S,nullptr);

	lua_register_mgame_TipsManager(tolua_S);
	lua_register_mgame_MessageHandler(tolua_S);
	lua_register_mgame_PageFunction(tolua_S);
	lua_register_mgame_FuncForLua(tolua_S);
	lua_register_mgame_PropInfo(tolua_S);
	lua_register_mgame_GradeData(tolua_S);
	lua_register_mgame_GameMessage(tolua_S);
	lua_register_mgame_MessageAchieveTip(tolua_S);
	lua_register_mgame_GuideManager(tolua_S);
	lua_register_mgame_PageBase(tolua_S);
	lua_register_mgame_Window(tolua_S);
	lua_register_mgame_RankingControl(tolua_S);
	lua_register_mgame_MessageManager(tolua_S);
	lua_register_mgame_LuaProxy(tolua_S);
	lua_register_mgame_CVTimeUtils(tolua_S);
	lua_register_mgame_BuffManager(tolua_S);
	lua_register_mgame_GlyphStuffData(tolua_S);
	lua_register_mgame_GameMessageFactory(tolua_S);
	lua_register_mgame_ExRichText(tolua_S);
	lua_register_mgame_LoginProxy(tolua_S);
	lua_register_mgame_TimeCalculator(tolua_S);
	lua_register_mgame_VipData(tolua_S);
	lua_register_mgame_topRankModel_Cpp(tolua_S);
	lua_register_mgame_HeadIconUtils(tolua_S);
	lua_register_mgame_GoodsInfo(tolua_S);
	lua_register_mgame_SoundManager(tolua_S);
	lua_register_mgame_ActionWindow(tolua_S);
	lua_register_mgame_ResManager(tolua_S);
	lua_register_mgame_BackPackControl(tolua_S);
	lua_register_mgame_GenerlDialog(tolua_S);
	lua_register_mgame_CommFunc(tolua_S);
	lua_register_mgame_UserObj(tolua_S);
	lua_register_mgame_NetManager(tolua_S);
	lua_register_mgame_TableManager(tolua_S);
	lua_register_mgame_GiftAward(tolua_S);
	lua_register_mgame_TextHelper(tolua_S);
	lua_register_mgame_GiftAwardDialog(tolua_S);
	lua_register_mgame_MoraleManager(tolua_S);
	lua_register_mgame_WinnerControl(tolua_S);
	lua_register_mgame_ChannelApi(tolua_S);
	lua_register_mgame_BattleRecordsManager(tolua_S);
	lua_register_mgame_NetPack(tolua_S);
	lua_register_mgame_SevenGoalControl(tolua_S);
	lua_register_mgame_PropsControl(tolua_S);

	tolua_endmodule(tolua_S);
	return 1;
}

